{"version":3,"file":"ko-writing.js","sources":["../node_modules/svelte/src/version.js","../node_modules/svelte/src/internal/disclose-version.js","../node_modules/svelte/src/internal/flags/index.js","../node_modules/svelte/src/internal/flags/legacy.js","../node_modules/svelte/src/constants.js","../node_modules/svelte/src/utils.js","../node_modules/esm-env/false.js","../node_modules/svelte/src/internal/shared/utils.js","../node_modules/svelte/src/internal/client/constants.js","../node_modules/svelte/src/internal/client/reactivity/equality.js","../node_modules/svelte/src/internal/client/errors.js","../node_modules/svelte/src/internal/client/reactivity/sources.js","../node_modules/svelte/src/internal/client/warnings.js","../node_modules/svelte/src/internal/client/dom/hydration.js","../node_modules/svelte/src/internal/client/proxy.js","../node_modules/svelte/src/internal/client/dom/operations.js","../node_modules/svelte/src/internal/client/reactivity/deriveds.js","../node_modules/svelte/src/internal/client/reactivity/effects.js","../node_modules/svelte/src/internal/client/dom/task.js","../node_modules/svelte/src/internal/shared/errors.js","../node_modules/svelte/src/internal/client/runtime.js","../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../node_modules/svelte/src/internal/client/dom/elements/events.js","../node_modules/svelte/src/internal/client/dom/reconciler.js","../node_modules/svelte/src/internal/client/dom/template.js","../node_modules/svelte/src/internal/client/render.js","../node_modules/svelte/src/internal/client/dom/blocks/if.js","../node_modules/svelte/src/internal/client/dom/css.js","../node_modules/svelte/src/internal/client/dom/elements/attributes.js","../node_modules/svelte/src/internal/client/timing.js","../node_modules/svelte/src/internal/client/loop.js","../node_modules/svelte/src/internal/client/dom/elements/transitions.js","../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js","../node_modules/svelte/src/internal/client/dom/legacy/misc.js","../node_modules/svelte/src/index-client.js","../node_modules/svelte/src/store/utils.js","../node_modules/svelte/src/store/shared/index.js","../node_modules/svelte/src/internal/client/reactivity/store.js","../node_modules/svelte/src/internal/client/reactivity/props.js","../node_modules/svelte/src/legacy/legacy-client.js","../node_modules/svelte/src/internal/client/dom/elements/custom-element.js","../src/model/char-state.ts","../src/model/canvas-config.ts","../src/model/stroke-evaluator.ts","../src/model/drawing-service.ts","../src/lib/audio.ts","../src/model/rect.ts","../src/model/region-block.ts","../src/model/patterns.ts","../src/model/canvas-handler.ts","../node_modules/svelte/src/transition/index.js","../src/SuccessPanel.svelte","../src/CanvasPanel.svelte","../node_modules/svelte-store-class/dist/index.js","../src/lib/hangul-utils.ts","../src/lib/word-store.ts","../src/ToleranceControl.svelte","../src/FeedbackPanel.svelte","../src/lib/tts.ts","../src/view/char-animation.ts","../src/SizeControl.svelte","../src/EmbeddedApp.svelte"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.19.0';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","export default false;\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tcomponent_context,\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tis_runes,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { ProxyMetadata, ProxyStateObject, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, component_context, active_effect } from './runtime.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tcomponent_context\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\n\tif (active_effect === null) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tchildren: null,\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\tif (parent_derived !== null) {\n\t\t(parent_derived.children ??= []).push(signal);\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nfunction destroy_derived_children(derived) {\n\tvar children = derived.children;\n\n\tif (children !== null) {\n\t\tderived.children = null;\n\n\t\tfor (var i = 0; i < children.length; i += 1) {\n\t\t\tvar child = children[i];\n\t\t\tif ((child.f & DERIVED) !== 0) {\n\t\t\t\tdestroy_derived(/** @type {Derived} */ (child));\n\t\t\t} else {\n\t\t\t\tdestroy_effect(/** @type {Effect} */ (child));\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_children(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived(derived) {\n\tdestroy_derived_children(derived);\n\tremove_reactions(derived, 0);\n\tset_signal_status(derived, DESTROYED);\n\n\tderived.v = derived.children = derived.deps = derived.ctx = derived.reactions = null;\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tcomponent_context,\n\tactive_effect,\n\tactive_reaction,\n\tdev_current_component_function,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { destroy_derived } from './deriveds.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tderiveds: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.children ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\tif (active_reaction === null) {\n\t\treturn false;\n\t}\n\n\t// If it's skipped, that's because we're inside an unowned\n\t// that is not being tracked by another reaction\n\treturn !skip_reaction;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function template_effect(fn) {\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\treturn block(fn);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_effect_deriveds(signal) {\n\tvar deriveds = signal.deriveds;\n\n\tif (deriveds !== null) {\n\t\tsignal.deriveds = null;\n\n\t\tfor (var i = 0; i < deriveds.length; i += 1) {\n\t\t\tdestroy_derived(deriveds[i]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tdestroy_effect_deriveds(effect);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\tdestroy_effect_deriveds,\n\teffect,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { add_owner } from './dev/ownership.js';\nimport { internal_set, set, source } from './reactivity/sources.js';\nimport { destroy_derived, execute_derived, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\n// Handling runtime component context\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {number} [depth]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, depth = 0) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t/** @type {Derived} */ (reaction),\n\t\t\t\teffect,\n\t\t\t\tdepth + 1\n\t\t\t);\n\t\t} else if (effect === reaction) {\n\t\t\tif (depth === 0) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction = !is_flushing_effect && (flags & UNOWNED) !== 0;\n\tderived_sources = null;\n\tcomponent_context = reaction.ctx;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tcomponent_context = previous_component_context;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tdev_current_component_function = effect.component_function;\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\t\tdestroy_effect_deriveds(effect);\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = previous_component_fn;\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\t// If the derived is destroyed, just execute it again without retaining\n\t// its memoisation properties as the derived is stale\n\tif (is_derived && (flags & DESTROYED) !== 0) {\n\t\tvar value = execute_derived(/** @type {Derived} */ (signal));\n\t\t// Ensure the derived remains destroyed\n\t\tdestroy_derived(/** @type {Derived} */ (signal));\n\t\treturn value;\n\t}\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else {\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (is_derived && /** @type {Derived} */ (signal).deps === null) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\t\tvar target = derived;\n\n\t\twhile (parent !== null) {\n\t\t\t// Attach the derived to the nearest parent effect, if there are deriveds\n\t\t\t// in between then we also need to attach them too\n\t\t\tif ((parent.f & DERIVED) !== 0) {\n\t\t\t\tvar parent_derived = /** @type {Derived} */ (parent);\n\n\t\t\t\ttarget = parent_derived;\n\t\t\t\tparent = parent_derived.parent;\n\t\t\t} else {\n\t\t\t\tvar parent_effect = /** @type {Effect} */ (parent);\n\n\t\t\t\tif (!parent_effect.deriveds?.includes(target)) {\n\t\t\t\t\t(parent_effect.deriveds ??= []).push(target);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tconst previous_reaction = active_reaction;\n\ttry {\n\t\tactive_reaction = null;\n\t\treturn fn();\n\t} finally {\n\t\tactive_reaction = previous_reaction;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\tif (DEV) {\n\t\tconst fn = /** @type {ComponentContext} */ (component_context).function;\n\t\tif (fn) {\n\t\t\tadd_owner(result, fn, true);\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\n\tif (DEV) {\n\t\tconst fn = component_context?.function;\n\t\tif (fn) {\n\t\t\tfor (const value of context_map.values()) {\n\t\t\t\tadd_owner(value, fn, true);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(signal, d = 1) {\n\tvar value = get(signal);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(signal, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Value<T>} signal\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(signal, d = 1) {\n\tvar value = get(signal);\n\n\t// @ts-expect-error\n\treturn set(signal, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} options\n */\nexport function create_event(event_name, dom, handler, options) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} handler\n * @param {boolean} capture\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { push, pop, component_context, active_effect } from './runtime.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str == null ? '' : str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node) => void, flag?: boolean) => void) => void} fn\n * @param {boolean} [elseif] True if this is an `{:else if ...}` block rather than an `{#if ...}`, as that affects which transitions are considered 'local'\n * @returns {void}\n */\nexport function if_block(node, fn, elseif = false) {\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = elseif ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (/** @type {(anchor: Node) => void} */ fn, flag = true) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tconst is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { queue_micro_task } from './task.js';\nimport { register_style } from '../dev/css.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\tqueue_micro_task(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","import { DEV } from 'esm-env';\nimport { hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when its `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value;\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (key === '__value' || (key === 'value' && value != null)) {\n\t\t\t// @ts-ignore\n\t\t\telement.value = element[key] = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet prev = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = prev;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet prev = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = prev;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tif (hydrating && (name === 'src' || name === 'href' || name === 'srcset')) {\n\t\t\t\t\tif (!skip_warning) check_src_in_dev_hydration(element, name, value ?? '');\n\t\t\t\t} else {\n\t\t\t\t\tset_attribute(element, name, value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","/** @import { Raf } from '#client' */\nimport { noop } from '../shared/utils.js';\n\nimport { BROWSER } from 'esm-env';\n\nconst now = BROWSER ? () => performance.now() : () => Date.now();\n\n/** @type {Raf} */\nexport const raf = {\n\t// don't access requestAnimationFrame eagerly outside method\n\t// this allows basic testing of user code without JSDOM\n\t// bunder will eval and remove ternary when the user's app is built\n\ttick: /** @param {any} _ */ (_) => (BROWSER ? requestAnimationFrame : noop)(_),\n\tnow: () => now(),\n\ttasks: new Set()\n};\n","/** @import { TaskCallback, Task, TaskEntry } from '#client' */\nimport { raf } from './timing.js';\n\n// TODO move this into timing.js where it probably belongs\n\n/**\n * @returns {void}\n */\nfunction run_tasks() {\n\t// use `raf.now()` instead of the `requestAnimationFrame` callback argument, because\n\t// otherwise things can get wonky https://github.com/sveltejs/svelte/pull/14541\n\tconst now = raf.now();\n\n\traf.tasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\traf.tasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\n\tif (raf.tasks.size !== 0) {\n\t\traf.tick(run_tasks);\n\t}\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {TaskCallback} callback\n * @returns {Task}\n */\nexport function loop(callback) {\n\t/** @type {TaskEntry} */\n\tlet task;\n\n\tif (raf.tasks.size === 0) {\n\t\traf.tick(run_tasks);\n\t}\n\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\traf.tasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\traf.tasks.delete(task);\n\t\t}\n\t};\n}\n","/** @import { AnimateFn, Animation, AnimationConfig, EachItem, Effect, TransitionFn, TransitionManager } from '#client' */\nimport { noop, is_function } from '../../../shared/utils.js';\nimport { effect } from '../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from '../../runtime.js';\nimport { loop } from '../../loop.js';\nimport { should_intro } from '../../render.js';\nimport { current_each_item } from '../blocks/each.js';\nimport { TRANSITION_GLOBAL, TRANSITION_IN, TRANSITION_OUT } from '../../../../constants.js';\nimport { BLOCK_EFFECT, EFFECT_RAN, EFFECT_TRANSPARENT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\n\n/**\n * @param {Element} element\n * @param {'introstart' | 'introend' | 'outrostart' | 'outroend'} type\n * @returns {void}\n */\nfunction dispatch_event(element, type) {\n\telement.dispatchEvent(new CustomEvent(type));\n}\n\n/**\n * Converts a property to the camel-case format expected by Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes().\n * @param {string} style\n * @returns {string}\n */\nfunction css_property_to_camelcase(style) {\n\t// in compliance with spec\n\tif (style === 'float') return 'cssFloat';\n\tif (style === 'offset') return 'cssOffset';\n\n\t// do not rename custom @properties\n\tif (style.startsWith('--')) return style;\n\n\tconst parts = style.split('-');\n\tif (parts.length === 1) return parts[0];\n\treturn (\n\t\tparts[0] +\n\t\tparts\n\t\t\t.slice(1)\n\t\t\t.map(/** @param {any} word */ (word) => word[0].toUpperCase() + word.slice(1))\n\t\t\t.join('')\n\t);\n}\n\n/**\n * @param {string} css\n * @returns {Keyframe}\n */\nfunction css_to_keyframe(css) {\n\t/** @type {Keyframe} */\n\tconst keyframe = {};\n\tconst parts = css.split(';');\n\tfor (const part of parts) {\n\t\tconst [property, value] = part.split(':');\n\t\tif (!property || value === undefined) break;\n\n\t\tconst formatted_property = css_property_to_camelcase(property.trim());\n\t\tkeyframe[formatted_property] = value.trim();\n\t}\n\treturn keyframe;\n}\n\n/** @param {number} t */\nconst linear = (t) => t;\n\n/**\n * Called inside keyed `{#each ...}` blocks (as `$.animation(...)`). This creates an animation manager\n * and attaches it to the block, so that moves can be animated following reconciliation.\n * @template P\n * @param {Element} element\n * @param {() => AnimateFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n */\nexport function animation(element, get_fn, get_params) {\n\tvar item = /** @type {EachItem} */ (current_each_item);\n\n\t/** @type {DOMRect} */\n\tvar from;\n\n\t/** @type {DOMRect} */\n\tvar to;\n\n\t/** @type {Animation | undefined} */\n\tvar animation;\n\n\t/** @type {null | { position: string, width: string, height: string, transform: string }} */\n\tvar original_styles = null;\n\n\titem.a ??= {\n\t\telement,\n\t\tmeasure() {\n\t\t\tfrom = this.element.getBoundingClientRect();\n\t\t},\n\t\tapply() {\n\t\t\tanimation?.abort();\n\n\t\t\tto = this.element.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tfrom.left !== to.left ||\n\t\t\t\tfrom.right !== to.right ||\n\t\t\t\tfrom.top !== to.top ||\n\t\t\t\tfrom.bottom !== to.bottom\n\t\t\t) {\n\t\t\t\tconst options = get_fn()(this.element, { from, to }, get_params?.());\n\n\t\t\t\tanimation = animate(this.element, options, undefined, 1, () => {\n\t\t\t\t\tanimation?.abort();\n\t\t\t\t\tanimation = undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tfix() {\n\t\t\t// If an animation is already running, transforming the element is likely to fail,\n\t\t\t// because the styles applied by the animation take precedence. In the case of crossfade,\n\t\t\t// that means the `translate(...)` of the crossfade transition overrules the `translate(...)`\n\t\t\t// we would apply below, leading to the element jumping somewhere to the top left.\n\t\t\tif (element.getAnimations().length) return;\n\n\t\t\t// It's important to destructure these to get fixed values - the object itself has getters,\n\t\t\t// and changing the style to 'absolute' can for example influence the width.\n\t\t\tvar { position, width, height } = getComputedStyle(element);\n\n\t\t\tif (position !== 'absolute' && position !== 'fixed') {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\toriginal_styles = {\n\t\t\t\t\tposition: style.position,\n\t\t\t\t\twidth: style.width,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\ttransform: style.transform\n\t\t\t\t};\n\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.height = height;\n\t\t\t\tvar to = element.getBoundingClientRect();\n\n\t\t\t\tif (from.left !== to.left || from.top !== to.top) {\n\t\t\t\t\tvar transform = `translate(${from.left - to.left}px, ${from.top - to.top}px)`;\n\t\t\t\t\tstyle.transform = style.transform ? `${style.transform} ${transform}` : transform;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tunfix() {\n\t\t\tif (original_styles) {\n\t\t\t\tvar style = /** @type {HTMLElement | SVGElement} */ (element).style;\n\n\t\t\t\tstyle.position = original_styles.position;\n\t\t\t\tstyle.width = original_styles.width;\n\t\t\t\tstyle.height = original_styles.height;\n\t\t\t\tstyle.transform = original_styles.transform;\n\t\t\t}\n\t\t}\n\t};\n\n\t// in the case of a `<svelte:element>`, it's possible for `$.animation(...)` to be called\n\t// when an animation manager already exists, if the tag changes. in that case, we need to\n\t// swap out the element rather than creating a new manager, in case it happened at the same\n\t// moment as a reconciliation\n\titem.a.element = element;\n}\n\n/**\n * Called inside block effects as `$.transition(...)`. This creates a transition manager and\n * attaches it to the current effect — later, inside `pause_effect` and `resume_effect`, we\n * use this to create `intro` and `outro` transitions.\n * @template P\n * @param {number} flags\n * @param {HTMLElement} element\n * @param {() => TransitionFn<P | undefined>} get_fn\n * @param {(() => P) | null} get_params\n * @returns {void}\n */\nexport function transition(flags, element, get_fn, get_params) {\n\tvar is_intro = (flags & TRANSITION_IN) !== 0;\n\tvar is_outro = (flags & TRANSITION_OUT) !== 0;\n\tvar is_both = is_intro && is_outro;\n\tvar is_global = (flags & TRANSITION_GLOBAL) !== 0;\n\n\t/** @type {'in' | 'out' | 'both'} */\n\tvar direction = is_both ? 'both' : is_intro ? 'in' : 'out';\n\n\t/** @type {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig) | undefined} */\n\tvar current_options;\n\n\tvar inert = element.inert;\n\n\t/**\n\t * The default overflow style, stashed so we can revert changes during the transition\n\t * that are necessary to work around a Safari <18 bug\n\t * TODO 6.0 remove this, if older versions of Safari have died out enough\n\t */\n\tvar overflow = element.style.overflow;\n\n\t/** @type {Animation | undefined} */\n\tvar intro;\n\n\t/** @type {Animation | undefined} */\n\tvar outro;\n\n\tfunction get_options() {\n\t\tvar previous_reaction = active_reaction;\n\t\tvar previous_effect = active_effect;\n\t\tset_active_reaction(null);\n\t\tset_active_effect(null);\n\t\ttry {\n\t\t\t// If a transition is still ongoing, we use the existing options rather than generating\n\t\t\t// new ones. This ensures that reversible transitions reverse smoothly, rather than\n\t\t\t// jumping to a new spot because (for example) a different `duration` was used\n\t\t\treturn (current_options ??= get_fn()(element, get_params?.() ?? /** @type {P} */ ({}), {\n\t\t\t\tdirection\n\t\t\t}));\n\t\t} finally {\n\t\t\tset_active_reaction(previous_reaction);\n\t\t\tset_active_effect(previous_effect);\n\t\t}\n\t}\n\n\t/** @type {TransitionManager} */\n\tvar transition = {\n\t\tis_global,\n\t\tin() {\n\t\t\telement.inert = inert;\n\n\t\t\tif (!is_intro) {\n\t\t\t\toutro?.abort();\n\t\t\t\toutro?.reset?.();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!is_outro) {\n\t\t\t\t// if we intro then outro then intro again, we want to abort the first intro,\n\t\t\t\t// if it's not a bidirectional transition\n\t\t\t\tintro?.abort();\n\t\t\t}\n\n\t\t\tdispatch_event(element, 'introstart');\n\n\t\t\tintro = animate(element, get_options(), outro, 1, () => {\n\t\t\t\tdispatch_event(element, 'introend');\n\n\t\t\t\t// Ensure we cancel the animation to prevent leaking\n\t\t\t\tintro?.abort();\n\t\t\t\tintro = current_options = undefined;\n\n\t\t\t\telement.style.overflow = overflow;\n\t\t\t});\n\t\t},\n\t\tout(fn) {\n\t\t\tif (!is_outro) {\n\t\t\t\tfn?.();\n\t\t\t\tcurrent_options = undefined;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\telement.inert = true;\n\n\t\t\tdispatch_event(element, 'outrostart');\n\n\t\t\toutro = animate(element, get_options(), intro, 0, () => {\n\t\t\t\tdispatch_event(element, 'outroend');\n\t\t\t\tfn?.();\n\t\t\t});\n\t\t},\n\t\tstop: () => {\n\t\t\tintro?.abort();\n\t\t\toutro?.abort();\n\t\t}\n\t};\n\n\tvar e = /** @type {Effect} */ (active_effect);\n\n\t(e.transitions ??= []).push(transition);\n\n\t// if this is a local transition, we only want to run it if the parent (branch) effect's\n\t// parent (block) effect is where the state change happened. we can determine that by\n\t// looking at whether the block effect is currently initializing\n\tif (is_intro && should_intro) {\n\t\tvar run = is_global;\n\n\t\tif (!run) {\n\t\t\tvar block = /** @type {Effect | null} */ (e.parent);\n\n\t\t\t// skip over transparent blocks (e.g. snippets, else-if blocks)\n\t\t\twhile (block && (block.f & EFFECT_TRANSPARENT) !== 0) {\n\t\t\t\twhile ((block = block.parent)) {\n\t\t\t\t\tif ((block.f & BLOCK_EFFECT) !== 0) break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trun = !block || (block.f & EFFECT_RAN) !== 0;\n\t\t}\n\n\t\tif (run) {\n\t\t\teffect(() => {\n\t\t\t\tuntrack(() => transition.in());\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Animates an element, according to the provided configuration\n * @param {Element} element\n * @param {AnimationConfig | ((opts: { direction: 'in' | 'out' }) => AnimationConfig)} options\n * @param {Animation | undefined} counterpart The corresponding intro/outro to this outro/intro\n * @param {number} t2 The target `t` value — `1` for intro, `0` for outro\n * @param {(() => void)} on_finish Called after successfully completing the animation\n * @returns {Animation}\n */\nfunction animate(element, options, counterpart, t2, on_finish) {\n\tvar is_intro = t2 === 1;\n\n\tif (is_function(options)) {\n\t\t// In the case of a deferred transition (such as `crossfade`), `option` will be\n\t\t// a function rather than an `AnimationConfig`. We need to call this function\n\t\t// once the DOM has been updated...\n\t\t/** @type {Animation} */\n\t\tvar a;\n\t\tvar aborted = false;\n\n\t\tqueue_micro_task(() => {\n\t\t\tif (aborted) return;\n\t\t\tvar o = options({ direction: is_intro ? 'in' : 'out' });\n\t\t\ta = animate(element, o, counterpart, t2, on_finish);\n\t\t});\n\n\t\t// ...but we want to do so without using `async`/`await` everywhere, so\n\t\t// we return a facade that allows everything to remain synchronous\n\t\treturn {\n\t\t\tabort: () => {\n\t\t\t\taborted = true;\n\t\t\t\ta?.abort();\n\t\t\t},\n\t\t\tdeactivate: () => a.deactivate(),\n\t\t\treset: () => a.reset(),\n\t\t\tt: () => a.t()\n\t\t};\n\t}\n\n\tcounterpart?.deactivate();\n\n\tif (!options?.duration) {\n\t\ton_finish();\n\n\t\treturn {\n\t\t\tabort: noop,\n\t\t\tdeactivate: noop,\n\t\t\treset: noop,\n\t\t\tt: () => t2\n\t\t};\n\t}\n\n\tconst { delay = 0, css, tick, easing = linear } = options;\n\n\tvar keyframes = [];\n\n\tif (is_intro && counterpart === undefined) {\n\t\tif (tick) {\n\t\t\ttick(0, 1); // TODO put in nested effect, to avoid interleaved reads/writes?\n\t\t}\n\n\t\tif (css) {\n\t\t\tvar styles = css_to_keyframe(css(0, 1));\n\t\t\tkeyframes.push(styles, styles);\n\t\t}\n\t}\n\n\tvar get_t = () => 1 - t2;\n\n\t// create a dummy animation that lasts as long as the delay (but with whatever devtools\n\t// multiplier is in effect). in the common case that it is `0`, we keep it anyway so that\n\t// the CSS keyframes aren't created until the DOM is updated\n\tvar animation = element.animate(keyframes, { duration: delay });\n\n\tanimation.onfinish = () => {\n\t\t// for bidirectional transitions, we start from the current position,\n\t\t// rather than doing a full intro/outro\n\t\tvar t1 = counterpart?.t() ?? 1 - t2;\n\t\tcounterpart?.abort();\n\n\t\tvar delta = t2 - t1;\n\t\tvar duration = /** @type {number} */ (options.duration) * Math.abs(delta);\n\t\tvar keyframes = [];\n\n\t\tif (duration > 0) {\n\t\t\t/**\n\t\t\t * Whether or not the CSS includes `overflow: hidden`, in which case we need to\n\t\t\t * add it as an inline style to work around a Safari <18 bug\n\t\t\t * TODO 6.0 remove this, if possible\n\t\t\t */\n\t\t\tvar needs_overflow_hidden = false;\n\n\t\t\tif (css) {\n\t\t\t\tvar n = Math.ceil(duration / (1000 / 60)); // `n` must be an integer, or we risk missing the `t2` value\n\n\t\t\t\tfor (var i = 0; i <= n; i += 1) {\n\t\t\t\t\tvar t = t1 + delta * easing(i / n);\n\t\t\t\t\tvar styles = css_to_keyframe(css(t, 1 - t));\n\t\t\t\t\tkeyframes.push(styles);\n\n\t\t\t\t\tneeds_overflow_hidden ||= styles.overflow === 'hidden';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (needs_overflow_hidden) {\n\t\t\t\t/** @type {HTMLElement} */ (element).style.overflow = 'hidden';\n\t\t\t}\n\n\t\t\tget_t = () => {\n\t\t\t\tvar time = /** @type {number} */ (\n\t\t\t\t\t/** @type {globalThis.Animation} */ (animation).currentTime\n\t\t\t\t);\n\n\t\t\t\treturn t1 + delta * easing(time / duration);\n\t\t\t};\n\n\t\t\tif (tick) {\n\t\t\t\tloop(() => {\n\t\t\t\t\tif (animation.playState !== 'running') return false;\n\n\t\t\t\t\tvar t = get_t();\n\t\t\t\t\ttick(t, 1 - t);\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tanimation = element.animate(keyframes, { duration, fill: 'forwards' });\n\n\t\tanimation.onfinish = () => {\n\t\t\tget_t = () => t2;\n\t\t\ttick?.(t2, 1 - t2);\n\t\t\ton_finish();\n\t\t};\n\t};\n\n\treturn {\n\t\tabort: () => {\n\t\t\tif (animation) {\n\t\t\t\tanimation.cancel();\n\t\t\t\t// This prevents memory leaks in Chromium\n\t\t\t\tanimation.effect = null;\n\t\t\t\t// This prevents onfinish to be launched after cancel(),\n\t\t\t\t// which can happen in some rare cases\n\t\t\t\t// see https://github.com/sveltejs/svelte/issues/13681\n\t\t\t\tanimation.onfinish = noop;\n\t\t\t}\n\t\t},\n\t\tdeactivate: () => {\n\t\t\ton_finish = noop;\n\t\t},\n\t\treset: () => {\n\t\t\tif (t2 === 0) {\n\t\t\t\ttick?.(1, 0);\n\t\t\t}\n\t\t},\n\t\tt: () => get_t()\n\t};\n}\n","import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { component_context, deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n","import { set, source } from '../../reactivity/sources.js';\nimport { get } from '../../runtime.js';\nimport { is_array } from '../../../shared/utils.js';\n\n/**\n * Under some circumstances, imports may be reactive in legacy mode. In that case,\n * they should be using `reactive_import` as part of the transformation\n * @param {() => any} fn\n */\nexport function reactive_import(fn) {\n\tvar s = source(0);\n\n\treturn function () {\n\t\tif (arguments.length === 1) {\n\t\t\tset(s, get(s) + 1);\n\t\t\treturn arguments[0];\n\t\t} else {\n\t\t\tget(s);\n\t\t\treturn fn();\n\t\t}\n\t};\n}\n\n/**\n * @this {any}\n * @param {Record<string, unknown>} $$props\n * @param {Event} event\n * @returns {void}\n */\nexport function bubble_event($$props, event) {\n\tvar events = /** @type {Record<string, Function[] | Function>} */ ($$props.$$events)?.[\n\t\tevent.type\n\t];\n\n\tvar callbacks = is_array(events) ? events.slice() : events == null ? [] : [events];\n\n\tfor (var fn of callbacks) {\n\t\t// Preserve \"this\" context\n\t\tfn.call(this, event);\n\t}\n}\n\n/**\n * Used to simulate `$on` on a component instance when `compatibility.componentApi === 4`\n * @param {Record<string, any>} $$props\n * @param {string} event_name\n * @param {Function} event_callback\n */\nexport function add_legacy_event_listener($$props, event_name, event_callback) {\n\t$$props.$$events ||= {};\n\t$$props.$$events[event_name] ||= [];\n\t$$props.$$events[event_name].push(event_callback);\n}\n\n/**\n * Used to simulate `$set` on a component instance when `compatibility.componentApi === 4`.\n * Needs component accessors so that it can call the setter of the prop. Therefore doesn't\n * work for updating props in `$$props` or `$$restProps`.\n * @this {Record<string, any>}\n * @param {Record<string, any>} $$new_props\n */\nexport function update_legacy_props($$new_props) {\n\tfor (var key in $$new_props) {\n\t\tif (key in this) {\n\t\t\tthis[key] = $$new_props[key];\n\t\t}\n\t}\n}\n","/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { component_context, flush_sync, untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside [server-side components](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead — see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\n/**\n * Synchronously flushes any pending state changes and those that result from it.\n * @param {() => void} [fn]\n * @returns {void}\n */\nexport function flushSync(fn) {\n\tflush_sync(fn);\n}\n\nexport { hydrate, mount, unmount } from './internal/client/render.js';\n\nexport {\n\tgetContext,\n\tgetAllContexts,\n\thasContext,\n\tsetContext,\n\ttick,\n\tuntrack\n} from './internal/client/runtime.js';\n\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n","/** @import { Readable } from './public' */\nimport { untrack } from '../index-client.js';\nimport { noop } from '../internal/shared/utils.js';\n\n/**\n * @template T\n * @param {Readable<T> | null | undefined} store\n * @param {(value: T) => void} run\n * @param {(value: T) => void} [invalidate]\n * @returns {() => void}\n */\nexport function subscribe_to_store(store, run, invalidate) {\n\tif (store == null) {\n\t\t// @ts-expect-error\n\t\trun(undefined);\n\n\t\t// @ts-expect-error\n\t\tif (invalidate) invalidate(undefined);\n\n\t\treturn noop;\n\t}\n\n\t// Svelte store takes a private second argument\n\t// StartStopNotifier could mutate state, and we want to silence the corresponding validation error\n\tconst unsub = untrack(() =>\n\t\tstore.subscribe(\n\t\t\trun,\n\t\t\t// @ts-expect-error\n\t\t\tinvalidate\n\t\t)\n\t);\n\n\t// Also support RxJS\n\t// @ts-expect-error TODO fix this in the types?\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n","/** @import { Readable, StartStopNotifier, Subscriber, Unsubscriber, Updater, Writable } from '../public.js' */\n/** @import { Stores, StoresValues, SubscribeInvalidateTuple } from '../private.js' */\nimport { noop, run_all } from '../../internal/shared/utils.js';\nimport { safe_not_equal } from '../../internal/client/reactivity/equality.js';\nimport { subscribe_to_store } from '../utils.js';\n\n/**\n * @type {Array<SubscribeInvalidateTuple<any> | any>}\n */\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * @template T\n * @param {T} [value] initial value\n * @param {StartStopNotifier<T>} [start]\n * @returns {Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {Unsubscriber | null} */\n\tlet stop = null;\n\n\t/** @type {Set<SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\n\t/**\n\t * @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(/** @type {T} */ (value)));\n\t}\n\n\t/**\n\t * @param {Subscriber<T>} run\n\t * @param {() => void} [invalidate]\n\t * @returns {Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(/** @type {T} */ (value));\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>, set: (value: T) => void, update: (fn: Updater<T>) => void) => Unsubscriber | void} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * @template {Stores} S\n * @template T\n * @overload\n * @param {S} stores\n * @param {(values: StoresValues<S>) => T} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\n/**\n * @template {Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\t/** @type {T[]} */\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = typeof result === 'function' ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe_to_store(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @template T\n * @param {Readable<T>} store  - store to make readonly\n * @returns {Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\t// @ts-expect-error TODO i suspect the bind is unnecessary\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * @template T\n * @param {Readable<T>} store\n * @returns {T}\n */\nexport function get(store) {\n\tlet value;\n\tsubscribe_to_store(store, (_) => (value = _))();\n\t// @ts-expect-error\n\treturn value;\n}\n","/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n","/** @import { Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport {\n\tactive_effect,\n\tget,\n\tcaptured_signals,\n\tset_active_effect,\n\tuntrack,\n\tupdate\n} from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport {\n\tBRANCH_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tLEGACY_PROPS,\n\tROOT_EFFECT,\n\tSTATE_SYMBOL\n} from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nfunction with_parent_branch(fn) {\n\tvar effect = active_effect;\n\tvar previous_effect = active_effect;\n\n\twhile (effect !== null && (effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0) {\n\t\teffect = effect.parent;\n\t}\n\ttry {\n\t\tset_active_effect(effect);\n\t\treturn fn();\n\t} finally {\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = with_parent_branch(() =>\n\t\t\t(immutable ? derived : derived_safe_equal)(() => /** @type {V} */ (props[key]))\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode — prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode — prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly — the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = with_parent_branch(() =>\n\t\tderived(() => {\n\t\t\tvar parent_value = getter();\n\t\t\tvar child_value = get(inner_current_value);\n\n\t\t\tif (from_child) {\n\t\t\t\tfrom_child = false;\n\t\t\t\twas_from_child = true;\n\t\t\t\treturn child_value;\n\t\t\t}\n\n\t\t\twas_from_child = false;\n\t\t\treturn (inner_current_value.v = parent_value);\n\t\t})\n\t);\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense — need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t\treturn get(current_value);\n\t};\n}\n","/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport {\n\tactive_effect,\n\tcomponent_context,\n\tdev_current_component_function,\n\tflush_sync,\n\tget,\n\tset_signal_status\n} from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flush_sync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n","import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n","// char-state.ts\nimport type { Jamo } from './jamo'\n\nexport class CharState {\n  private static instance: CharState\n  private nextChar: Jamo | undefined = undefined\n\n  private constructor() {}\n\n  static getInstance(): CharState {\n    if (!CharState.instance) {\n      CharState.instance = new CharState()\n    }\n    return CharState.instance\n  }\n\n  setNextChar(char: Jamo | undefined) {\n    this.nextChar = char\n  }\n\n  getNextChar(): Jamo | undefined {\n    return this.nextChar\n  }\n}\n","// import type { Jamo } from './jamo'\r\nimport type { Jaeum, Moeum, Jamo } from './jamo'\r\nimport { CharState } from './char-state'\r\n\r\nconst rightMoeum = ['ㅏ', 'ㅑ', 'ㅓ', 'ㅕ', 'ㅣ', 'ㅐ', 'ㅔ', 'ㅒ', 'ㅖ']\r\n\r\nexport class CanvasConfig {\r\n  constructor() {}\r\n}\r\n\r\nexport const CONFIG = {\r\n  canvas: {\r\n    width: 300,\r\n    height: 500\r\n  },\r\n  paths: {\r\n    guide: {\r\n      color: 'rgba(255, 140, 0, 0.8)',\r\n      width: 4,\r\n      dash: [5, 5]\r\n    },\r\n    drawing: {\r\n      color: '#0000FF',\r\n      width: 32,\r\n      cap: 'round',\r\n      join: 'round'\r\n    },\r\n    background: {\r\n      color: '#ffffff',\r\n      widthOffset: 60\r\n    }\r\n  },\r\n  startPoint: {\r\n    color: '#f08759',\r\n    radius: 15,\r\n    textColor: '#ffffff'\r\n  },\r\n  tolerance: 10,\r\n  minStrokeLength: 50,\r\n  animation: {\r\n    duration: 2000,\r\n    pathColor: 'rgba(255, 140, 0, 0.8)',\r\n    arrowColor: '#FF4500',\r\n    arrowSize: 12\r\n  }\r\n}\r\n\r\nexport interface PathCommand {\r\n  type: 'M' | 'L' | 'Q'\r\n  x?: number\r\n  y?: number\r\n  control?: { x: number; y: number }\r\n  end?: { x: number; y: number }\r\n}\r\n\r\nexport const CHAR_PATHS: Record<\r\n  Jamo,\r\n  {\r\n    strokes: number\r\n    calculateCoords: (w: number, h: number, x?: number, y?: number) => any\r\n  }\r\n> = {\r\n  WORD_MODE: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x: number = 0,\r\n      y: number = 0\r\n    ) => ({\r\n      stroke1: {\r\n        type: 'none' as const,\r\n        start: { x, y },\r\n        end: { x, y }\r\n      }\r\n    }),\r\n    strokes: 0\r\n  },\r\n  _: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x: number = 0,\r\n      y: number = 0\r\n    ) => ({\r\n      stroke1: {\r\n        type: 'none' as const,\r\n        start: { x, y },\r\n        end: { x, y }\r\n      }\r\n    }),\r\n    strokes: 0\r\n  },\r\n\r\n  ㄱ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const centerX = width / 2\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n      const nextChar = CharState.getInstance().getNextChar()\r\n      // console.log(nextChar)\r\n      // 다음 글자가 오른쪽 모음인 경우\r\n      if (nextChar && rightMoeum.includes(nextChar)) {\r\n        return {\r\n          stroke1: {\r\n            type: 'path',\r\n            start: { x: x + margin, y: y + topY },\r\n            middle: { x: x + width - margin, y: y + topY },\r\n            end: { x: x + margin * 1.2, y: y + bottomY },\r\n            commands: [\r\n              { type: 'M', x: x + margin, y: y + topY },\r\n              { type: 'L', x: x + width - margin, y: y + topY },\r\n              {\r\n                type: 'Q',\r\n                control: {\r\n                  x: x + centerX + margin * 0.6,\r\n                  y: y + (topY + bottomY) / 2\r\n                },\r\n                end: { x: x + margin * 1.2, y: y + bottomY }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          stroke1: {\r\n            type: 'line',\r\n            start: { x: x + width * 0.25, y: y + height * 0.25 },\r\n            middle: { x: x + width * 0.75, y: y + height * 0.25 },\r\n            end: { x: x + width * 0.75, y: y + height * 0.75 }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 1\r\n  },\r\n\r\n  ㄴ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 1\r\n  },\r\n  ㄷ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㄹ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅁ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + margin, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅂ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + margin, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n  ㅅ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const centerX = width / 2\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX + margin * 0.3, y: y + topY }, // 중앙에서 시작\r\n          control: { x: x + centerX, y: y + (topY + bottomY) / 2 }, // 왼쪽 곡선 제어점\r\n          end: { x: x + centerX - margin, y: y + bottomY } // 왼쪽 아래 끝점\r\n        },\r\n        stroke2: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX, y: y + (topY + bottomY) / 2 }, // 중앙에서 시작\r\n          control: { x: x + centerX, y: y + (topY + bottomY) / 2 }, // 오른쪽 곡선 제어점\r\n          end: { x: x + centerX + margin, y: y + bottomY } // 오른쪽 아래 끝점\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅇ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = x + width / 2\r\n      const centerY = y + height * 0.5\r\n      const radiusX = width * 0.25 // 가로 반지름\r\n      const radiusY = height * 0.25 // 세로 반지름\r\n      return {\r\n        stroke1: {\r\n          type: 'circle',\r\n          center: { x: centerX, y: centerY },\r\n          radiusX: radiusX,\r\n          radiusY: radiusY,\r\n          start: { x: centerX, y: centerY - radiusY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 1\r\n  },\r\n  ㅈ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const centerX = width / 2\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'path',\r\n          start: { x: x + centerX - margin * 0.9, y: y + topY },\r\n          middle: { x: x + centerX + margin * 0.8, y: y + topY }, // ㄱ자 모양의 꺾이는 지점\r\n          end: { x: x + centerX - margin, y: y + bottomY }, // 종료점은 곡선의 끝점\r\n          commands: [\r\n            { type: 'M', x: x + centerX - margin * 0.9, y: y + topY }, // 시작점\r\n            { type: 'L', x: x + centerX + margin * 0.8, y: y + topY }, // 가로선으로 이동\r\n            {\r\n              type: 'Q', // 첫 번째 곡선\r\n              control: {\r\n                x: x + centerX + margin * 0.4,\r\n                y: y + (topY + bottomY) / 2\r\n              },\r\n              end: { x: x + centerX - margin, y: y + bottomY }\r\n            }\r\n          ]\r\n        },\r\n        stroke2: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX + margin * 0.1,\r\n            y: y + (topY + bottomY) / 2 + margin * 0.1\r\n          },\r\n          control: {\r\n            x: x + centerX + margin * 0.1,\r\n            y: y + (topY + bottomY) / 2 + margin * 0.1\r\n          },\r\n          end: { x: x + centerX + margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅊ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const centerX = width / 2\r\n      const topY = height * 0.325\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX - margin / 2, y: y + height * 0.2 },\r\n          end: { x: x + centerX + margin / 2, y: y + height * 0.2 }\r\n        },\r\n        stroke2: {\r\n          type: 'path',\r\n          start: { x: x + centerX - margin * 0.9, y: y + topY },\r\n          middle: { x: x + centerX + margin * 0.8, y: y + topY },\r\n          end: { x: x + centerX - margin, y: y + bottomY },\r\n          commands: [\r\n            { type: 'M', x: x + centerX - margin * 0.9, y: y + topY }, // 시작점\r\n            { type: 'L', x: x + centerX + margin * 0.8, y: y + topY }, // 가로선으로 이동\r\n            {\r\n              type: 'Q', // 첫 번째 곡선\r\n              control: {\r\n                x: x + centerX + margin * 0.4,\r\n                y: y + (topY + bottomY) / 2\r\n              },\r\n              end: { x: x + centerX - margin, y: y + bottomY }\r\n            }\r\n          ]\r\n        },\r\n        stroke3: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX + margin * 0.1,\r\n            y: y + (topY + bottomY) / 2 + margin * 0.1\r\n          },\r\n          control: {\r\n            x: x + centerX + margin * 0.1,\r\n            y: y + (topY + bottomY) / 2 + margin * 0.1\r\n          },\r\n          end: { x: x + centerX + margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅋ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const centerX = width / 2\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n      const nextChar = CharState.getInstance().getNextChar()\r\n\r\n      if (nextChar && rightMoeum.includes(nextChar)) {\r\n        return {\r\n          stroke1: {\r\n            type: 'path',\r\n            start: { x: x + margin, y: y + topY },\r\n            middle: { x: x + width - margin, y: y + topY },\r\n            end: { x: x + margin * 1.2, y: y + bottomY },\r\n            commands: [\r\n              { type: 'M', x: x + margin, y: y + topY },\r\n              { type: 'L', x: x + width - margin, y: y + topY },\r\n              {\r\n                type: 'Q',\r\n                control: {\r\n                  x: x + centerX + margin * 0.6,\r\n                  y: y + (topY + bottomY) / 2\r\n                },\r\n                end: { x: x + margin * 1.2, y: y + bottomY }\r\n              }\r\n            ]\r\n          },\r\n          stroke2: {\r\n            type: 'line',\r\n            start: { x: x + margin, y: y + (topY + bottomY) / 2 - margin / 3 },\r\n            end: {\r\n              x: x + centerX + margin / 2,\r\n              y: y + (topY + bottomY) / 2 - margin / 3\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          stroke1: {\r\n            type: 'line',\r\n            start: { x: x + width * 0.25, y: y + height * 0.25 },\r\n            middle: { x: x + width * 0.75, y: y + height * 0.25 },\r\n            end: { x: x + width * 0.75, y: y + height * 0.75 }\r\n          },\r\n          stroke2: {\r\n            type: 'line',\r\n            start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n            end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅌ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.25\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅍ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.225\r\n      const centerX = width * 0.5\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX - margin * 0.5, y: y + topY },\r\n          end: { x: x + centerX - margin * 0.5, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + centerX + margin * 0.5, y: y + topY },\r\n          end: { x: x + centerX + margin * 0.5, y: y + bottomY }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n  ㅎ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      // const minDim = Math.min(width, height);\r\n      const margin = width * 0.25\r\n      const centerX = x + width / 2\r\n      const strokeWidth = CONFIG.paths.drawing.width\r\n\r\n      const topY = height * 0.2\r\n      const bottomY = height * 0.85\r\n      const totalHeight = bottomY - topY\r\n\r\n      // 각 요소의 y 좌표 계산\r\n      const baseRadius = Math.min(width * 0.225, height * 0.175)\r\n      const radiusX = Math.min(\r\n        width * 0.175,\r\n        baseRadius * 1.25 * (1 + (1 - height / width))\r\n      )\r\n      const radiusY = Math.min(height * 0.175, baseRadius)\r\n      const spacing = (totalHeight - (strokeWidth * 3 + radiusY * 2)) / 2\r\n\r\n      const firstStrokeY = topY\r\n      const secondStrokeY = firstStrokeY + strokeWidth + spacing\r\n      const ellipseTop = secondStrokeY + strokeWidth + spacing\r\n      const circleCenterY = ellipseTop + radiusY\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin * 1.5, y: y + firstStrokeY },\r\n          end: { x: x + width - margin * 1.5, y: y + firstStrokeY }\r\n          // start: { x: x + centerX - firstLineWidth / 2, y: y + firstStrokeY },\r\n          // end: { x: x + centerX + firstLineWidth / 2, y: y + firstStrokeY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + secondStrokeY },\r\n          end: { x: x + width - margin, y: y + secondStrokeY }\r\n          // start: { x: x + centerX - secondLineWidth / 2, y: y + secondStrokeY },\r\n          // end: { x: x + centerX + secondLineWidth / 2, y: y + secondStrokeY }\r\n        },\r\n        stroke3: {\r\n          type: 'circle',\r\n          center: { x: centerX, y: y + circleCenterY },\r\n          radiusX: radiusX,\r\n          radiusY: radiusY,\r\n          start: { x: centerX, y: y + ellipseTop }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㄲ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.15\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.05 // 두 ㄱ 사이의 간격\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n      const nextChar = CharState.getInstance().getNextChar()\r\n      // console.log(nextChar)\r\n\r\n      if (nextChar && rightMoeum.includes(nextChar)) {\r\n        return {\r\n          stroke1: {\r\n            type: 'path',\r\n            start: { x: x + margin, y: y + topY },\r\n            middle: { x: x + centerX - spacing, y: y + topY },\r\n            end: { x: x + centerX - spacing - width * 0.2, y: y + bottomY },\r\n            commands: [\r\n              { type: 'M', x: x + margin, y: y + topY },\r\n              { type: 'L', x: x + centerX - spacing, y: y + topY },\r\n              {\r\n                type: 'Q',\r\n                control: {\r\n                  x: x + centerX - spacing,\r\n                  y: y + (topY + bottomY) / 2\r\n                },\r\n                end: { x: x + centerX - spacing - width * 0.2, y: y + bottomY }\r\n              }\r\n            ]\r\n          },\r\n          stroke2: {\r\n            type: 'path',\r\n            start: { x: x + centerX + spacing, y: y + topY },\r\n            middle: { x: x + width - margin, y: y + topY },\r\n            end: {\r\n              x: x + width - margin - width * 0.2,\r\n              y: y + bottomY\r\n            },\r\n            commands: [\r\n              { type: 'M', x: x + centerX + spacing, y: y + topY },\r\n              { type: 'L', x: x + width - margin, y: y + topY },\r\n              {\r\n                type: 'Q',\r\n                control: { x: x + width - margin, y: y + (topY + bottomY) / 2 },\r\n                end: {\r\n                  x: x + width - margin - width * 0.2,\r\n                  y: y + bottomY\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      } else {\r\n        return {\r\n          // 첫 번째 ㄱ\r\n          stroke1: {\r\n            type: 'line',\r\n            start: { x: x + margin, y: y + topY },\r\n            middle: { x: x + centerX - spacing, y: y + topY },\r\n            end: { x: x + centerX - spacing, y: y + bottomY }\r\n          },\r\n          // 두 번째 ㄱ\r\n          stroke2: {\r\n            type: 'line',\r\n            start: { x: x + centerX + spacing, y: y + topY },\r\n            middle: { x: x + width - margin, y: y + topY },\r\n            end: { x: x + width - margin, y: y + bottomY }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n\r\n  ㄸ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.15\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // 첫 번째 ㄷ\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + topY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // 두 번째 ㄷ\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          middle: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅃ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.15\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // 첫 번째 ㅂ\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + margin, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // 두 번째 ㅂ\r\n        stroke5: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        stroke6: {\r\n          type: 'line',\r\n          start: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        },\r\n        stroke7: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke8: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 8\r\n  },\r\n\r\n  ㅆ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.15\r\n      const centerX1 = margin + (width - margin * 2) / 4\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // 첫 번째 ㅅ\r\n        stroke1: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX1 + margin * 0.4, y: y + topY },\r\n          control: { x: x + centerX1, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX1 - margin, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX1 - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX1 - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + centerX1 + margin * 0.9, y: y + bottomY }\r\n        },\r\n        // 두 번째 ㅅ\r\n        stroke3: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX2 + margin * 0.4, y: y + topY },\r\n          control: { x: x + centerX2, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX2 - margin, y: y + bottomY }\r\n        },\r\n        stroke4: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + centerX2 + margin * 0.9, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅉ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n\r\n      const margin = width * 0.15\r\n      // const availableWidth = width - (margin * 2)\r\n      const centerX1 = margin + (width - margin * 2) / 4\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // 첫 번째 ㅈ\r\n        stroke1: {\r\n          type: 'path',\r\n          start: { x: x + centerX1 - width * 0.15, y: y + topY },\r\n          middle: { x: x + centerX1 + width * 0.125, y: y + topY }, // ㄱ자 모양의 꺾이는 지점\r\n          end: { x: x + margin, y: y + bottomY }, // 종료점은 곡선의 끝점\r\n          commands: [\r\n            { type: 'M', x: x + centerX1 - width * 0.15, y: y + topY }, // 시작점\r\n            { type: 'L', x: x + centerX1 + width * 0.125, y: y + topY }, // 가로선으로 이동\r\n            {\r\n              type: 'Q', // 첫 번째 곡선\r\n              control: {\r\n                x: x + centerX1 + margin * 0.2,\r\n                y: y + (topY + bottomY) / 2\r\n              },\r\n              end: { x: x + margin, y: y + bottomY }\r\n            }\r\n          ]\r\n        },\r\n        stroke2: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX1 + margin * 0.2,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX1 + margin * 0.2,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + (centerX1 + margin * 0.9), y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'path',\r\n          start: { x: x + centerX2 - width * 0.125, y: y + topY },\r\n          middle: { x: x + centerX2 + width * 0.18, y: y + topY }, // ㄱ자 모양의 꺾이는 지점\r\n          end: { x: x + width * 0.5, y: y + bottomY }, // 종료점은 곡선의 끝점\r\n          commands: [\r\n            { type: 'M', x: x + centerX2 - width * 0.125, y: y + topY }, // 시작점\r\n            { type: 'L', x: x + centerX2 + width * 0.12, y: y + topY }, // 가로선으로 이동\r\n            {\r\n              type: 'Q', // 첫 번width * 0.5째 곡선\r\n              control: {\r\n                x: x + centerX2 + margin * 0.2,\r\n                y: y + (topY + bottomY) / 2\r\n              },\r\n              end: { x: x + width * 0.5, y: y + bottomY }\r\n            }\r\n          ]\r\n        },\r\n        stroke4: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 + margin * 0.2,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 + margin * 0.2,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅏ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number,\r\n      index?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      index = index || 0\r\n      const leftOffset = index * width\r\n      x += leftOffset\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX - width * 0.125, y: y + centerY + height * 0.3 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX - width * 0.125, y: y + centerY },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅑ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY + height * 0.3\r\n          }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.08\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.08\r\n          }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY + height * 0.08\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY + height * 0.08\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅓ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX - width * 0.125, y: y + centerY },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅕ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.08\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.08\r\n          }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY + height * 0.08\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY + height * 0.08\r\n          }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅗ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX, y: y + centerY - height * 0.125 },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.125 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.3,\r\n            y: y + centerY + height * 0.125\r\n          },\r\n          end: { x: x + centerX + width * 0.3, y: y + centerY + height * 0.125 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅛ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.08,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: {\r\n            x: x + centerX - width * 0.08,\r\n            y: y + +centerY + height * 0.125\r\n          }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.08,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.08,\r\n            y: y + +centerY + height * 0.125\r\n          }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.3,\r\n            y: y + centerY + height * 0.125\r\n          },\r\n          end: { x: x + centerX + width * 0.3, y: y + centerY + height * 0.125 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅜ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.3,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: { x: x + centerX + width * 0.3, y: y + centerY - height * 0.125 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX, y: y + centerY - height * 0.125 },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.125 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n  ㅠ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.3,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: { x: x + centerX + width * 0.3, y: y + centerY - height * 0.125 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.08,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: {\r\n            x: x + centerX - width * 0.08,\r\n            y: y + centerY + height * 0.125\r\n          }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.08,\r\n            y: y + centerY - height * 0.125\r\n          },\r\n          end: {\r\n            x: x + centerX + width * 0.08,\r\n            y: y + centerY + height * 0.125\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n  ㅡ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX - width * 0.3, y: y + centerY },\r\n          end: { x: x + centerX + width * 0.3, y: y + centerY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 1\r\n  },\r\n  ㅣ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX, y: y + centerY - height * 0.3 },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 1\r\n  },\r\n  ㅐ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX - width * 0.125, y: y + centerY + height * 0.3 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX - width * 0.125, y: y + centerY },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  ㅔ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + centerX - width * 0.15, y: y + centerY },\r\n          end: { x: x + centerX, y: y + centerY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX, y: y + centerY - height * 0.3 },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.3 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.15,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.15, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  ㅒ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX - width * 0.125, y: y + centerY + height * 0.3 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY - height * 0.1\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY - height * 0.1 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.125,\r\n            y: y + centerY + height * 0.1\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY + height * 0.1 }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.125,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.125, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅖ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const centerX = width * 0.5\r\n      const centerY = height * 0.5\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.15,\r\n            y: y + centerY - height * 0.1\r\n          },\r\n          end: { x: x + centerX, y: y + centerY - height * 0.1 }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX - width * 0.15,\r\n            y: y + centerY + height * 0.1\r\n          },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.1 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + centerX, y: y + centerY - height * 0.3 },\r\n          end: { x: x + centerX, y: y + centerY + height * 0.3 }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX + width * 0.15,\r\n            y: y + centerY - height * 0.3\r\n          },\r\n          end: { x: x + centerX + width * 0.15, y: y + centerY + height * 0.3 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n  // 복합 모음들의 좌표 계산 함수\r\n  ㅘ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅗ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅏ 부분 (35%\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 = margin + firstPartWidth + secondPartWidth / 2\r\n      const centerY = height * 0.5\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          // ㅗ의 세로 획\r\n          type: 'line',\r\n          start: { x: x + centerX1, y: y + centerY + margin },\r\n          end: { x: x + centerX1, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          // ㅗ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1 - (margin * 7) / 4,\r\n            y: y + bottomY\r\n          },\r\n          end: { x: x + centerX1 + (margin * 7) / 4, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          // ㅏ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - margin / 4,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + centerX2 - margin / 4, y: y + bottomY + margin / 2 }\r\n        },\r\n        stroke4: {\r\n          // ㅏ의 가로 획\r\n          type: 'line',\r\n          start: { x: x + centerX2 - margin / 4, y: y + centerY },\r\n          end: { x: x + centerX2 + (margin * 3) / 4, y: y + centerY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅝ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅗ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅏ 부분 (35%\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 = margin + firstPartWidth + secondPartWidth / 2\r\n      const centerY = height * 0.5\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          // ㅜ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1 - (margin * 5) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: {\r\n            x: x + centerX1 + (margin * 9) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          }\r\n        },\r\n        stroke2: {\r\n          // ㅜ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1 + margin / 2,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: { x: x + centerX1 + margin / 2, y: y + bottomY + margin / 2 }\r\n        },\r\n        stroke3: {\r\n          // ㅓ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - (margin * 3) / 4,\r\n            y: y + centerY + (margin * 7) / 4\r\n          },\r\n          end: {\r\n            x: x + centerX2 + margin / 4,\r\n            y: y + centerY + (margin * 7) / 4\r\n          }\r\n        },\r\n        stroke4: {\r\n          // ㅓ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 + margin / 4,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + centerX2 + margin / 4, y: y + bottomY + margin / 2 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  ㅙ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅗ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅐ 부분 (35%)\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 =\r\n        margin + firstPartWidth - width * 0.02 + secondPartWidth / 2\r\n      const topY = height * 0.25\r\n      const centerY = height * 0.5\r\n      const bottomY = height * 0.75\r\n      return {\r\n        stroke1: {\r\n          // ㅗ의 세로 획\r\n          type: 'line',\r\n          start: { x: x + centerX1, y: y + centerY + margin },\r\n          end: { x: x + centerX1, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          // ㅗ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1 - (margin * 7) / 4,\r\n            y: y + bottomY\r\n          },\r\n          end: { x: x + centerX1 + (margin * 7) / 4, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          // ㅏ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - margin / 4,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + centerX2 - margin / 4, y: y + bottomY + margin / 2 }\r\n        },\r\n        stroke4: {\r\n          // ㅏ의 가로 획\r\n          type: 'line',\r\n          start: { x: x + centerX2 - margin / 4, y: y + centerY },\r\n          end: { x: x + centerX2 + (margin * 3) / 4, y: y + centerY }\r\n        },\r\n        stroke5: {\r\n          // ㅐ의 두 번째 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 + (margin * 3) / 4,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: {\r\n            x: x + centerX2 + (margin * 3) / 4,\r\n            y: y + bottomY + margin / 2\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 5\r\n  },\r\n\r\n  ㅞ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅗ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅏ 부분 (35%\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 = margin + firstPartWidth + secondPartWidth / 2\r\n      const centerY = height * 0.5\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n      return {\r\n        stroke1: {\r\n          // ㅜ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1 - (margin * 7) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: {\r\n            x: x + centerX1 + (margin * 7) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          }\r\n        },\r\n        stroke2: {\r\n          // ㅜ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX1,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: { x: x + centerX1, y: y + bottomY + margin / 2 }\r\n        },\r\n        stroke3: {\r\n          // ㅓ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - (margin * 5) / 4,\r\n            y: y + centerY + (margin * 7) / 4\r\n          },\r\n          end: {\r\n            x: x + centerX2 - (margin * 2) / 5,\r\n            y: y + centerY + (margin * 7) / 4\r\n          }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - (margin * 2) / 5,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: {\r\n            x: x + centerX2 - (margin * 2) / 5,\r\n            y: y + bottomY + margin / 2\r\n          }\r\n        },\r\n        stroke5: {\r\n          // ㅔ의 두 번째 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 + (margin * 3) / 5,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: {\r\n            x: x + centerX2 + (margin * 3) / 5,\r\n            y: y + bottomY + margin / 2\r\n          }\r\n        }\r\n      }\r\n    },\r\n    strokes: 5\r\n  },\r\n\r\n  ㅚ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅜ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅓ 부분 (35%)\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 =\r\n        margin + firstPartWidth - width * 0.02 + secondPartWidth / 2\r\n      const topY = height * 0.25\r\n      const centerY = height * 0.5\r\n      const bottomY = height * 0.75\r\n      return {\r\n        stroke1: {\r\n          // ㅗ의 세로 획\r\n          type: 'line',\r\n          start: { x: x + margin / 2 + centerX1, y: y + centerY + margin },\r\n          end: { x: x + margin / 2 + centerX1, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          // ㅗ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX1 - (margin * 7) / 4,\r\n            y: y + bottomY\r\n          },\r\n          end: {\r\n            x: x + margin / 2 + centerX1 + (margin * 7) / 4,\r\n            y: y + bottomY\r\n          }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX2,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + margin / 2 + centerX2, y: y + bottomY + margin / 2 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  ㅟ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅜ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅓ 부분 (35%)\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 =\r\n        margin + firstPartWidth - width * 0.02 + secondPartWidth / 2\r\n      const topY = height * 0.25\r\n      const centerY = height * 0.5\r\n      const bottomY = height * 0.75\r\n      return {\r\n        stroke1: {\r\n          // ㅜ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX1 - (margin * 7) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: {\r\n            x: x + margin / 2 + centerX1 + (margin * 7) / 4,\r\n            y: y + centerY + (margin * 3) / 4\r\n          }\r\n        },\r\n        stroke2: {\r\n          // ㅜ의 세로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX1,\r\n            y: y + centerY + (margin * 3) / 4\r\n          },\r\n          end: { x: x + margin / 2 + centerX1, y: y + bottomY + margin / 2 }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX2,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + margin / 2 + centerX2, y: y + bottomY + margin / 2 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  ㅢ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.125\r\n      const availableWidth = width - margin * 2\r\n      const firstPartWidth = availableWidth * 0.65 // ㅜ 부분 (65%)\r\n      const secondPartWidth = availableWidth * 0.35 // ㅓ 부분 (35%)\r\n      const centerX1 = margin + firstPartWidth / 2\r\n      const centerX2 =\r\n        margin + firstPartWidth - width * 0.02 + secondPartWidth / 2\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n      return {\r\n        stroke1: {\r\n          // ㅜ의 가로 획\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX1 - (margin * 7) / 4,\r\n            y: y + bottomY\r\n          },\r\n          end: {\r\n            x: x + margin / 2 + centerX1 + (margin * 7) / 4,\r\n            y: y + bottomY\r\n          }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + margin / 2 + centerX2,\r\n            y: y + topY - margin / 2\r\n          },\r\n          end: { x: x + margin / 2 + centerX2, y: y + bottomY + margin / 2 }\r\n        }\r\n      }\r\n    },\r\n    strokes: 2\r\n  },\r\n\r\n  ㄳ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX2 + margin * 0.4, y: y + topY },\r\n          control: { x: x + centerX2, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + centerX2 + margin * 0.9, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  // ㄵ (ㄴ+ㅈ)\r\n  ㄵ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄴ\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅈ\r\n        stroke2: {\r\n          type: 'path',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          middle: { x: x + centerX2 + margin * 0.6, y: y + topY }, // ㄱ자 모양의 꺾이는 지점\r\n          end: { x: x + centerX + spacing, y: y + bottomY }, // 종료점은 곡선의 끝점\r\n          commands: [\r\n            { type: 'M', x: x + centerX + spacing, y: y + topY }, // 시작점\r\n            { type: 'L', x: x + centerX2 + margin * 0.6, y: y + topY }, // 가로선으로 이동\r\n            {\r\n              type: 'Q', // 첫 번width * 0.5째 곡선\r\n              control: {\r\n                x: x + centerX2 + margin * 0.6,\r\n                y: y + (topY + bottomY) / 2\r\n              },\r\n              end: { x: x + centerX + spacing, y: y + bottomY }\r\n            }\r\n          ]\r\n        },\r\n        stroke3: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 + margin * 0.35,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 + margin * 0.35,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 3\r\n  },\r\n\r\n  // ㄶ (ㄴ+ㅎ)\r\n  ㄶ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      const margin2 = width * 0.25\r\n      const centerX2 = width * 0.75\r\n      const strokeWidth = CONFIG.paths.drawing.width\r\n\r\n      const topY2 = height * 0.2\r\n      const bottomY2 = height * 0.85\r\n      const totalHeight = bottomY2 - topY2\r\n\r\n      // 각 요소의 y 좌표 계산\r\n      const baseRadius = Math.min((width * 0.225) / 2, height * 0.175)\r\n      const radiusX = Math.min((width * 0.2) / 2, baseRadius * 1.25)\r\n      const radiusY = Math.min(height * 0.175, baseRadius * 1.25)\r\n      const spacing2 = (totalHeight - (strokeWidth * 3 + radiusY * 2)) / 2\r\n\r\n      const firstStrokeY = topY2\r\n      const secondStrokeY = firstStrokeY + strokeWidth + spacing2\r\n      const ellipseTop = secondStrokeY + strokeWidth + spacing2\r\n      const circleCenterY = ellipseTop + radiusY\r\n\r\n      const firstLineWidth = margin2\r\n      const secondLineWidth = margin2 * 1.25\r\n\r\n      return {\r\n        // ㄴ\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅎ의 가로획들\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX2 - firstLineWidth / 2, y: y + firstStrokeY },\r\n          end: { x: x + centerX2 + firstLineWidth / 2, y: y + firstStrokeY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - secondLineWidth / 2,\r\n            y: y + secondStrokeY\r\n          },\r\n          end: { x: x + centerX2 + secondLineWidth / 2, y: y + secondStrokeY }\r\n        },\r\n        stroke4: {\r\n          type: 'circle',\r\n          center: { x: x + centerX2, y: y + circleCenterY },\r\n          radiusX: radiusX,\r\n          radiusY: radiusY,\r\n          start: { x: x + centerX2, y: y + ellipseTop }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n  // ㄺ (ㄹ+ㄱ)\r\n  ㄺ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㄱ\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          middle: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 4\r\n  },\r\n\r\n  // ㄻ (ㄹ+ㅁ)\r\n  ㄻ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅁ의 왼쪽 세로선\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        // ㅁ의 오른쪽 세로선\r\n        stroke5: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          middle: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        },\r\n        // ㅁ의 아래 가로선\r\n        stroke6: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 6\r\n  },\r\n  ㄼ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획 (가로+세로)\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅂ의 왼쪽 세로\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        // ㅂ의 오른쪽 세로선\r\n        stroke5: {\r\n          type: 'line',\r\n          start: { x: x + width - margin, y: y + topY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        },\r\n        // ㅂ의 위위 가로선\r\n        stroke6: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㅂ의 아래 가로\r\n        stroke7: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 7\r\n  },\r\n\r\n  // ㄽ (ㄹ+ㅅ)\r\n  ㄽ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획 (가로+세로)\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅅ의 왼쪽 사선\r\n        stroke4: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX2 + margin * 0.4, y: y + topY },\r\n          control: { x: x + centerX2, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        stroke5: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + centerX2 + margin * 0.9, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 5\r\n  },\r\n\r\n  // ㄾ (ㄹ+ㅌ)\r\n  ㄾ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획 (가로+세로)\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅌ의 위 가로\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        // ㅌ의 중간 가로\r\n        stroke5: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + width - margin, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㅌ의 아래 가로와 세로\r\n        stroke6: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          middle: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 6\r\n  },\r\n\r\n  // ㄿ (ㄹ+ㅍ)\r\n  ㄿ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획 (가로+세로)\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅍ의 위 가로\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + topY },\r\n          end: { x: x + width - margin, y: y + topY }\r\n        },\r\n        // ㅍ의 왼쪽 세로\r\n        stroke5: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing + spacing, y: y + topY },\r\n          end: { x: x + centerX + spacing + spacing, y: y + bottomY }\r\n        },\r\n        // ㅍ의 오른쪽 세로\r\n        stroke6: {\r\n          type: 'line',\r\n          start: { x: x + width - margin - spacing / 2, y: y + topY },\r\n          end: { x: x + width - margin - spacing / 2, y: y + bottomY }\r\n        },\r\n        // ㅍ의 아래 가로\r\n        stroke7: {\r\n          type: 'line',\r\n          start: { x: x + centerX + spacing, y: y + bottomY },\r\n          end: { x: x + width - margin, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 7\r\n  },\r\n  // ㄾ (ㄹ+ㅌ)\r\n  ㅀ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      const margin2 = width * 0.25\r\n      const centerX2 = width * 0.75\r\n      const strokeWidth = CONFIG.paths.drawing.width\r\n\r\n      const topY2 = height * 0.2\r\n      const bottomY2 = height * 0.85\r\n      const totalHeight = bottomY2 - topY2\r\n\r\n      // 각 요소의 y 좌표 계산\r\n      const baseRadius = Math.min((width * 0.225) / 2, height * 0.175)\r\n      const radiusX = Math.min((width * 0.2) / 2, baseRadius * 1.25)\r\n      const radiusY = Math.min(height * 0.175, baseRadius * 1.25)\r\n      const spacing2 = (totalHeight - (strokeWidth * 3 + radiusY * 2)) / 2\r\n\r\n      const firstStrokeY = topY2\r\n      const secondStrokeY = firstStrokeY + strokeWidth + spacing2\r\n      const ellipseTop = secondStrokeY + strokeWidth + spacing2\r\n      const circleCenterY = ellipseTop + radiusY\r\n\r\n      const firstLineWidth = margin2\r\n      const secondLineWidth = margin2 * 1.25\r\n\r\n      return {\r\n        // ㄹ의 첫 번째 획 (가로+세로)\r\n        // ㄹ의 첫 번째 획\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          middle: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 두 번째 획\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        // ㄹ의 세 번째 획\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          middle: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅎ의 가로획들\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + centerX2 - firstLineWidth / 2, y: y + firstStrokeY },\r\n          end: { x: x + centerX2 + firstLineWidth / 2, y: y + firstStrokeY }\r\n        },\r\n        stroke5: {\r\n          type: 'line',\r\n          start: {\r\n            x: x + centerX2 - secondLineWidth / 2,\r\n            y: y + secondStrokeY\r\n          },\r\n          end: { x: x + centerX2 + secondLineWidth / 2, y: y + secondStrokeY }\r\n        },\r\n        stroke6: {\r\n          type: 'circle',\r\n          center: { x: x + centerX2, y: y + circleCenterY },\r\n          radiusX: radiusX,\r\n          radiusY: radiusY,\r\n          start: { x: x + centerX2, y: y + ellipseTop }\r\n        }\r\n      }\r\n    },\r\n    strokes: 6\r\n  },\r\n  // ㄾ (ㄹ+ㅌ)\r\n  ㅄ: {\r\n    calculateCoords: (\r\n      width: number,\r\n      height: number,\r\n      x?: number,\r\n      y?: number\r\n    ) => {\r\n      x = x || 0\r\n      y = y || 0\r\n      const margin = width * 0.2\r\n      const centerX = width * 0.5\r\n      const centerX2 = margin + ((width - margin * 2) * 3) / 4\r\n      const spacing = width * 0.06\r\n      const topY = height * 0.25\r\n      const bottomY = height * 0.75\r\n\r\n      return {\r\n        // ㅂ의 첫 번째 획 (가로+세로)\r\n        stroke1: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + topY },\r\n          end: { x: x + margin, y: y + bottomY }\r\n        },\r\n        stroke2: {\r\n          type: 'line',\r\n          start: { x: x + centerX - spacing, y: y + topY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        stroke3: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX - spacing, y: y + (topY + bottomY) / 2 }\r\n        },\r\n        stroke4: {\r\n          type: 'line',\r\n          start: { x: x + margin, y: y + bottomY },\r\n          end: { x: x + centerX - spacing, y: y + bottomY }\r\n        },\r\n        // ㅅ의 왼쪽 사선\r\n        stroke5: {\r\n          type: 'quadratic',\r\n          start: { x: x + centerX2 + margin * 0.4, y: y + topY },\r\n          control: { x: x + centerX2, y: y + (topY + bottomY) / 2 },\r\n          end: { x: x + centerX + spacing, y: y + bottomY }\r\n        },\r\n        stroke6: {\r\n          type: 'quadratic',\r\n          start: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          control: {\r\n            x: x + centerX2 + spacing - margin * 0.1,\r\n            y: y + (topY + bottomY) / 2\r\n          },\r\n          end: { x: x + centerX2 + margin * 0.9, y: y + bottomY }\r\n        }\r\n      }\r\n    },\r\n    strokes: 6\r\n  }\r\n}\r\n\r\n// 다음 문자 저장용 변수\r\n// let nextCharValue: Jamo | undefined = undefined\r\n\r\n// export function setNextChar(char: Jamo | undefined) {\r\n//   nextCharValue = char\r\n// }\r\n// 다음 문자 가져오기 함수\r\n// function getNextChar(): Jamo | undefined {\r\n//   return nextCharValue\r\n// }\r\n\r\nexport const START_POINT_OFFSETS: Record<\r\n  Jaeum | Moeum,\r\n  { x: number; y: number }[]\r\n> = {\r\n  ㄱ: [{ x: 0, y: 0 }],\r\n  ㄴ: [{ x: 0, y: 0 }],\r\n  ㄷ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 }\r\n  ],\r\n  ㄹ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 }\r\n  ],\r\n  ㅁ: [\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅂ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0.67, y: 0 }\r\n  ],\r\n  ㅅ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅇ: [{ x: 0, y: 0 }],\r\n  ㅈ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ],\r\n  ㅊ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ],\r\n  ㅋ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅌ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0, y: 1 }\r\n  ],\r\n  ㅍ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅎ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄲ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄸ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 }\r\n  ],\r\n  ㅃ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0.67, y: 0 }\r\n  ],\r\n  ㅆ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ],\r\n  ㅉ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.125, y: 0.125 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.125, y: 0.125 }\r\n  ],\r\n\r\n  ㅏ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 }\r\n  ],\r\n  ㅑ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0.67, y: 0 }\r\n  ],\r\n  ㅓ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅕ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅗ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅛ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅜ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 }\r\n  ],\r\n  ㅠ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0.67 }\r\n  ],\r\n  ㅡ: [{ x: 0, y: 0 }],\r\n  ㅣ: [{ x: 0, y: 0 }],\r\n  ㅐ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.6, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅔ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅒ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅖ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅘ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 }\r\n  ],\r\n  ㅙ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.67, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅚ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅝ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅞ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅟ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅢ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n\r\n  ㄳ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄵ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ],\r\n  ㄶ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄺ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄻ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㄼ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 1, y: 0 }\r\n  ],\r\n  ㄽ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ],\r\n  ㄾ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 1 }\r\n  ],\r\n  ㄿ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0.67 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅀ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 1 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 }\r\n  ],\r\n  ㅄ: [\r\n    { x: 0, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 1, y: 0 },\r\n    { x: 0, y: 0 },\r\n    { x: 0.33, y: 0.33 }\r\n  ]\r\n}\r\n","import { type Jaeum, type Moeum } from './jamo'\nimport { START_POINT_OFFSETS } from './canvas-config'\nimport { CONFIG } from './canvas-config'\n// stroke-evaluator.ts\ninterface StrokeDetail {\n  startOk: boolean\n  middleOk: boolean\n  endOk: boolean\n  firstPathOk: boolean\n  secondPathOk: boolean\n}\n\ninterface Point {\n  x: number\n  y: number\n}\n\ninterface StrokeCoords {\n  type: 'line' | 'circle' | 'quadratic' | 'path'\n  start: Point\n  end?: Point\n  middle?: Point\n  control?: Point\n  center?: Point\n  radiusX?: number\n  radiusY?: number\n  commands?: any[] // Command 인터페이스도 필요하다면 정의\n}\n\n// 선분과 점 사이의 거리를 계산하는 함수\nconst distanceToLine = (\n  point: [number, number],\n  lineStart: Point,\n  lineEnd: Point\n): number => {\n  const A = point[0] - lineStart.x\n  const B = point[1] - lineStart.y\n  const C = lineEnd.x - lineStart.x\n  const D = lineEnd.y - lineStart.y\n\n  const dot = A * C + B * D\n  const lenSq = C * C + D * D\n  let param = -1\n\n  if (lenSq !== 0) {\n    param = dot / lenSq\n  }\n\n  let xx, yy\n\n  if (param < 0) {\n    xx = lineStart.x\n    yy = lineStart.y\n  } else if (param > 1) {\n    xx = lineEnd.x\n    yy = lineEnd.y\n  } else {\n    xx = lineStart.x + param * C\n    yy = lineStart.y + param * D\n  }\n\n  const dx = point[0] - xx\n  const dy = point[1] - yy\n\n  return Math.sqrt(dx * dx + dy * dy)\n}\n\nexport class StrokeEvaluator {\n  private _tolerance: number\n  private currentChar?: Jaeum | Moeum\n  private strokeNum?: number\n  private charIndex: number = 0\n  private readonly widthPerChar: number\n\n  constructor(\n    tolerance: number,\n    currentChar?: Jaeum | Moeum,\n    strokeNum?: number,\n    totalChars: number = 1\n  ) {\n    this._tolerance = tolerance\n    this.currentChar = currentChar\n    this.strokeNum = strokeNum\n    this.widthPerChar = CONFIG.canvas.width / totalChars\n  }\n\n  setCurrentChar(char: Jaeum | Moeum) {\n    this.currentChar = char\n  }\n\n  setStrokeNum(num: number) {\n    this.strokeNum = num\n  }\n\n  // 좌표를 자모 인덱스에 따라 조정하는 새로운 유틸리티 메서드\n  private adjustCoordinateForChar(point: [number, number]): [number, number] {\n    const xOffset = this.charIndex * this.widthPerChar\n    return [point[0] - xOffset, point[1]]\n  }\n\n  private findNearestPointIndex(\n    points: Array<[number, number]>,\n    target: Point\n  ): number {\n    let minDist = Infinity\n    let minIndex = 0\n\n    points.forEach((point, index) => {\n      const dist = Math.hypot(point[0] - target.x, point[1] - target.y)\n      if (dist < minDist) {\n        minDist = dist\n        minIndex = index\n      }\n    })\n\n    return minIndex\n  }\n\n  checkStartPoint(\n    stroke: Array<[number, number]>,\n    startPoint: Point,\n    tolerance?: number,\n    currentChar?: Jaeum | Moeum,\n    strokeNum?: number\n  ): boolean {\n    const firstPoint = stroke[0]\n\n    const adjustedStartPoint = {\n      x: startPoint.x + this.charIndex * this.widthPerChar,\n      y: startPoint.y\n    }\n    let effectiveStartPoint = adjustedStartPoint\n    let offsetInfo = { x: 0, y: 0 }\n\n    if (currentChar && strokeNum !== undefined) {\n      const offsets = START_POINT_OFFSETS[currentChar]\n      console.log('Offsets found:', { currentChar, strokeNum, offsets })\n      if (offsets?.[strokeNum - 1]) {\n        offsetInfo = offsets[strokeNum - 1]\n        console.log('Found offset:', offsetInfo)\n      }\n    }\n\n    // offset이 존재하면 적용\n    if (offsetInfo.x !== 0 || offsetInfo.y !== 0) {\n      const offsetDistance = CONFIG.startPoint.radius * 2\n      const offsetPoint = {\n        x: adjustedStartPoint.x + offsetInfo.x * offsetDistance, // adjustedStartPoint 사용\n        y: adjustedStartPoint.y + offsetInfo.y * offsetDistance\n      }\n\n      // offset이 있을 때는 선분까지의 거리를 계산\n      const lineDistance = distanceToLine(\n        firstPoint,\n        adjustedStartPoint, // 조정된 시작점\n        offsetPoint\n      )\n\n      const startOk = lineDistance < (tolerance || this._tolerance)\n\n      console.log('시작점 평가 상세정보:', {\n        문자: currentChar,\n        획번호: strokeNum,\n        오프셋적용여부: true,\n        오프셋: {\n          x: offsetInfo.x,\n          y: offsetInfo.y,\n          실제거리_x: offsetInfo.x * offsetDistance,\n          실제거리_y: offsetInfo.y * offsetDistance\n        },\n        좌표: {\n          시작: [firstPoint[0], firstPoint[1]],\n          기준선: {\n            시작: [adjustedStartPoint.x, adjustedStartPoint.y],\n            끝: [offsetPoint.x, offsetPoint.y]\n          }\n        },\n        거리: {\n          선까지의거리: lineDistance,\n          허용: tolerance || this._tolerance,\n          차이: (tolerance || this._tolerance) - lineDistance\n        },\n        결과: startOk ? '성공' : '실패'\n      })\n\n      return startOk\n    }\n\n    // offset이 없을 때는 단순 거리 계산\n    const distance = Math.hypot(\n      firstPoint[0] - effectiveStartPoint.x,\n      firstPoint[1] - effectiveStartPoint.y\n    )\n    const currentTolerance = tolerance || this._tolerance\n    const startOk = distance < currentTolerance\n\n    console.log('시작점 평가 상세정보:', {\n      문자: currentChar,\n      획번호: strokeNum,\n      오프셋적용여부: false,\n      오프셋: {\n        x: offsetInfo.x,\n        y: offsetInfo.y,\n        실제거리_x: offsetInfo.x * CONFIG.startPoint.radius * 2,\n        실제거리_y: offsetInfo.y * CONFIG.startPoint.radius * 2\n      },\n      좌표: {\n        시작: [firstPoint[0], firstPoint[1]],\n        기준: [effectiveStartPoint.x, effectiveStartPoint.y],\n        원래기준: [startPoint.x, startPoint.y]\n      },\n      거리: {\n        실제: distance,\n        허용: currentTolerance,\n        차이: currentTolerance - distance\n      },\n      결과: startOk ? '성공' : '실패'\n    })\n\n    return startOk\n  }\n\n  checkMiddlePoint(\n    stroke: Array<[number, number]>,\n    middlePoint: Point,\n    tolerance?: number\n  ): boolean {\n    const adjustedStroke = stroke.map((point) => [\n      point[0] - this.charIndex * this.widthPerChar,\n      point[1]\n    ])\n    const middleOk = adjustedStroke.some(\n      (point) =>\n        Math.hypot(point[0] - middlePoint.x, point[1] - middlePoint.y) <\n        (tolerance || this._tolerance)\n    )\n\n    console.log('중간점 평가:', {\n      기준좌표: [middlePoint.x, middlePoint.y],\n      tolerance: tolerance || this._tolerance,\n      통과여부: middleOk\n    })\n\n    return middleOk\n  }\n\n  checkEndPoint(\n    stroke: Array<[number, number]>,\n    endPoint: Point,\n    tolerance?: number\n  ): boolean {\n    const lastPoint = stroke[stroke.length - 1]\n    const adjustedLastPoint: [number, number] = [\n      lastPoint[0] - this.charIndex * this.widthPerChar,\n      lastPoint[1]\n    ]\n    const endOk =\n      Math.hypot(\n        adjustedLastPoint[0] - endPoint.x,\n        adjustedLastPoint[1] - endPoint.y\n      ) < (tolerance || this._tolerance)\n\n    console.log('끝점 평가:', {\n      실제좌표: [adjustedLastPoint[0], adjustedLastPoint[1]],\n      기준좌표: [endPoint.x, endPoint.y],\n      거리: Math.hypot(lastPoint[0] - endPoint.x, lastPoint[1] - endPoint.y),\n      tolerance: tolerance || this._tolerance,\n      통과여부: endOk\n    })\n\n    return endOk\n  }\n\n  checkPathDeviation(\n    stroke: Array<[number, number]>,\n    start: Point,\n    end: Point,\n    tolerance?: number,\n    currentChar?: Jaeum | Moeum,\n    strokeNum?: number,\n    middle?: Point // middle point 추가\n  ): boolean {\n    console.log('PathDeviation 평가 시작:', {\n      시작점: start,\n      중간점: middle,\n      끝점: end,\n      점개수: stroke.length,\n      문자정보: {\n        문자: currentChar,\n        획번호: strokeNum\n      }\n    })\n\n    const currentTolerance = tolerance || this._tolerance\n\n    // offset 적용된 시작점 계산\n    let effectiveStart = start\n    if (currentChar && strokeNum !== undefined) {\n      const offsets = START_POINT_OFFSETS[currentChar]\n      if (offsets?.[strokeNum - 1]) {\n        const offsetInfo = offsets[strokeNum - 1]\n        if (offsetInfo.x !== 0 || offsetInfo.y !== 0) {\n          const offsetDistance = CONFIG.startPoint.radius * 2\n          effectiveStart = {\n            x: start.x + offsetInfo.x * offsetDistance,\n            y: start.y + offsetInfo.y * offsetDistance\n          }\n        }\n      }\n    }\n\n    // 경로 평가\n    for (let i = 1; i < stroke.length - 1; i++) {\n      const distance = distanceToLine(stroke[i], effectiveStart, end)\n      if (distance > currentTolerance * 1.5) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  calculateStrokeLength(stroke: Array<[number, number]>): number {\n    let length = 0\n    for (let i = 1; i < stroke.length; i++) {\n      length += Math.hypot(\n        stroke[i][0] - stroke[i - 1][0],\n        stroke[i][1] - stroke[i - 1][1]\n      )\n    }\n    return length\n  }\n\n  normalizeAngle(angle: number): number {\n    while (angle > Math.PI) angle -= 2 * Math.PI\n    while (angle < -Math.PI) angle += 2 * Math.PI\n    return angle\n  }\n\n  checkCircularityEllipse(\n    stroke: Array<[number, number]>,\n    center: Point,\n    radiusX: number,\n    radiusY: number,\n    tolerance?: number\n  ): boolean {\n    const radiusOk = stroke.every((point) => {\n      const normalizedDistance = Math.hypot(\n        (point[0] - center.x) / radiusX,\n        (point[1] - center.y) / radiusY\n      )\n      return (\n        Math.abs(normalizedDistance - 1) <\n        (tolerance || this._tolerance) / Math.min(radiusX, radiusY)\n      )\n    })\n\n    let prevAngle = null\n    let angleChanges = 0\n\n    for (let i = 1; i < stroke.length; i++) {\n      const angle = Math.atan2(\n        (stroke[i][1] - center.y) / radiusY,\n        (stroke[i][0] - center.x) / radiusX\n      )\n\n      if (prevAngle !== null) {\n        const change = this.normalizeAngle(angle - prevAngle)\n        if (Math.abs(change) > Math.PI / 3) {\n          return false\n        }\n        angleChanges += change\n      }\n      prevAngle = angle\n    }\n\n    return radiusOk && Math.abs(angleChanges) >= Math.PI * 1.33\n  }\n\n  checkCurveDeviation(\n    stroke: Array<[number, number]>,\n    start: Point,\n    control: Point,\n    end: Point,\n    tolerance?: number\n  ): boolean {\n    let maxDeviation = 0\n    let deviationPoints = 0 // 허용치를 넘는 점들의 수를 카운트\n\n    // 각 점에 대해 이상적인 곡선과의 거리 체크\n    for (let i = 0; i < stroke.length; i++) {\n      const point = stroke[i]\n      let minDistance = Infinity\n\n      // 이상적인 곡선 위의 점들과 비교\n      for (let t = 0; t <= 1; t += 0.02) {\n        const curvePoint = this.getBezierPoint(start, control, end, t)\n        const distance = Math.hypot(\n          point[0] - curvePoint.x,\n          point[1] - curvePoint.y\n        )\n        minDistance = Math.min(minDistance, distance)\n      }\n\n      maxDeviation = Math.max(maxDeviation, minDistance)\n\n      // 허용치를 넘는 점들을 카운트\n      if (minDistance > (tolerance || this._tolerance) * 1.5) {\n        deviationPoints++\n      }\n    }\n\n    const maxDeviationAllowed = (tolerance || this._tolerance) * 2\n    const maxDeviationPointsRatio = 0.2 // 전체 점의 20% 이상이 허용치를 넘으면 실패\n\n    console.log('Curve deviation check:', {\n      maxDeviation,\n      maxDeviationAllowed,\n      deviationPoints,\n      totalPoints: stroke.length,\n      deviationRatio: deviationPoints / stroke.length\n    })\n\n    return (\n      maxDeviation <= maxDeviationAllowed &&\n      deviationPoints / stroke.length < maxDeviationPointsRatio\n    )\n  }\n\n  private getBezierPoint(\n    start: Point,\n    control: Point,\n    end: Point,\n    t: number\n  ): Point {\n    const x =\n      Math.pow(1 - t, 2) * start.x +\n      2 * (1 - t) * t * control.x +\n      Math.pow(t, 2) * end.x\n    const y =\n      Math.pow(1 - t, 2) * start.y +\n      2 * (1 - t) * t * control.y +\n      Math.pow(t, 2) * end.y\n    return { x, y }\n  }\n\n  // 타입별 평가 메서드\n  evaluateLine(\n    stroke: Array<[number, number]>,\n    coords: StrokeCoords,\n    isDrawingBroken: boolean\n  ): StrokeDetail {\n    // offset 정보 계산\n    let offsetInfo = { x: 0, y: 0 }\n    let offsetApplied = false\n    let effectivePath = {\n      start: coords.start,\n      end: coords.middle || coords.end\n    }\n\n    // offset 계산 및 적용 - 주석 해제하고 수정\n    if (this.currentChar && this.strokeNum !== undefined) {\n      const offsets = START_POINT_OFFSETS[this.currentChar]\n      if (offsets?.[this.strokeNum - 1]) {\n        offsetInfo = offsets[this.strokeNum - 1]\n        if (offsetInfo.x !== 0 || offsetInfo.y !== 0) {\n          offsetApplied = true\n          const offsetDistance = CONFIG.startPoint.radius * 2\n          effectivePath.start = {\n            x: coords.start.x + offsetInfo.x * offsetDistance,\n            y: coords.start.y + offsetInfo.y * offsetDistance\n          }\n        }\n      }\n    }\n\n    console.log('Effective path calculation:', {\n      currentChar: this.currentChar,\n      strokeNum: this.strokeNum,\n      offsetApplied,\n      offsetInfo,\n      originalStart: coords.start,\n      effectiveStart: effectivePath.start\n    })\n\n    if (coords.middle) {\n      // offset이 적용된 시작점으로 평가\n      const startOk = this.checkStartPoint(\n        stroke,\n        coords.start,\n        undefined,\n        this.currentChar,\n        this.strokeNum\n      )\n      const middleOk = this.checkMiddlePoint(stroke, coords.middle)\n      const endOk = this.checkEndPoint(stroke, coords.end!)\n\n      const middleIndex = this.findNearestPointIndex(stroke, coords.middle)\n      const firstHalf = stroke.slice(0, middleIndex + 1)\n      const secondHalf = stroke.slice(middleIndex)\n\n      // offset이 적용된 시작점으로 경로 평가\n      const firstPathOk = this.checkPathDeviation(\n        firstHalf,\n        effectivePath.start, // 수정된 부분\n        coords.middle,\n        this._tolerance,\n        this.currentChar,\n        this.strokeNum\n      )\n\n      const secondPathOk = this.checkPathDeviation(\n        secondHalf,\n        coords.middle,\n        coords.end!,\n        this._tolerance\n      )\n\n      console.log('Line 평가 상세정보:', {\n        문자: this.currentChar,\n        획번호: this.strokeNum,\n        오프셋적용여부: offsetApplied,\n        오프셋: {\n          x: offsetInfo.x,\n          y: offsetInfo.y,\n          실제거리_x: offsetInfo.x * CONFIG.startPoint.radius * 2,\n          실제거리_y: offsetInfo.y * CONFIG.startPoint.radius * 2\n        },\n        경로: {\n          시작점: [effectivePath.start.x, effectivePath.start.y],\n          중간점: [coords.middle.x, coords.middle.y],\n          끝점: [coords.end!.x, coords.end!.y]\n        },\n        평가결과: {\n          시작점: startOk,\n          중간점: middleOk,\n          끝점: endOk,\n          첫번째경로: firstPathOk,\n          두번째경로: secondPathOk,\n          정확도: this._tolerance\n        }\n      })\n\n      return {\n        startOk: startOk && !isDrawingBroken,\n        middleOk: middleOk && !isDrawingBroken,\n        endOk: endOk && !isDrawingBroken,\n        firstPathOk: firstPathOk && !isDrawingBroken,\n        secondPathOk: secondPathOk && !isDrawingBroken\n      }\n    } else {\n      // offset이 적용된 시작점으로 평가\n      const startOk = this.checkStartPoint(\n        stroke,\n        coords.start,\n        undefined,\n        this.currentChar,\n        this.strokeNum\n      )\n      const endOk = this.checkEndPoint(stroke, coords.end!)\n\n      // offset이 적용된 시작점으로 경로 평가\n      const pathOk = this.checkPathDeviation(\n        stroke,\n        effectivePath.start, // 수정된 부분\n        coords.end!,\n        this._tolerance,\n        this.currentChar,\n        this.strokeNum\n      )\n\n      console.log('Line 평가 상세정보:', {\n        문자: this.currentChar,\n        획번호: this.strokeNum,\n        오프셋적용여부: offsetApplied,\n        오프셋: {\n          x: offsetInfo.x,\n          y: offsetInfo.y,\n          실제거리_x: offsetInfo.x * CONFIG.startPoint.radius * 2,\n          실제거리_y: offsetInfo.y * CONFIG.startPoint.radius * 2\n        },\n        경로: {\n          시작점: [effectivePath.start.x, effectivePath.start.y],\n          끝점: [coords.end!.x, coords.end!.y]\n        },\n        평가결과: {\n          시작점: startOk,\n          끝점: endOk,\n          경로: pathOk,\n          정확도: this._tolerance\n        }\n      })\n\n      return {\n        startOk: startOk && !isDrawingBroken,\n        middleOk: true,\n        endOk: endOk && !isDrawingBroken,\n        firstPathOk: pathOk && !isDrawingBroken,\n        secondPathOk: true\n      }\n    }\n  }\n\n  evaluateCircle(\n    stroke: Array<[number, number]>,\n    coords: StrokeCoords,\n    isDrawingBroken: boolean\n  ): StrokeDetail {\n    // 시작점 체크\n    const startOk = this.checkStartPoint(\n      stroke,\n      coords.start,\n      this._tolerance * 1\n    )\n\n    // 끝점이 시작점 근처로 돌아왔는지 체크\n    const endOk =\n      Math.hypot(\n        stroke[stroke.length - 1][0] - stroke[0][0],\n        stroke[stroke.length - 1][1] - stroke[0][1]\n      ) <\n      this._tolerance * 1.5\n\n    // 최소 크기 검사\n    const hasMinSize = stroke.some((point) => {\n      const normalizedDistance = Math.hypot(\n        (point[0] - coords.center!.x) / coords.radiusX!,\n        (point[1] - coords.center!.y) / coords.radiusY!\n      )\n      return normalizedDistance > 0.4\n    })\n\n    // 획 길이 검사\n    const strokeLength = this.calculateStrokeLength(stroke)\n    const circumference =\n      2 * Math.PI * Math.min(coords.radiusX!, coords.radiusY!)\n    const minRequiredLength = circumference * 0.8\n\n    // 원형 검사 (반지름 일관성)\n    const radiusOk = stroke.every((point) => {\n      const normalizedDistance = Math.hypot(\n        (point[0] - coords.center!.x) / coords.radiusX!,\n        (point[1] - coords.center!.y) / coords.radiusY!\n      )\n      return (\n        Math.abs(normalizedDistance - 1) <\n        (this._tolerance * 1.1) / Math.min(coords.radiusX!, coords.radiusY!)\n      )\n    })\n\n    // 각도 변화 및 끊김 검사\n    let prevAngle = null\n    let angleChanges = 0\n    let maxAngleGap = 0\n    let prevPoint = stroke[0]\n    let maxPointGap = 0\n\n    for (let i = 0; i < stroke.length; i++) {\n      const point = stroke[i]\n\n      // 점 사이의 거리 체크 (끊김 검사)\n      const pointDistance = Math.hypot(\n        point[0] - prevPoint[0],\n        point[1] - prevPoint[1]\n      )\n      maxPointGap = Math.max(maxPointGap, pointDistance)\n\n      const angle = Math.atan2(\n        point[1] - coords.center!.y,\n        point[0] - coords.center!.x\n      )\n\n      if (prevAngle !== null) {\n        const change = this.normalizeAngle(angle - prevAngle)\n        angleChanges += Math.abs(change)\n        if (Math.abs(change) > maxAngleGap) {\n          maxAngleGap = Math.abs(change)\n        }\n      }\n      prevAngle = angle\n      prevPoint = point\n    }\n\n    // 완성도 검사 강화\n    const completionThreshold = Math.PI * 1.5 // 최소 270도\n    const isComplete = Math.abs(angleChanges) >= completionThreshold\n\n    // 끊김 검사 강화\n    const isContinuous = maxPointGap < this._tolerance * 2\n    const hasNaturalFlow = maxAngleGap < Math.PI / 4\n\n    console.log('Circle evaluation details:', {\n      startOk,\n      endOk,\n      hasMinSize,\n      strokeLength,\n      minRequiredLength,\n      radiusOk,\n      angleChanges,\n      completionThreshold,\n      isComplete,\n      maxAngleGap,\n      maxPointGap,\n      isContinuous,\n      hasNaturalFlow,\n      isDrawingBroken\n    })\n\n    const pathOk =\n      strokeLength >= minRequiredLength &&\n      radiusOk &&\n      !isDrawingBroken &&\n      isContinuous &&\n      hasNaturalFlow\n\n    const circularityOk = isComplete && endOk && !isDrawingBroken\n\n    return {\n      startOk: startOk && !isDrawingBroken,\n      middleOk: hasMinSize && !isDrawingBroken,\n      endOk: endOk && !isDrawingBroken,\n      firstPathOk: pathOk,\n      secondPathOk: circularityOk\n    }\n  }\n\n  evaluateQuadratic(\n    stroke: Array<[number, number]>,\n    coords: StrokeCoords,\n    isDrawingBroken: boolean\n  ): StrokeDetail {\n    // offset 적용된 시작점 체크\n    const startOk = this.checkStartPoint(\n      stroke,\n      coords.start,\n      undefined,\n      this.currentChar,\n      this.strokeNum\n    )\n    const endOk = this.checkEndPoint(stroke, coords.end!)\n\n    // 곡선 검사 시에도 offset 고려\n    let effectiveStart = coords.start\n    if (this.currentChar && this.strokeNum !== undefined) {\n      const offsets = START_POINT_OFFSETS[this.currentChar]\n      if (offsets?.[this.strokeNum - 1]) {\n        const offsetInfo = offsets[this.strokeNum - 1]\n        if (offsetInfo.x !== 0 || offsetInfo.y !== 0) {\n          const offsetDistance = CONFIG.startPoint.radius * 2\n          effectiveStart = {\n            x: coords.start.x + offsetInfo.x * offsetDistance,\n            y: coords.start.y + offsetInfo.y * offsetDistance\n          }\n        }\n      }\n    }\n\n    // 수정된 시작점으로 곡선 검사\n    const curveOk = this.checkCurveDeviation(\n      stroke,\n      effectiveStart,\n      coords.control!,\n      coords.end!,\n      this._tolerance\n    )\n\n    // 최소 길이 체크 - 직선 거리의 0.8배로 수정\n    const strokeLength = this.calculateStrokeLength(stroke)\n    const directLength = Math.hypot(\n      effectiveStart.x - coords.end!.x,\n      effectiveStart.y - coords.end!.y\n    )\n    // 곡선은 직선 거리의 0.8배 이상이면 충분\n    const expectedLength = directLength * 0.8\n\n    const lengthOk = strokeLength >= expectedLength\n    console.log('곡선 길이 체크:', {\n      실제길이: strokeLength,\n      직선거리: directLength,\n      최소필요길이: expectedLength,\n      통과여부: lengthOk,\n      곡선검사: curveOk\n    })\n\n    return {\n      startOk: startOk && !isDrawingBroken,\n      middleOk: true,\n      endOk: endOk && !isDrawingBroken,\n      firstPathOk: curveOk && lengthOk && !isDrawingBroken,\n      secondPathOk: true\n    }\n  }\n\n  evaluatePath(\n    stroke: Array<[number, number]>,\n    coords: StrokeCoords,\n    isDrawingBroken: boolean\n  ): StrokeDetail {\n    // 시작점과 중간점은 coords에서 직접 가져옵니다\n    const pathStartPoint = coords.start\n    const splitPoint = coords.middle || {\n      x: coords.commands![1].x,\n      y: coords.commands![1].y\n    }\n    const endPoint = coords.end!\n\n    console.log('Path evaluation points:', {\n      start: pathStartPoint,\n      middle: splitPoint,\n      end: endPoint\n    })\n\n    const pathStartOk = this.checkStartPoint(stroke, pathStartPoint)\n    const splitPointOk = this.checkMiddlePoint(stroke, splitPoint)\n    const endPointOk = this.checkEndPoint(stroke, endPoint)\n\n    // 직선 부분 평가 (시작점에서 중간점까지)\n    const splitIndex = this.findNearestPointIndex(stroke, splitPoint)\n    const straightPart = stroke.slice(0, splitIndex + 1)\n    const straightPathOk = this.checkPathDeviation(\n      straightPart,\n      pathStartPoint,\n      splitPoint,\n      this._tolerance * 1.2\n    )\n\n    // 곡선 부분 평가 (중간점에서 끝점까지)\n    const curvePart = stroke.slice(splitIndex)\n\n    // 곡선 부분 길이 검사 추가\n    const curveLength = this.calculateStrokeLength(curvePart)\n    const directLength = Math.hypot(\n      endPoint.x - splitPoint.x,\n      endPoint.y - splitPoint.y\n    )\n    const expectedCurveLength = directLength * 0.8\n    const minLengthRatio = 0.8 - this._tolerance / 100\n    const hasSufficientCurve =\n      curveLength >= expectedCurveLength * minLengthRatio\n\n    console.log('Curve length evaluation:', {\n      curveLength,\n      directLength,\n      expectedCurveLength,\n      minLengthRatio,\n      requiredLength: expectedCurveLength * minLengthRatio,\n      hasSufficientCurve\n    })\n\n    let maxGap = 0\n    for (let i = 1; i < curvePart.length; i++) {\n      const gap = Math.hypot(\n        curvePart[i][0] - curvePart[i - 1][0],\n        curvePart[i][1] - curvePart[i - 1][1]\n      )\n      maxGap = Math.max(maxGap, gap)\n    }\n    const isCurveContinuous = maxGap < this._tolerance * 2\n\n    const curveOk =\n      endPoint &&\n      this.checkCurveDeviation(\n        curvePart,\n        splitPoint,\n        coords.commands![2].control,\n        endPoint,\n        this._tolerance * 1.2\n      ) &&\n      hasSufficientCurve &&\n      curvePart.length > stroke.length * 0.3 &&\n      isCurveContinuous && // 곡선 연속성 조건 추가\n      !isDrawingBroken // 전체 끊김 여부도 함께 체크\n\n    console.log('Path evaluation results:', {\n      pathStartOk,\n      splitPointOk,\n      endPointOk,\n      straightPathOk,\n      curveOk,\n      straightPartLength: straightPart.length,\n      curvePartLength: curvePart.length,\n      curveLength,\n      expectedCurveLength,\n      hasSufficientCurve,\n      maxGap,\n      isCurveContinuous,\n      isDrawingBroken\n    })\n\n    return {\n      startOk: pathStartOk && !isDrawingBroken,\n      middleOk: splitPointOk && !isDrawingBroken,\n      endOk: endPointOk && !isDrawingBroken,\n      firstPathOk: straightPathOk && !isDrawingBroken,\n      secondPathOk: curveOk && !isDrawingBroken\n    }\n  }\n\n  // private findNearestPointIndex(points: Array<[number, number]>, target: Point): number {\n  //   let minDist = Infinity;\n  //   let minIndex = 0;\n\n  //   points.forEach((point, index) => {\n  //     const dist = Math.hypot(point[0] - target.x, point[1] - target.y);\n  //     if (dist < minDist) {\n  //       minDist = dist;\n  //       minIndex = index;\n  //     }\n  //   });\n\n  //   return minIndex;\n  // }\n}\n","// drawing-service.ts\n\nimport { CONFIG } from './canvas-config'\nimport type { PathCommand } from './canvas-config'\nimport type { Rect } from './rect' // Rect 타입 추가\n\ntype CanvasLineCap = 'butt' | 'round' | 'square'\ntype CanvasLineJoin = 'round' | 'bevel' | 'miter'\n\nexport class DrawingService {\n  private ctx: CanvasRenderingContext2D\n  private historyCanvas: HTMLCanvasElement\n  private historyCtx: CanvasRenderingContext2D\n\n  constructor(private canvas: HTMLCanvasElement) {\n    this.ctx = canvas.getContext('2d')!\n\n    //Initialize history canvas\n    this.historyCanvas = document.createElement('canvas')\n    this.historyCanvas.width = canvas.width\n    this.historyCanvas.height = canvas.height\n    this.historyCtx = this.historyCanvas.getContext('2d')!\n  }\n  drawRect(rect: Rect) {\n    this.ctx.save()\n    this.ctx.strokeStyle = 'yellow'\n    this.ctx.lineWidth = 1\n    this.ctx.strokeRect(rect.x + 2, rect.y + 2, rect.w - 4, rect.h - 4)\n    this.ctx.restore()\n  }\n\n  // Core drawing methods\n  clearCanvas() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n  }\n\n  drawStartPoint(x: number, y: number, number: number) {\n    this.ctx.fillStyle = CONFIG.startPoint.color\n    this.ctx.beginPath()\n    this.ctx.arc(x, y, CONFIG.startPoint.radius, 0, Math.PI * 2)\n    this.ctx.fill()\n\n    const fontSize = Math.max(12, Math.floor(CONFIG.startPoint.radius * 1.2))\n    this.ctx.fillStyle = CONFIG.startPoint.textColor\n    this.ctx.font = `${fontSize}px Arial`\n    this.ctx.textAlign = 'center'\n    this.ctx.textBaseline = 'middle'\n    this.ctx.fillText(number.toString(), x, y)\n  }\n\n  drawEndPoint(x: number, y: number) {\n    this.ctx.save()\n    this.ctx.fillStyle = CONFIG.startPoint.color\n    this.ctx.beginPath()\n    this.ctx.arc(x, y, CONFIG.startPoint.radius * 0.5, 0, Math.PI * 2)\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  drawStrokePath(coords: any) {\n    // console.log('Drawing stroke path:', coords)\n    this.ctx.save()\n\n    // Draw background\n    this.ctx.strokeStyle = CONFIG.paths.background.color\n    this.ctx.lineWidth =\n      CONFIG.paths.guide.width + CONFIG.paths.background.widthOffset\n    this.ctx.lineCap = 'round'\n    this.ctx.lineJoin = 'round'\n    this.drawPathDetails(coords)\n    this.ctx.stroke()\n\n    // Draw guideline\n    this.ctx.strokeStyle = CONFIG.paths.guide.color\n    this.ctx.lineWidth = CONFIG.paths.guide.width\n    this.ctx.setLineDash(CONFIG.paths.guide.dash)\n    this.drawPathDetails(coords)\n    this.ctx.stroke()\n\n    this.ctx.restore()\n  }\n\n  private drawPathDetails(coords: any) {\n    // console.log('drawPathDetails called with:', coords) // 추가\n    for (let i = 1; i <= Object.keys(coords).length; i++) {\n      const stroke = coords[`stroke${i}`]\n      if (!stroke) continue\n\n      this.ctx.save()\n      this.ctx.beginPath()\n\n      if (stroke.type === 'circle') {\n        // console.log('Drawing circle:', stroke)\n        this.ctx.ellipse(\n          stroke.center.x,\n          stroke.center.y,\n          stroke.radiusX,\n          stroke.radiusY,\n          0,\n          0,\n          Math.PI * 2\n        )\n        continue\n      } else {\n        // console.log('Drawing path:', stroke) // 추가\n        this.ctx.moveTo(stroke.start.x, stroke.start.y)\n\n        switch (stroke.type) {\n          case 'quadratic':\n            this.ctx.quadraticCurveTo(\n              stroke.control.x,\n              stroke.control.y,\n              stroke.end.x,\n              stroke.end.y\n            )\n            break\n\n          case 'path':\n            this.drawCommandPath(stroke.commands)\n            break\n\n          default:\n            if (stroke.middle) {\n              this.ctx.lineTo(stroke.middle.x, stroke.middle.y)\n            }\n            this.ctx.lineTo(stroke.end.x, stroke.end.y)\n        }\n      }\n      this.ctx.stroke()\n    }\n  }\n\n  private drawCommandPath(commands: PathCommand[]) {\n    commands.forEach((command) => {\n      switch (command.type) {\n        case 'M':\n          this.ctx.moveTo(command.x ?? 0, command.y ?? 0)\n          break\n        case 'L':\n          this.ctx.lineTo(command.x ?? 0, command.y ?? 0)\n          break\n        case 'Q':\n          if (command.control && command.end) {\n            this.ctx.quadraticCurveTo(\n              command.control.x,\n              command.control.y,\n              command.end.x,\n              command.end.y\n            )\n          }\n          break\n      }\n    })\n  }\n\n  // User stroke methods\n  drawUserStroke(points: Array<[number, number]>) {\n    if (points.length < 2) return\n\n    this.ctx.beginPath()\n    this.ctx.setLineDash([]) // 이 줄만 추가\n    this.ctx.moveTo(points[0][0], points[0][1])\n\n    for (let i = 1; i < points.length; i++) {\n      this.ctx.lineTo(points[i][0], points[i][1])\n    }\n    this.ctx.stroke()\n  }\n\n  addStrokeToHistory(stroke: Array<[number, number]>) {\n    this.historyCtx.strokeStyle = CONFIG.animation.pathColor\n    this.historyCtx.lineWidth = CONFIG.paths.drawing.width\n    this.historyCtx.lineCap = CONFIG.paths.drawing.cap as CanvasLineCap\n    this.historyCtx.lineJoin = CONFIG.paths.drawing.join as CanvasLineJoin\n\n    this.historyCtx.beginPath()\n    const firstPoint = stroke[0]\n    this.historyCtx.moveTo(firstPoint[0], firstPoint[1])\n\n    for (let i = 1; i < stroke.length; i++) {\n      const point = stroke[i]\n      this.historyCtx.lineTo(point[0], point[1])\n    }\n    this.historyCtx.stroke()\n  }\n\n  // drawHistory() {\n  //   this.ctx.drawImage(this.historyCanvas, 0, 0)\n  //   console.log('Drawing history:', {\n  //     historyCanvas: this.historyCanvas,\n  //     mainCanvas: this.canvas,\n  //     historyContext: this.historyCtx,\n  //     mainContext: this.ctx\n  //   })\n  // }\n\n  drawHistory() {\n    // 히스토리 캔버스의 내용을 메인 캔버스에 그립니다\n    this.ctx.drawImage(this.historyCanvas, 0, 0)\n  }\n\n  // Canvas size management\n  updateCanvasSize(width: number, height: number) {\n    this.canvas.width = width\n    this.canvas.height = height\n    this.historyCanvas.width = width\n    this.historyCanvas.height = height\n  }\n\n  drawLineWithArrow(\n    startX: number,\n    startY: number,\n    endX: number,\n    endY: number,\n    angle: number\n  ) {\n    this.ctx.beginPath()\n    this.ctx.moveTo(startX, startY)\n    this.ctx.lineTo(endX, endY)\n    this.ctx.stroke()\n    this.drawArrow(endX, endY, angle)\n  }\n\n  // Animation methods\n  drawArrow(x: number, y: number, angle: number) {\n    const size = CONFIG.animation.arrowSize * 2\n\n    this.ctx.save()\n    this.ctx.translate(x, y)\n    this.ctx.rotate(angle)\n    this.ctx.fillStyle = CONFIG.animation.arrowColor\n    this.ctx.beginPath()\n    this.ctx.moveTo(0, 0)\n    this.ctx.lineTo(-size * 2, -size)\n    this.ctx.lineTo(-size * 1.5, 0)\n    this.ctx.lineTo(-size * 2, size)\n    this.ctx.closePath()\n    this.ctx.fill()\n    this.ctx.restore()\n  }\n\n  getAngle(startX: number, startY: number, endX: number, endY: number): number {\n    return Math.atan2(endY - startY, endX - startX)\n  }\n\n  setAnimationStyle(color: string) {\n    this.ctx.save()\n    this.ctx.strokeStyle = color\n    this.ctx.lineWidth = CONFIG.paths.drawing.width\n    this.ctx.lineCap = 'round'\n    this.ctx.lineJoin = 'round'\n    this.ctx.setLineDash([])\n  }\n\n  drawCompleteLine(startX: number, startY: number, endX: number, endY: number) {\n    this.ctx.beginPath()\n    this.ctx.moveTo(startX, startY)\n    this.ctx.lineTo(endX, endY)\n    this.ctx.stroke()\n  }\n\n  drawCircle(\n    centerX: number,\n    centerY: number,\n    radiusX: number,\n    radiusY: number,\n    startAngle: number,\n    endAngle: number\n  ) {\n    this.ctx.beginPath()\n    this.ctx.ellipse(\n      centerX,\n      centerY,\n      radiusX,\n      radiusY,\n      0,\n      startAngle,\n      endAngle,\n      true\n    )\n    this.ctx.stroke()\n  }\n\n  drawQuadraticCurve(\n    startX: number,\n    startY: number,\n    controlX: number,\n    controlY: number,\n    endX: number,\n    endY: number\n  ) {\n    this.ctx.beginPath()\n    this.ctx.moveTo(startX, startY)\n    this.ctx.quadraticCurveTo(controlX, controlY, endX, endY)\n    this.ctx.stroke()\n  }\n\n  restoreContext() {\n    this.ctx.restore()\n  }\n\n  drawStrokes(coords: any, maxStrokes?: number) {\n    const strokeCount = maxStrokes ?? Object.keys(coords).length\n\n    // 현재까지 완성된 획만 그립니다\n    this.ctx.save()\n    this.ctx.strokeStyle = CONFIG.paths.drawing.color\n    this.ctx.lineWidth = CONFIG.paths.drawing.width\n    this.ctx.lineCap = CONFIG.paths.drawing.cap as CanvasLineCap\n    this.ctx.lineJoin = CONFIG.paths.drawing.join as CanvasLineJoin\n\n    for (let i = 1; i <= strokeCount; i++) {\n      const stroke = coords[`stroke${i}`]\n      if (!stroke) continue\n\n      switch (stroke.type) {\n        case 'circle':\n          this.drawCircle(\n            stroke.center.x,\n            stroke.center.y,\n            stroke.radiusX,\n            stroke.radiusY,\n            0,\n            Math.PI * 2\n          )\n          break\n\n        case 'quadratic':\n          this.drawQuadraticCurve(\n            stroke.start.x,\n            stroke.start.y,\n            stroke.control.x,\n            stroke.control.y,\n            stroke.end.x,\n            stroke.end.y\n          )\n          break\n\n        case 'path':\n          if (stroke.commands) {\n            this.drawCompleteLine(\n              stroke.commands[0].x,\n              stroke.commands[0].y,\n              stroke.commands[1].x,\n              stroke.commands[1].y\n            )\n\n            if (stroke.commands[2]) {\n              this.drawQuadraticCurve(\n                stroke.commands[1].x,\n                stroke.commands[1].y,\n                stroke.commands[2].control.x,\n                stroke.commands[2].control.y,\n                stroke.commands[2].end.x,\n                stroke.commands[2].end.y\n              )\n            }\n          }\n          break\n\n        default: // 'line' type\n          if (stroke.middle) {\n            this.drawCompleteLine(\n              stroke.start.x,\n              stroke.start.y,\n              stroke.middle.x,\n              stroke.middle.y\n            )\n            this.drawCompleteLine(\n              stroke.middle.x,\n              stroke.middle.y,\n              stroke.end.x,\n              stroke.end.y\n            )\n          } else {\n            this.drawCompleteLine(\n              stroke.start.x,\n              stroke.start.y,\n              stroke.end.x,\n              stroke.end.y\n            )\n          }\n      }\n    }\n    this.ctx.restore()\n  }\n  restore() {\n    this.ctx.restore()\n  }\n}\n","// src/lib/audio.ts\n\nexport class AudioService {\n  private correctSound: HTMLAudioElement | null = null\n\n  constructor() {\n    this.initAudio()\n  }\n\n  private initAudio(): void {\n    this.correctSound = new Audio(\n      'https://kr.object.ncloudstorage.com/tesis/media/correct.mp3'\n    )\n\n    // iOS에서의 오디오 활성화\n    document.addEventListener(\n      'touchstart',\n      () => {\n        if (this.correctSound) {\n          this.correctSound.load()\n          this.correctSound\n            .play()\n            .then(() => {\n              this.correctSound?.pause()\n              if (this.correctSound) {\n                this.correctSound.currentTime = 0\n              }\n            })\n            .catch((error) => {\n              console.log('오디오 초기화 실패:', error)\n            })\n        }\n      },\n      { once: true }\n    )\n  }\n\n  public playSound(): void {\n    if (this.correctSound) {\n      this.correctSound.currentTime = 0\n      this.correctSound.play().catch((error) => {\n        console.error('오디오 재생 실패:', error)\n      })\n    }\n  }\n}\n","/**\r\n * (x, y, width, height) 픽셀 영역\r\n */\r\nexport class Rect {\r\n  constructor(\r\n    private _x: number,\r\n    readonly y: number,\r\n    readonly w: number,\r\n    readonly h: number\r\n  ) {}\r\n  get x() {\r\n    return this._x\r\n  }\r\n  setX(x: number) {\r\n    this._x = x\r\n  }\r\n}\r\n\r\nexport class NullRect extends Rect {\r\n  constructor() {\r\n    super(0, 0, 0, 0)\r\n  }\r\n}\r\n","export class RegionBlock {\r\n  offsetX: number // 0 | 0.6\r\n  offsetY: number // 0 | 0\r\n  width: number // 0.6  | 0.4\r\n  height: number // 1  | 1\r\n  coords: unknown //\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    coords?: unknown\r\n  ) {\r\n    this.offsetX = x\r\n    this.offsetY = y\r\n    this.width = width\r\n    this.height = height\r\n    this.coords = coords\r\n  }\r\n}\r\n","import type { Jamo } from './jamo'\r\nimport { Rect } from './rect'\r\nimport { RegionBlock } from './region-block'\r\nimport * as PatternClasses from './patterns'\r\n\r\n// 기본 패턴 클래스\r\nexport abstract class BasePattern {\r\n  protected regions: RegionBlock[]\r\n\r\n  constructor(regions: RegionBlock[]) {\r\n    this.regions = regions\r\n  }\r\n\r\n  getRect(width: number, height: number) {\r\n    return this.regions.map(\r\n      (region) =>\r\n        new Rect(\r\n          region.offsetX * width,\r\n          region.offsetY * height,\r\n          region.width * width,\r\n          region.height * height\r\n        )\r\n    )\r\n  }\r\n}\r\n\r\n// export class Patterns {\r\n//   static resolvePattern(jamos: Jamo[]): BasePattern {\r\n//     if (jamos.length === 1) {\r\n//       return new Pattern0()\r\n//     } else {\r\n//       const [first, second, third] = jamos // ㄱ ㅏ _\r\n\r\n//       if (third === '_') {\r\n//         if (['ㅏ', 'ㅑ', 'ㅣ'].includes(second)) {\r\n//           return new Pattern20()\r\n//         } else if (['ㅓ', 'ㅕ'].includes(second)) {\r\n//           return new Pattern21()\r\n//         } else if (['ㅗ', 'ㅛ'].includes(second)) {\r\n//           if (['ㄱ', 'ㅋ'].includes(first)) {\r\n//             return new Pattern221()\r\n//           } else if (['ㅅ', 'ㅈ', 'ㅊ'].includes(first)) {\r\n//             return new Pattern222()\r\n//           } else if (['ㅎ'].includes(first)) {\r\n//             return new Pattern223()\r\n//           } else {\r\n//             return new Pattern22()\r\n//           }\r\n//         } else if (['ㅜ', 'ㅠ'].includes(second)) {\r\n//           return new Pattern23()\r\n//         } else if (['ㅡ'].includes(second)) {\r\n//           if (['ㄱ', 'ㅋ'].includes(first)) {\r\n//             return new Pattern241()\r\n//           } else if (['ㅅ', 'ㅈ'].includes(first)) {\r\n//             return new Pattern242()\r\n//           } else if (['ㅊ', 'ㅎ'].includes(first)) {\r\n//             return new Pattern243()\r\n//           } else {\r\n//             return new Pattern24()\r\n//           }\r\n//         } else if (['ㅐ', 'ㅒ'].includes(second)) {\r\n//           return new Pattern25()\r\n//         } else if (['ㅔ', 'ㅖ'].includes(second)) {\r\n//           return new Pattern26()\r\n//         } else if (['ㅘ', 'ㅙ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern272()\r\n//           } else {\r\n//             return new Pattern271()\r\n//           }\r\n//         } else if (['ㅚ', 'ㅢ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern274()\r\n//           } else {\r\n//             return new Pattern273()\r\n//           }\r\n//         } else if (['ㅝ', 'ㅟ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern281()\r\n//           } else {\r\n//             return new Pattern28()\r\n//           }\r\n//         } else if (['ㅞ'].includes(second)) {\r\n//           return new Pattern29()\r\n//         } else {\r\n//           throw new Error('if statement error for')\r\n//         }\r\n//       } else {\r\n//         // ㄱ ㅏ ㅇ\r\n//         if (['ㅏ', 'ㅑ', 'ㅣ'].includes(second)) {\r\n//           return new Pattern30()\r\n//         } else if (['ㅓ', 'ㅕ'].includes(second)) {\r\n//           return new Pattern31()\r\n//         } else if (['ㅗ', 'ㅛ'].includes(second)) {\r\n//           if (['ㄱ', 'ㅋ'].includes(first)) {\r\n//             return new Pattern321()\r\n//           } else if (['ㅅ', 'ㅈ', 'ㅊ'].includes(first)) {\r\n//             return new Pattern322()\r\n//           } else if (['ㅇ', 'ㅎ'].includes(first)) {\r\n//             return new Pattern323()\r\n//           } else {\r\n//             return new Pattern32()\r\n//           }\r\n//         } else if (['ㅜ', 'ㅠ'].includes(second)) {\r\n//           if (['ㄴ', 'ㅂ', 'ㅅ', 'ㅆ'].includes(third)) {\r\n//             return new Pattern331()\r\n//           } else {\r\n//             return new Pattern33()\r\n//           }\r\n//         } else if (['ㅡ'].includes(second)) {\r\n//           if (!['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'].includes(first)) {\r\n//             if (!['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'].includes(third)) {\r\n//               console.log('Pattern34')\r\n//               return new Pattern34()\r\n//             } else {\r\n//               console.log('Pattern341')\r\n//               return new Pattern341()\r\n//             }\r\n//           } else {\r\n//             if (!['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'].includes(third)) {\r\n//               console.log('Pattern342')\r\n//               return new Pattern342()\r\n//             } else {\r\n//               console.log('Pattern343')\r\n//               return new Pattern343()\r\n//             }\r\n//           }\r\n//         } else if (['ㅐ', 'ㅒ'].includes(second)) {\r\n//           return new Pattern35()\r\n//         } else if (['ㅔ', 'ㅖ'].includes(second)) {\r\n//           return new Pattern36()\r\n//         } else if (['ㅘ', 'ㅙ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern372()\r\n//           } else {\r\n//             return new Pattern371()\r\n//           }\r\n//         } else if (['ㅚ', 'ㅢ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern374()\r\n//           } else {\r\n//             return new Pattern373()\r\n//           }\r\n//         } else if (['ㅝ', 'ㅟ'].includes(second)) {\r\n//           if (\r\n//             ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'].includes(\r\n//               first\r\n//             )\r\n//           ) {\r\n//             return new Pattern381()\r\n//           } else {\r\n//             return new Pattern38()\r\n//           }\r\n//         } else if (['ㅞ'].includes(second)) {\r\n//           if (\r\n//             [\r\n//               'ㄱ',\r\n//               'ㄲ',\r\n//               'ㅋ',\r\n//               'ㄹ',\r\n//               'ㅂ',\r\n//               'ㅅ',\r\n//               'ㅆ',\r\n//               'ㅈ',\r\n//               'ㅉ',\r\n//               'ㅊ',\r\n//               'ㅌ',\r\n//               'ㅎ'\r\n//             ].includes(first)\r\n//           ) {\r\n//             return new Pattern391()\r\n//           } else {\r\n//             return new Pattern39()\r\n//           }\r\n//         } else {\r\n//           throw new Error('if statement error for')\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport class Patterns {\r\n  private static readonly PATTERN_MAP = {\r\n    simple: {\r\n      'ㅏ,ㅑ,ㅣ': { empty: 'Pattern20', filled: 'Pattern30' },\r\n      'ㅓ,ㅕ': { empty: 'Pattern21', filled: 'Pattern31' },\r\n      'ㅐ,ㅒ': { empty: 'Pattern25', filled: 'Pattern35' },\r\n      'ㅔ,ㅖ': { empty: 'Pattern26', filled: 'Pattern36' }\r\n    },\r\n    complex: {\r\n      'ㅗ,ㅛ': {\r\n        rules: [\r\n          { cho: 'ㄱ,ㅋ', empty: 'Pattern221', filled: 'Pattern321' },\r\n          { cho: 'ㅅ,ㅈ,ㅊ', empty: 'Pattern222', filled: 'Pattern322' },\r\n          { cho: 'ㅎ', empty: 'Pattern223', filled: 'Pattern323' },\r\n          { cho: '*', empty: 'Pattern22', filled: 'Pattern32' }\r\n        ]\r\n      },\r\n      'ㅜ,ㅠ': {\r\n        rules: [\r\n          { cho: '*', jong: '*', empty: 'Pattern23', filled: 'Pattern33' },\r\n          {\r\n            cho: '*',\r\n            jong: 'ㄴ,ㅂ,ㅅ,ㅆ',\r\n            empty: 'Pattern23',\r\n            filled: 'Pattern331'\r\n          }\r\n        ]\r\n      },\r\n      ㅡ: {\r\n        rules: [\r\n          { cho: 'ㄱ,ㅋ', jong: '*', empty: 'Pattern241', filled: 'Pattern34' },\r\n          {\r\n            cho: 'ㄱ,ㅋ',\r\n            jong: 'ㄹ,ㅂ,ㅊ,ㅎ',\r\n            empty: 'Pattern241',\r\n            filled: 'Pattern341'\r\n          },\r\n          { cho: 'ㅅ,ㅈ', jong: '*', empty: 'Pattern242', filled: 'Pattern34' },\r\n          {\r\n            cho: 'ㅅ,ㅈ',\r\n            jong: 'ㄹ,ㅂ,ㅊ,ㅎ',\r\n            empty: 'Pattern242',\r\n            filled: 'Pattern341'\r\n          },\r\n          {\r\n            cho: 'ㄹ,ㅂ,ㅊ,ㅎ',\r\n            jong: '*',\r\n            empty: 'Pattern243',\r\n            filled: 'Pattern342'\r\n          },\r\n          { cho: 'ㄹ,ㅂ,ㅊ,ㅎ', jong: 'ㄹ,ㅂ,ㅊ,ㅎ', filled: 'Pattern343' },\r\n          { cho: '*', jong: '*', empty: 'Pattern24', filled: 'Pattern34' },\r\n          {\r\n            cho: '*',\r\n            jong: 'ㄹ,ㅂ,ㅊ,ㅎ',\r\n            empty: 'Pattern24',\r\n            filled: 'Pattern341'\r\n          }\r\n        ]\r\n      },\r\n      'ㅘ,ㅙ': {\r\n        rules: [\r\n          {\r\n            cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ',\r\n            empty: 'Pattern272',\r\n            filled: 'Pattern372'\r\n          },\r\n          { cho: '*', empty: 'Pattern271', filled: 'Pattern371' }\r\n        ]\r\n      },\r\n      'ㅚ,ㅢ': {\r\n        rules: [\r\n          {\r\n            cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ',\r\n            empty: 'Pattern274',\r\n            filled: 'Pattern374'\r\n          },\r\n          { cho: '*', empty: 'Pattern273', filled: 'Pattern373' }\r\n        ]\r\n      },\r\n      'ㅝ,ㅟ': {\r\n        rules: [\r\n          {\r\n            cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ',\r\n            empty: 'Pattern281',\r\n            filled: 'Pattern381'\r\n          },\r\n          { cho: '*', empty: 'Pattern28', filled: 'Pattern38' }\r\n        ]\r\n      },\r\n      ㅞ: {\r\n        rules: [\r\n          {\r\n            cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ',\r\n            empty: 'Pattern291',\r\n            filled: 'Pattern391'\r\n          },\r\n          { cho: '*', empty: 'Pattern29', filled: 'Pattern39' }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  static resolvePattern(jamos: Jamo[]): BasePattern {\r\n    if (jamos.length === 1) {\r\n      return new Pattern0()\r\n    }\r\n\r\n    const [first, second, third] = jamos\r\n    const isEmpty = third === '_'\r\n\r\n    // 단순 패턴 먼저 확인\r\n    for (const [vowels, patterns] of Object.entries(this.PATTERN_MAP.simple)) {\r\n      if (this.includesAny(second, vowels)) {\r\n        const patternName = isEmpty ? patterns.empty : patterns.filled\r\n        console.log('simple ', patternName)\r\n        return this.createPattern(patternName)\r\n      }\r\n    }\r\n\r\n    // 복잡한 패턴 확인\r\n    for (const [vowels, config] of Object.entries(this.PATTERN_MAP.complex)) {\r\n      if (this.includesAny(second, vowels)) {\r\n        const rule = this.findMatchingRule(config.rules, first, third, isEmpty)\r\n        if (rule) {\r\n          const patternName = isEmpty ? rule.empty : rule.filled\r\n          console.log('complex ', patternName)\r\n          return this.createPattern(patternName)\r\n        }\r\n      }\r\n    }\r\n\r\n    throw new Error(`Unable to resolve pattern for jamos: ${jamos.join(',')}`)\r\n  }\r\n\r\n  private static includesAny(char: string, list: string): boolean {\r\n    return list.split(',').includes(char)\r\n  }\r\n\r\n  private static findMatchingRule(\r\n    rules: any[],\r\n    first: string,\r\n    third: string,\r\n    isEmpty: boolean\r\n  ): any {\r\n    for (const rule of rules) {\r\n      if (rule.cho === '*') return rule\r\n      if (rule.cho && this.includesAny(first, rule.cho)) return rule\r\n      if (rule.jong && !isEmpty && this.includesAny(third, rule.jong))\r\n        return rule\r\n    }\r\n    return null\r\n  }\r\n\r\n  private static createPattern(patternName: string): BasePattern {\r\n    const PatternClass = (PatternClasses as any)[patternName]\r\n    if (!PatternClass) {\r\n      throw new Error(`Pattern class not found: ${patternName}`)\r\n    }\r\n    return new PatternClass()\r\n  }\r\n}\r\n/**\r\n * 각각의 초성, 중성\r\n */\r\nexport class Pattern0 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n\r\n  get count() {\r\n    return 1\r\n  }\r\n}\r\n/**\r\n * 초성+중성\r\n */\r\n// ['ㅏ', 'ㅑ', 'ㅣ']\r\nexport class Pattern20 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.02, 0.05, 0.65, 0.9),\r\n      new RegionBlock(0.5, 0, 0.5, 1)\r\n    ])\r\n  }\r\n}\r\n\r\n// ['ㅓ', 'ㅕ']\r\nexport class Pattern21 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.02, 0.05, 0.65, 0.9),\r\n      new RegionBlock(0.45, 0, 0.5, 1)\r\n    ])\r\n  }\r\n}\r\n\r\n// cho: '*' + ['ㅗ', 'ㅛ']\r\nexport class Pattern22 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.75),\r\n      new RegionBlock(0, 0.45, 1, 0.6)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern221 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0, 0.9, 0.85),\r\n      new RegionBlock(0, 0.32, 1, 0.8)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅅ,ㅈ,ㅊ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern222 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0, 0.9, 0.85),\r\n      new RegionBlock(0, 0.45, 1, 0.6)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅎ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern223 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0, 0.9, 0.8),\r\n      new RegionBlock(0, 0.525, 1, 0.5)\r\n    ])\r\n  }\r\n}\r\n\r\n// cho: '*' + ['ㅜ', 'ㅠ']\r\nexport class Pattern23 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0.03, 0.8, 0.6),\r\n      new RegionBlock(0, 0.25, 1, 1)\r\n    ])\r\n  }\r\n}\r\n\r\n// cho: '*' + ['ㅡ']\r\nexport class Pattern24 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0.05, 0.8, 0.65),\r\n      new RegionBlock(0, 0.375, 1, 0.8)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ' + ['ㅡ']\r\nexport class Pattern241 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0.05, 0.825, 0.75),\r\n      new RegionBlock(0, 0.375, 1, 0.8)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅅ,ㅈ' + ['ㅡ']\r\nexport class Pattern242 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.75),\r\n      new RegionBlock(0, 0.375, 1, 0.8)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅊ,ㅎ' + ['ㅡ']\r\nexport class Pattern243 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.8),\r\n      new RegionBlock(0, 0.375, 1, 0.8)\r\n    ])\r\n  }\r\n}\r\n\r\n// ['ㅐ',  'ㅒ']\r\nexport class Pattern25 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.02, 0.05, 0.6, 0.9),\r\n      new RegionBlock(0.4, 0, 0.65, 1)\r\n    ])\r\n  }\r\n}\r\n\r\n// ['ㅔ',  'ㅖ']\r\nexport class Pattern26 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.02, 0.05, 0.6, 0.9),\r\n      new RegionBlock(0.3, 0, 0.8, 1)\r\n    ])\r\n  }\r\n}\r\n\r\n// cho: '*' + ['ㅘ', 'ㅙ']\r\nexport class Pattern271 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.05, 0.08, 0.65, 0.6), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ' +  ['ㅘ', 'ㅙ']\r\nexport class Pattern272 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.05, 0.03, 0.65, 0.7), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n// cho: '*' + ['ㅚ', 'ㅢ']\r\nexport class Pattern273 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.1, 0.08, 0.65, 0.6), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ' + ['ㅚ', 'ㅢ']\r\nexport class Pattern274 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.1, 0.03, 0.65, 0.7), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n\r\n//  cho: '*' + ['ㅝ', 'ㅟ']\r\nexport class Pattern28 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.12, 0.08, 0.6, 0.5), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ' + ['ㅝ', 'ㅟ']\r\nexport class Pattern281 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.12, 0.05, 0.6, 0.55), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n\r\n//  cho: '*' + ['ㅞ']\r\nexport class Pattern29 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.05, 0.08, 0.6, 0.5), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ,ㄲ,ㅅ,ㅆ,ㅈ,ㅈ,ㅊ,ㅎ' + ['ㅞ']\r\nexport class Pattern291 extends BasePattern {\r\n  constructor() {\r\n    super([new RegionBlock(0.05, 0.08, 0.6, 0.5), new RegionBlock(0, 0, 1, 1)])\r\n  }\r\n}\r\n\r\n// 종성 + ['ㅏ', 'ㅑ', 'ㅣ']\r\nexport class Pattern30 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.6, 0.65),\r\n      new RegionBlock(0.5, 0, 0.5, 0.65),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n\r\n// ['ㅓ', 'ㅕ']\r\nexport class Pattern31 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.6, 0.65),\r\n      new RegionBlock(0.45, 0, 0.5, 0.65),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n\r\n// 기타 + ['ㅗ', 'ㅛ']\r\nexport class Pattern32 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0.05, 0.8, 0.45),\r\n      new RegionBlock(0, 0.335, 1, 0.33),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㄱ,ㅋ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern321 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.55),\r\n      new RegionBlock(0, 0.335, 1, 0.33),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅅ,ㅈ,ㅊ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern322 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.335, 1, 0.33),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// cho: 'ㅎ' + ['ㅗ', 'ㅛ']\r\nexport class Pattern323 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.335, 1, 0.33),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n\r\n// ['ㅜ', 'ㅠ']\r\nexport class Pattern33 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.375, 1, 0.33),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// ['ㅜ', 'ㅠ'] + jong: 'ㄴ,ㅂ,ㅅ,ㅆ'\r\nexport class Pattern331 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.275, 1, 0.6),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// !['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'] + ['ㅡ'] + !['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ']\r\nexport class Pattern34 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.35, 1, 0.35),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// !['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'] + ['ㅡ'] + ['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ']\r\nexport class Pattern341 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.325, 1, 0.35),\r\n      new RegionBlock(0.1, 0.5, 0.8, 0.5)\r\n    ])\r\n  }\r\n}\r\n// ['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'] + ['ㅡ'] + !['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ']\r\nexport class Pattern342 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.6),\r\n      new RegionBlock(0, 0.355, 1, 0.35),\r\n      new RegionBlock(0.1, 0.55, 0.8, 0.45)\r\n    ])\r\n  }\r\n}\r\n// ['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ'] + ['ㅡ'] + ['ㄹ', 'ㅂ', 'ㅊ', 'ㅎ']\r\nexport class Pattern343 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.8, 0.5),\r\n      new RegionBlock(0, 0.325, 1, 0.35),\r\n      new RegionBlock(0.1, 0.525, 0.8, 0.5)\r\n    ])\r\n  }\r\n}\r\n\r\n// cho: '*' + ['ㅐ',  'ㅒ']\r\nexport class Pattern35 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0.05, 0.6, 0.6),\r\n      new RegionBlock(0.4, 0, 0.65, 0.65),\r\n      new RegionBlock(0.1, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n// cho: '*' + ['ㅔ',  'ㅖ']\r\nexport class Pattern36 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0.05, 0.6, 0.6),\r\n      new RegionBlock(0.3, 0, 0.8, 0.7),\r\n      new RegionBlock(0.1, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n// cho: '*' + ['ㅘ', 'ㅙ']\r\nexport class Pattern371 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0.03, 0.65, 0.5),\r\n      new RegionBlock(0, 0, 1, 0.7),\r\n      new RegionBlock(0.05, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n//  ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'] + ['ㅘ', 'ㅙ']\r\nexport class Pattern372 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0, 0.65, 0.5),\r\n      new RegionBlock(0, 0, 1, 0.7),\r\n      new RegionBlock(0.05, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n// ['ㅚ', 'ㅢ']\r\nexport class Pattern373 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0.03, 0.65, 0.5),\r\n      new RegionBlock(0.025, 0, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n// ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'] + ['ㅚ', 'ㅢ']\r\nexport class Pattern374 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.1, 0, 0.6, 0.5),\r\n      new RegionBlock(0.025, 0, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.55, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n//  ['ㅝ', 'ㅟ']\r\nexport class Pattern38 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.09, 0.02, 0.65, 0.45),\r\n      new RegionBlock(0.025, 0.02, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.6, 0.9, 0.4)\r\n    ])\r\n  }\r\n}\r\n// ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'] + ['ㅝ', 'ㅟ']\r\nexport class Pattern381 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.09, 0.02, 0.65, 0.45),\r\n      new RegionBlock(0.025, 0.02, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.575, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n//  ['ㅞ']\r\nexport class Pattern39 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0.02, 0.65, 0.4),\r\n      new RegionBlock(0.025, 0.02, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.575, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n// ['ㄱ', 'ㄲ', 'ㅋ', 'ㅅ', 'ㅆ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅎ'] + ['ㅞ']\r\nexport class Pattern391 extends BasePattern {\r\n  constructor() {\r\n    super([\r\n      new RegionBlock(0.05, 0.02, 0.65, 0.45),\r\n      new RegionBlock(0.025, 0.02, 0.95, 0.7),\r\n      new RegionBlock(0.05, 0.575, 0.9, 0.45)\r\n    ])\r\n  }\r\n}\r\n/**\r\n * 낱말 모드를 위한 새로운 패턴\r\n * 각 음절을 가로로 나란히 배치\r\n */\r\nexport class WordPattern {\r\n  patterns: BasePattern[]\r\n  constructor(readonly chars: Jamo[][]) {\r\n    // const regions = Array(syllableCount).fill(0).map((_, i) => {\r\n    //   const x = i * (syllableWidth + gap);\r\n    //   return new RegionBlock(x, 0, syllableWidth, 1);\r\n    // });\r\n    this.patterns = chars.flatMap((jamos) => {\r\n      const pattern = Patterns.resolvePattern(jamos)\r\n      return pattern\r\n    })\r\n  }\r\n  getRect(width: number, height: number): Rect[] {\r\n    // 글자 당 너비\r\n    const widthPerChar = width / this.patterns.length\r\n    return this.patterns.flatMap((pattern, index) => {\r\n      const rects = pattern.getRect(widthPerChar, height)\r\n      rects.forEach((rect) => {\r\n        rect.setX(rect.x + index * widthPerChar)\r\n      })\r\n      // 종성이 '_'인 경우에도 3개의 rect를 반환하도록 수정\r\n      while (rects.length < 3) {\r\n        // NullRect 대신 실제 빈 공간을 나타내는 Rect 사용\r\n        const emptyRect = new Rect(\r\n          rects[0].x, // 같은 x 위치 사용\r\n          rects[0].y + rects[0].h, // 마지막 rect 아래에 위치\r\n          rects[0].w, // 같은 너비 사용\r\n          0 // 높이는 0으로 설정\r\n        )\r\n        rects.push(emptyRect)\r\n      }\r\n      return rects\r\n    })\r\n  }\r\n}\r\n","// canvas-handler.ts\r\n/// <reference lib=\"dom\" />\r\n\r\nimport type { KoWritingResponse } from '../types/types'\r\n\r\nimport { StrokeEvaluator } from './stroke-evaluator'\r\nimport { DrawingService } from './drawing-service'\r\nimport { AudioService } from '../lib/audio'\r\nimport type { Jamo, Jaeum, Moeum } from './jamo' // Jaeum, Moeum 추가\r\nimport { NullRect, Rect } from './rect'\r\nimport { type WordPattern, Patterns } from './patterns'\r\nimport { CharState } from './char-state'\r\nimport { CHAR_PATHS, CONFIG, START_POINT_OFFSETS } from './canvas-config'\r\ntype KoWritingListener = (response: KoWritingResponse) => void\r\n\r\nexport class CanvasHandler {\r\n  private listeners: KoWritingListener[] = []\r\n  private drawingService: DrawingService\r\n\r\n  private readonly audioService: AudioService\r\n  private evaluator: StrokeEvaluator\r\n  private charState = CharState.getInstance()\r\n  /**\r\n   * FIXME private 인데 일단 public으로 변경했음.\r\n   */\r\n  public currentStroke: Array<[number, number]> = []\r\n  public strokeHistory: Array<Array<[number, number]>> = []\r\n  private isCompleted: boolean = true\r\n  private isDrawingBroken: boolean = false\r\n  private currentStrokeNumber = 1\r\n  private _error: boolean = false\r\n  private isDrawing: boolean = false\r\n  private startTime: number = 0\r\n\r\n  public jamos: Jamo[] = []\r\n  private rects: Rect[] = []\r\n  private _jamoIndex: number = 0\r\n  private _pathes: any[] = []\r\n  private _strokes: number[] = []\r\n  public mode: 'jamo' | 'char' | 'word' = 'jamo'\r\n  private currentEvalResult: KoWritingResponse | null = null\r\n\r\n  constructor(readonly canvas: HTMLCanvasElement) {\r\n    this.drawingService = new DrawingService(canvas)\r\n    this.audioService = new AudioService()\r\n    this.evaluator = new StrokeEvaluator(\r\n      CONFIG.tolerance,\r\n      undefined,\r\n      undefined,\r\n      1\r\n    )\r\n  }\r\n\r\n  setPhoneme(jamos: Jamo[]) {\r\n    if (JSON.stringify(this.jamos) === JSON.stringify(jamos)) {\r\n      // console.log('상태가 변경되지 않았으므로 setPhoneme 실행 안 함')\r\n      return // 상태가 같으면 실행하지 않음\r\n    }\r\n    this.jamos = jamos\r\n    const pattern = Patterns.resolvePattern(jamos)\r\n    if (!pattern) return\r\n    this.rects = pattern.getRect(CONFIG.canvas.width, CONFIG.canvas.height)\r\n\r\n    this.evaluator = new StrokeEvaluator(\r\n      CONFIG.tolerance,\r\n      undefined,\r\n      undefined,\r\n      1\r\n    )\r\n\r\n    // const nextChars = jamos.map((_, i) => jamos[i + 1])\r\n\r\n    this._pathes = this.rects.map(({ x, y, w, h }, index) => {\r\n      const ch = this.jamos[index]\r\n      const nextChar = this.jamos[index + 1]\r\n      this.charState.setNextChar(nextChar)\r\n      return CHAR_PATHS[ch].calculateCoords(w, h, x, y)\r\n    })\r\n\r\n    this._strokes = this.jamos.map((jamo) => CHAR_PATHS[jamo].strokes)\r\n    for (let k = 1; k < this._strokes.length; k++) {\r\n      this._strokes[k] += this._strokes[k - 1]\r\n    }\r\n    this.initialize()\r\n  }\r\n\r\n  //   private setNextChar(char: Jamo | undefined) {\r\n  //     nextCharValue = char\r\n  //   }\r\n\r\n  // Public interface methods\r\n  initialize() {\r\n    const { canvas } = this\r\n    canvas.width = CONFIG.canvas.width\r\n    canvas.height = CONFIG.canvas.height\r\n    this.resetState()\r\n    this.drawingService.clearCanvas()\r\n    this.drawPathes()\r\n    this.drawStartPoints()\r\n    this.startTime = Date.now()\r\n    this._jamoIndex = 0\r\n  }\r\n\r\n  setMode(tabId: string) {\r\n    this.mode = tabId.startsWith('jamo')\r\n      ? 'jamo'\r\n      : tabId.startsWith('char')\r\n      ? 'char'\r\n      : 'word'\r\n  }\r\n\r\n  updateCanvasSize(size: number) {\r\n    const prevWidth = CONFIG.canvas.width\r\n    const prevHeight = CONFIG.canvas.height\r\n\r\n    // Calculate size ratio\r\n    const sizeRatio = size / 600\r\n    this.updateConfigSizes(sizeRatio)\r\n\r\n    // Update canvas dimensions based on mode\r\n    if (this.mode === 'word' && this.rects.length > 0) {\r\n      const charCount = Math.ceil(this.jamos.length / 3)\r\n      CONFIG.canvas.width = size * charCount\r\n      CONFIG.canvas.height = size\r\n      this.drawingService.updateCanvasSize(size * charCount, size)\r\n    } else {\r\n      CONFIG.canvas.width = size\r\n      CONFIG.canvas.height = size\r\n      this.drawingService.updateCanvasSize(size, size)\r\n    }\r\n\r\n    // Skip if no rects to update\r\n    if (this.rects.length === 0) {\r\n      this.reinitializeWithState()\r\n      return\r\n    }\r\n\r\n    // Calculate scaling ratios\r\n    const widthRatio = CONFIG.canvas.width / prevWidth\r\n    const heightRatio = CONFIG.canvas.height / prevHeight\r\n\r\n    // Update rects with proper scaling\r\n    this.rects = this.rects.map((rect) => {\r\n      if (rect instanceof NullRect) return rect\r\n\r\n      if (this.mode === 'word') {\r\n        // For word mode, maintain height while scaling width\r\n        return new Rect(\r\n          rect.x * widthRatio,\r\n          rect.y,\r\n          rect.w * widthRatio,\r\n          rect.h\r\n        )\r\n      } else {\r\n        // For jamo and char modes, scale both dimensions\r\n        return new Rect(\r\n          rect.x * widthRatio,\r\n          rect.y * heightRatio,\r\n          rect.w * widthRatio,\r\n          rect.h * heightRatio\r\n        )\r\n      }\r\n    })\r\n\r\n    // Recalculate paths with new dimensions\r\n    this._pathes = this.rects.map((rect, i) => {\r\n      const ch = this.jamos[i]\r\n      if (ch === '_') return null\r\n\r\n      const nextChar = this.jamos[i + 1]\r\n      this.charState.setNextChar(nextChar)\r\n      return rect instanceof NullRect\r\n        ? null\r\n        : this.calculateCharCoords(ch, rect)\r\n    })\r\n\r\n    // Reinitialize while maintaining current state\r\n    this.reinitializeWithState()\r\n  }\r\n\r\n  private reinitializeWithState() {\r\n    const { canvas } = this\r\n    canvas.width = CONFIG.canvas.width\r\n    canvas.height = CONFIG.canvas.height\r\n\r\n    // 캔버스 초기화\r\n    this.drawingService.clearCanvas()\r\n    this.drawPathes()\r\n    this.drawStartPoints()\r\n\r\n    // 이전에 그린 획들 다시 그리기\r\n    //this.redrawHistory()\r\n    if (this.strokeHistory.length > 0) {\r\n      this.drawingService.drawHistory()\r\n    }\r\n  }\r\n\r\n  updateTolerance(tol: number) {\r\n    CONFIG.tolerance = tol\r\n    this.evaluator = new StrokeEvaluator(tol)\r\n    this.initialize()\r\n  }\r\n\r\n  setPattern(pattern: WordPattern, chars: Jamo[][]) {\r\n    const prevWidth = CONFIG.canvas.width\r\n    const baseHeight = CONFIG.canvas.height\r\n    this.mode = 'word'\r\n    this.jamos = chars.flatMap((ch) => ch)\r\n\r\n    // 전체 글자 수를 기반으로 캔버스 너비 계산\r\n    const charCount = chars.length\r\n    const width = baseHeight * charCount // 각 글자가 정사각형 영역을 차지하도록\r\n    CONFIG.canvas.width = width\r\n    this.rects = pattern.getRect(width, CONFIG.canvas.height)\r\n\r\n    // 크기가 변경된 경우 비율 계산하여 적용\r\n    // if (prevWidth !== width) {\r\n    //   const widthRatio = width / prevWidth\r\n    //   this.rects = this.rects.map((rect) =>\r\n    //     rect instanceof NullRect\r\n    //       ? rect\r\n    //       : new Rect(rect.x * widthRatio, rect.y, rect.w * widthRatio, rect.h)\r\n    //   )\r\n    // }\r\n\r\n    this.evaluator = new StrokeEvaluator(\r\n      CONFIG.tolerance,\r\n      undefined,\r\n      undefined,\r\n      chars.length // 전체 글자 수 전달\r\n    )\r\n\r\n    this.setupPathesAndStrokes()\r\n    // this.initialize()\r\n    this.reinitializeWithState()\r\n  }\r\n\r\n  // Event binding\r\n  bindEventListener(listener: KoWritingListener) {\r\n    const options: AddEventListenerOptions = { passive: false }\r\n\r\n    this.canvas.addEventListener(\r\n      'touchstart',\r\n      (e) => this.handleStart(e),\r\n      options\r\n    )\r\n    this.canvas.addEventListener(\r\n      'touchmove',\r\n      (e) => this.handleMove(e),\r\n      options\r\n    )\r\n    this.canvas.addEventListener('touchend', (e) => this.handleEnd(e), options)\r\n    this.canvas.addEventListener('mousedown', (e) => this.handleStart(e))\r\n    this.canvas.addEventListener('mousemove', (e) => this.handleMove(e))\r\n    this.canvas.addEventListener('mouseup', (e) => this.handleEnd(e))\r\n    this.canvas.addEventListener('mouseleave', (e) => this.handleEnd(e))\r\n\r\n    document.addEventListener(\r\n      'touchstart',\r\n      () => {\r\n        if (window.speechSynthesis) {\r\n          window.speechSynthesis.speak(new SpeechSynthesisUtterance(''))\r\n        }\r\n      },\r\n      { once: true }\r\n    )\r\n\r\n    this.updateCanvasSize(500)\r\n    if (listener) {\r\n      this.listeners.push(listener)\r\n    }\r\n  }\r\n\r\n  // Event handlers\r\n  handleStart(e: TouchEvent | MouseEvent) {\r\n    e.preventDefault()\r\n\r\n    const coords = this.getCoordinates(e)\r\n    console.log('HandleStart coords:', coords)\r\n    console.log('Current jamo index:', this._jamoIndex)\r\n    console.log('Current jamos:', this.jamos)\r\n    console.log('Current paths:', this._pathes)\r\n    console.log('Current CONFIG.tolerance:', CONFIG.tolerance)\r\n\r\n    if (this.isNearStrokeStart(coords.x, coords.y)) {\r\n      if (this._error) {\r\n        this.drawingService.clearCanvas()\r\n        this.drawPathes()\r\n        this.drawStartPoints()\r\n        this.redrawHistory()\r\n      }\r\n\r\n      this.drawingService.setAnimationStyle(CONFIG.paths.drawing.color)\r\n\r\n      this.isDrawing = true\r\n      this.isDrawingBroken = false\r\n      this.currentStroke = [[coords.x, coords.y]]\r\n      this.startTime = Date.now()\r\n\r\n      this.notifyListeners({\r\n        success: true,\r\n        stroke: { current: 0, total: this.totalStrokes },\r\n      })\r\n    }\r\n  }\r\n\r\n  handleMove(e: TouchEvent | MouseEvent) {\r\n    e.preventDefault()\r\n    if (!this.isDrawing) return\r\n\r\n    const coords = this.getCoordinates(e)\r\n    this.currentStroke.push([coords.x, coords.y])\r\n    this.drawingService.drawUserStroke(this.currentStroke)\r\n  }\r\n\r\n  handleEnd(e: TouchEvent | MouseEvent) {\r\n    e.preventDefault()\r\n    if (!this.isDrawing) return\r\n\r\n    const evalResult = this.evaluateStroke()\r\n    this.currentEvalResult = evalResult\r\n    console.log('Evaluation result:', evalResult)\r\n\r\n    if (evalResult.success) {\r\n      this.handleSuccessfulStroke()\r\n    } else {\r\n      this._error = true\r\n      this.showFailFeedback()\r\n    }\r\n\r\n    this.isDrawing = false\r\n    this.currentStroke = []\r\n  }\r\n\r\n  // Helper methods\r\n  private updateConfigSizes(sizeRatio: number) {\r\n    CONFIG.paths.guide.width = Math.max(2, Math.floor(4 * sizeRatio))\r\n    CONFIG.paths.drawing.width = Math.max(8, Math.floor(32 * sizeRatio))\r\n    CONFIG.paths.background.widthOffset = Math.max(\r\n      15,\r\n      Math.floor(60 * sizeRatio)\r\n    )\r\n    CONFIG.startPoint.radius = Math.max(4, Math.floor(15 * sizeRatio))\r\n    CONFIG.animation.arrowSize = Math.max(3, Math.floor(12 * sizeRatio))\r\n\r\n    //  CONFIG.tolerance = Math.max(5, Math.floor(10 * sizeRatio))\r\n    CONFIG.minStrokeLength = Math.max(25, Math.floor(50 * sizeRatio))\r\n  }\r\n\r\n  private setupPathesAndStrokes() {\r\n    this._pathes = this.rects.map((rect, i) => {\r\n      const ch = this.jamos[i]\r\n      if (ch === '_') return null\r\n\r\n      const nextChar = this.jamos[i + 1]\r\n      this.charState.setNextChar(nextChar)\r\n      return rect instanceof NullRect\r\n        ? null\r\n        : this.calculateCharCoords(ch, rect)\r\n      // CHAR_PATHS[ch].calculateCoords(rect.w, rect.h, rect.x, rect.y)\r\n    })\r\n\r\n    this._strokes = this.jamos.map((jamo) =>\r\n      jamo === '_' ? 0 : this.getStrokeCount(jamo)\r\n    )\r\n    // this._strokes = this.jamos.map((jamo) =>\r\n    //     jamo === '_' ? 0 : CHAR_PATHS[jamo].strokes\r\n    // )\r\n\r\n    for (let k = 1; k < this._strokes.length; k++) {\r\n      this._strokes[k] += this._strokes[k - 1]\r\n    }\r\n  }\r\n\r\n  // private redrawHistory() {\r\n  //   this.strokeHistory.forEach((stroke) =>\r\n  //     this.drawingService.drawUserStroke(stroke)\r\n  //   )\r\n  // }\r\n\r\n  private redrawHistory() {\r\n    this.drawingService.setAnimationStyle(CONFIG.paths.drawing.color)\r\n    this.strokeHistory.forEach((stroke) => {\r\n      this.drawingService.drawUserStroke(stroke)\r\n    })\r\n    this.drawingService.restore()\r\n  }\r\n\r\n  private notifyListeners(response: KoWritingResponse) {\r\n    // console.log('Notifying listeners with response:', response)\r\n    this.listeners.forEach((listener) => listener(response))\r\n  }\r\n\r\n  // Drawing methods\r\n  drawPathes() {\r\n    if (this.jamos.length === 0) return\r\n\r\n    this._pathes.forEach((path, index) => {\r\n      // const offset = index === 0 ? 0 : this._strokes[index - 1]\r\n      this.drawPath(path, this.jamos[index])\r\n\r\n      // const rect = this.rects[index]\r\n      // this.drawingService.drawRect(rect)\r\n    })\r\n  }\r\n\r\n  drawStartPoints() {\r\n    this._pathes.forEach((path, index) => {\r\n      if (!path) return\r\n      const offset = index === 0 ? 0 : this._strokes[index - 1]\r\n      const jamo = this.jamos[index]\r\n      if (jamo === '_' || !jamo) return\r\n\r\n      if (!(jamo in START_POINT_OFFSETS)) return\r\n      const offsets =\r\n        START_POINT_OFFSETS[jamo as keyof typeof START_POINT_OFFSETS]\r\n      if (!offsets) return\r\n\r\n      const radius = CONFIG.startPoint.radius\r\n      const offsetDist = radius * 2\r\n\r\n      offsets.forEach((offsetData, i) => {\r\n        const strokeNum = i + 1\r\n        const stroke = path[`stroke${strokeNum}`]\r\n        if (!stroke?.start) return\r\n\r\n        const x = stroke.start.x + offsetData.x * offsetDist\r\n        const y = stroke.start.y + offsetData.y * offsetDist\r\n        this.drawingService.drawStartPoint(x, y, strokeNum + (offset || 0))\r\n      })\r\n    })\r\n  }\r\n\r\n  private drawPath(coords: any, character: Jamo | undefined) {\r\n    if (!coords || character === '_') return\r\n\r\n    // 다음 문자 설정을 여기서 해야할 수 있습니다\r\n    const nextChar = this.jamos[this._jamoIndex + 1]\r\n    this.charState.setNextChar(nextChar)\r\n\r\n    // coords가 적절한 형식인지 확인\r\n    // console.log('Drawing path for:', {\r\n    //   character,\r\n    //   coords,\r\n    //   strokeOffset,\r\n    //   nextChar\r\n    // })\r\n\r\n    this.drawingService.drawStrokePath(coords)\r\n    this.drawEndPoints(coords, character)\r\n  }\r\n\r\n  private drawEndPoints(coords: any, character: Jamo | undefined) {\r\n    if (!character) return\r\n    let strokeCount = this.getStrokeCount(character)\r\n    for (let i = 1; i <= strokeCount; i++) {\r\n      const stroke = coords[`stroke${i}`]\r\n      if (stroke) {\r\n        if (stroke.type === 'circle') {\r\n          this.drawingService.drawEndPoint(stroke.start.x, stroke.start.y)\r\n        } else {\r\n          this.drawingService.drawEndPoint(\r\n            stroke.end ? stroke.end.x : stroke.middle.x,\r\n            stroke.end ? stroke.end.y : stroke.middle.y\r\n          )\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // State management methods\r\n  private resetState() {\r\n    this.isDrawing = false\r\n    this.currentStroke = []\r\n    this.strokeHistory = []\r\n    this.isCompleted = false\r\n    this.isDrawingBroken = false\r\n    this.currentStrokeNumber = 1\r\n    this._error = false\r\n  }\r\n\r\n  private handleSuccessfulStroke() {\r\n    this.strokeHistory.push([...this.currentStroke])\r\n    this.drawingService.addStrokeToHistory(this.currentStroke)\r\n\r\n    if (this.currentStrokeNumber < this.totalStrokes) {\r\n      this.showRunningFeedback()\r\n    } else {\r\n      this.isCompleted =\r\n        this.mode === 'jamo' ? this._jamoIndex + 1 === this.jamos.length : true\r\n\r\n      if (this.isCompleted) {\r\n        this.showSuccessFeedback()\r\n      }\r\n      this.currentStrokeNumber = 0\r\n      // if (this.mode === 'jamo') {\r\n      //   this.isCompleted = this._jamoIndex + 1 === this.jamos.length\r\n      // } else {\r\n      //   this.isCompleted = true\r\n      // }\r\n\r\n      // if (this.isCompleted) {\r\n      //   this.showSuccessFeedback()\r\n      // }\r\n      // this.currentStrokeNumber = 0\r\n    }\r\n\r\n    if (this._strokes[this._jamoIndex] === this.currentStrokeNumber) {\r\n      this._jamoIndex++\r\n    }\r\n    this.currentStrokeNumber++\r\n  }\r\n\r\n  private evaluateStroke(): KoWritingResponse {\r\n    const { currentStroke, isDrawingBroken } = this\r\n    if (currentStroke.length < 2) {\r\n      return {\r\n        success: false,\r\n        stroke: {\r\n          current: this.currentStrokeNumber,\r\n          total: this.totalStrokes,\r\n        },\r\n      }\r\n    }\r\n\r\n    if (!this.currentChar) throw new Error('No current character')\r\n\r\n    // const currentCharIndex = Math.floor(this._jamoIndex / 3)\r\n    const totalChars = Math.ceil(this.jamos.length / 3)\r\n\r\n    this.evaluator = new StrokeEvaluator(\r\n      CONFIG.tolerance,\r\n      this.currentChar as Jaeum | Moeum,\r\n      this.revisedStrokeNum,\r\n      totalChars\r\n    )\r\n\r\n    const coords = this._pathes[this._jamoIndex]\r\n    const currentStrokeCoords = coords?.[`stroke${this.revisedStrokeNum}`]\r\n\r\n    console.log('Evaluate Stroke Debug:', {\r\n      jamoIndex: this._jamoIndex,\r\n      revisedStrokeNum: this.revisedStrokeNum,\r\n      coords: coords,\r\n      currentStrokeCoords: currentStrokeCoords,\r\n    })\r\n\r\n    if (!currentStrokeCoords) {\r\n      return {\r\n        success: false,\r\n        stroke: {\r\n          current: this.currentStrokeNumber,\r\n          total: this.totalStrokes,\r\n        },\r\n      }\r\n    }\r\n\r\n    this.evaluator.setCurrentChar(this.currentChar as Jaeum | Moeum)\r\n    this.evaluator.setStrokeNum(this.revisedStrokeNum)\r\n    // 현재 자모 인덱스 정보 전달 추가\r\n    // this.evaluator.setJamoIndex(this._jamoIndex)\r\n\r\n    let evaluationResult\r\n    try {\r\n      evaluationResult = this.evaluator[\r\n        currentStrokeCoords.type === 'circle'\r\n          ? 'evaluateCircle'\r\n          : currentStrokeCoords.type === 'quadratic'\r\n          ? 'evaluateQuadratic'\r\n          : currentStrokeCoords.type === 'path'\r\n          ? 'evaluatePath'\r\n          : 'evaluateLine'\r\n      ](currentStroke, currentStrokeCoords, isDrawingBroken)\r\n\r\n      // const isSuccessful = Object.values(evaluationResult).every(\r\n      //   (value) => value === true\r\n      // )\r\n\r\n      const response = {\r\n        success: Object.values(evaluationResult).every(\r\n          (value) => value === true\r\n        ),\r\n        stroke: {\r\n          current: this.currentStrokeNumber,\r\n          total: this.totalStrokes,\r\n          type: currentStrokeCoords.type, // 획 타입 추가\r\n        },\r\n        detail: evaluationResult,\r\n      }\r\n\r\n      // 디버깅을 위한 로그 추가\r\n      // console.log('Evaluation result:', response)\r\n\r\n      return response\r\n    } catch (error) {\r\n      console.error('Stroke evaluation error:', {\r\n        error,\r\n        currentChar: this.currentChar,\r\n        strokeNum: this.revisedStrokeNum,\r\n        coords: currentStrokeCoords,\r\n      })\r\n\r\n      return {\r\n        success: false,\r\n        stroke: {\r\n          current: this.currentStrokeNumber,\r\n          total: this.totalStrokes,\r\n        },\r\n      }\r\n    }\r\n  }\r\n\r\n  private isNearStrokeStart(x: number, y: number): boolean {\r\n    console.log('isNearStrokeStart called:', { x, y })\r\n    console.log('Current char:', this.currentChar)\r\n    console.log('Current stroke number:', this.revisedStrokeNum)\r\n    console.log('Current tolerance:', CONFIG.tolerance)\r\n\r\n    if (!this.currentChar) return false\r\n\r\n    const tolerance = CONFIG.tolerance\r\n    const radius = CONFIG.startPoint.radius\r\n    const offset = radius * 2\r\n\r\n    let currentStrokeNumber = this.revisedStrokeNum\r\n    let currentJamo = this.jamos[this._jamoIndex]\r\n    let coords = this._pathes[this._jamoIndex]\r\n\r\n    while (currentJamo === '_') {\r\n      this._jamoIndex++\r\n      if (this._jamoIndex >= this.jamos.length) {\r\n        return false\r\n      }\r\n      currentJamo = this.jamos[this._jamoIndex]\r\n      coords = this._pathes[this._jamoIndex]\r\n    }\r\n\r\n    console.log('After skipping empty chars:', {\r\n      newIndex: this._jamoIndex,\r\n      newChar: currentJamo,\r\n      coords: coords,\r\n    })\r\n\r\n    const currentStrokeCoords = coords?.[`stroke${currentStrokeNumber}`]\r\n    if (!currentStrokeCoords) return false\r\n\r\n    // let startPoint: { x: number; y: number }\r\n    if (!this.currentChar || !(currentJamo in START_POINT_OFFSETS)) return false\r\n    const offsets =\r\n      START_POINT_OFFSETS[currentJamo as keyof typeof START_POINT_OFFSETS]\r\n    const currentOffset = offsets?.[currentStrokeNumber - 1]\r\n\r\n    if (!currentOffset) return false\r\n\r\n    const startPoint = currentStrokeCoords.start\r\n    const offsetX = currentOffset.x * offset\r\n    const offsetY = currentOffset.y * offset\r\n\r\n    return (\r\n      Math.hypot(x - (startPoint.x + offsetX), y - (startPoint.y + offsetY)) <\r\n      tolerance\r\n    )\r\n  }\r\n\r\n  // Feedback methods\r\n  private showSuccessFeedback() {\r\n    const response: KoWritingResponse = {\r\n      success: true,\r\n      stroke: {\r\n        current: this.currentStrokeNumber,\r\n        total: this.totalStrokes,\r\n      },\r\n    }\r\n    this.notifyListeners(response)\r\n    this.audioService.playSound()\r\n  }\r\n\r\n  private showFailFeedback() {\r\n    const response: KoWritingResponse = {\r\n      success: false,\r\n      stroke: {\r\n        current: this.currentStrokeNumber,\r\n        total: this.totalStrokes,\r\n        type: this._pathes[this._jamoIndex][`stroke${this.revisedStrokeNum}`]\r\n          ?.type,\r\n      },\r\n      detail: this.currentEvalResult?.detail,\r\n    }\r\n    this.notifyListeners(response)\r\n  }\r\n\r\n  private showRunningFeedback() {\r\n    const response: KoWritingResponse = {\r\n      success: true,\r\n      stroke: {\r\n        current: this.currentStrokeNumber,\r\n        total: this.totalStrokes,\r\n        type: this._pathes[this._jamoIndex][`stroke${this.revisedStrokeNum}`]\r\n          ?.type,\r\n      },\r\n    }\r\n    this.notifyListeners(response)\r\n  }\r\n\r\n  private getCoordinates(e: TouchEvent | MouseEvent) {\r\n    const rect = this.canvas.getBoundingClientRect()\r\n    const coords =\r\n      e instanceof TouchEvent\r\n        ? { x: e.touches[0].clientX, y: e.touches[0].clientY }\r\n        : { x: e.clientX, y: e.clientY }\r\n\r\n    return {\r\n      x: coords.x - rect.left,\r\n      y: coords.y - rect.top,\r\n    }\r\n  }\r\n\r\n  private calculateCharCoords(char: Jamo, rect: Rect) {\r\n    if (char === '_') return null\r\n    return CHAR_PATHS[char].calculateCoords(rect.w, rect.h, rect.x, rect.y)\r\n  }\r\n\r\n  private getStrokeCount(jamo: Jamo): number {\r\n    return CHAR_PATHS[jamo].strokes\r\n  }\r\n\r\n  // Getters and utility methods\r\n  get currentChar(): Jamo | undefined {\r\n    return this.jamos[this._jamoIndex]\r\n  }\r\n\r\n  get totalStrokes(): number {\r\n    return this.jamos\r\n      .map((jamo) => this.getStrokeCount(jamo))\r\n      .reduce((sum, stroke) => sum + stroke, 0)\r\n  }\r\n\r\n  get revisedStrokeNum() {\r\n    // let stroke = this.currentStrokeNumber\r\n    // if (this._jamoIndex === 2) {\r\n    //   return stroke - this._strokes[1]\r\n    // } else if (this._jamoIndex === 1) {\r\n    //   return stroke - this._strokes[0]\r\n    // }\r\n    // return stroke\r\n\r\n    // let stroke = this.currentStrokeNumber\r\n    // // 현재 글자의 인덱스 계산\r\n    // const charIndex = Math.floor(this._jamoIndex / 3)\r\n    // if (charIndex > 0) {\r\n    //   // 이전 글자들의 획수를 빼줌\r\n    //   const previousStrokes = this._strokes[charIndex * 3 - 1]\r\n    //   return stroke - previousStrokes\r\n    // }\r\n    // return stroke\r\n    let stroke = this.currentStrokeNumber\r\n\r\n    // 현재 글자의 인덱스 계산 (3개의 자모를 한 글자로)\r\n    const currentCharIndex = Math.floor(this._jamoIndex / 3)\r\n\r\n    if (currentCharIndex > 0) {\r\n      // 이전 글자들의 마지막 자모 인덱스\r\n      const prevCharLastJamoIndex = currentCharIndex * 3 - 1\r\n\r\n      if (this._jamoIndex % 3 === 1) {\r\n        // 현재 글자의 중성인 경우\r\n        return stroke - this._strokes[currentCharIndex * 3]\r\n      } else if (this._jamoIndex % 3 === 2) {\r\n        // 현재 글자의 종성인 경우\r\n        return stroke - this._strokes[currentCharIndex * 3 + 1]\r\n      }\r\n\r\n      // 이전 글자까지의 총 획수를 빼줌\r\n      return stroke - this._strokes[prevCharLastJamoIndex]\r\n    } else if (this._jamoIndex === 1) {\r\n      // 첫 글자의 두 번째 자모(중성)의 획 보정\r\n      return stroke - this._strokes[0]\r\n    } else if (this._jamoIndex === 2) {\r\n      // 첫 글자의 세 번째 자모(종성)의 획 보정\r\n      return stroke - this._strokes[1]\r\n    }\r\n\r\n    return stroke\r\n  }\r\n\r\n  get configuration() {\r\n    return CONFIG\r\n  }\r\n\r\n  get currentJamoIndex(): number {\r\n    return this._jamoIndex\r\n  }\r\n\r\n  get strokesArray(): number[] {\r\n    return this._strokes\r\n  }\r\n\r\n  get characterPath() {\r\n    return this.currentChar ? CHAR_PATHS[this.currentChar] : undefined\r\n  }\r\n\r\n  get pathes(): any[] {\r\n    return this._pathes\r\n  }\r\n}\r\n","/** @import { BlurParams, CrossfadeParams, DrawParams, FadeParams, FlyParams, ScaleParams, SlideParams, TransitionConfig } from './public' */\n\nimport { DEV } from 'esm-env';\nimport * as w from '../internal/client/warnings.js';\n\n/** @param {number} x */\nconst linear = (x) => x;\n\n/** @param {number} t */\nfunction cubic_out(t) {\n\tconst f = t - 1.0;\n\treturn f * f * f + 1.0;\n}\n\n/**\n * @param {number} t\n * @returns {number}\n */\nfunction cubic_in_out(t) {\n\treturn t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nfunction split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\n/**\n * Animates a `blur` filter alongside an element's opacity.\n *\n * @param {Element} node\n * @param {BlurParams} [params]\n * @returns {TransitionConfig}\n */\nexport function blur(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_in_out, amount = 5, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst f = style.filter === 'none' ? '' : style.filter;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [value, unit] = split_css_unit(amount);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `opacity: ${target_opacity - od * u}; filter: ${f} blur(${u * value}${unit});`\n\t};\n}\n\n/**\n * Animates the opacity of an element from 0 to the current opacity for `in` transitions and from the current opacity to 0 for `out` transitions.\n *\n * @param {Element} node\n * @param {FadeParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n\tconst o = +getComputedStyle(node).opacity;\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) => `opacity: ${t * o}`\n\t};\n}\n\n/**\n * Animates the x and y positions and the opacity of an element. `in` transitions animate from the provided values, passed as parameters to the element's default values. `out` transitions animate from the element's default values to the provided values.\n *\n * @param {Element} node\n * @param {FlyParams} [params]\n * @returns {TransitionConfig}\n */\nexport function fly(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, x = 0, y = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst od = target_opacity * (1 - opacity);\n\tconst [x_value, x_unit] = split_css_unit(x);\n\tconst [y_value, y_unit] = split_css_unit(y);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x_value}${x_unit}, ${(1 - t) * y_value}${y_unit});\n\t\t\topacity: ${target_opacity - od * u}`\n\t};\n}\n\nvar slide_warning = false;\n\n/**\n * Slides an element in and out.\n *\n * @param {Element} node\n * @param {SlideParams} [params]\n * @returns {TransitionConfig}\n */\nexport function slide(node, { delay = 0, duration = 400, easing = cubic_out, axis = 'y' } = {}) {\n\tconst style = getComputedStyle(node);\n\n\tif (DEV && !slide_warning && /(contents|inline|table)/.test(style.display)) {\n\t\tslide_warning = true;\n\t\tPromise.resolve().then(() => (slide_warning = false));\n\t\tw.transition_slide_display(style.display);\n\t}\n\n\tconst opacity = +style.opacity;\n\tconst primary_property = axis === 'y' ? 'height' : 'width';\n\tconst primary_property_value = parseFloat(style[primary_property]);\n\tconst secondary_properties = axis === 'y' ? ['top', 'bottom'] : ['left', 'right'];\n\tconst capitalized_secondary_properties = secondary_properties.map(\n\t\t(e) => /** @type {'Left' | 'Right' | 'Top' | 'Bottom'} */ (`${e[0].toUpperCase()}${e.slice(1)}`)\n\t);\n\tconst padding_start_value = parseFloat(style[`padding${capitalized_secondary_properties[0]}`]);\n\tconst padding_end_value = parseFloat(style[`padding${capitalized_secondary_properties[1]}`]);\n\tconst margin_start_value = parseFloat(style[`margin${capitalized_secondary_properties[0]}`]);\n\tconst margin_end_value = parseFloat(style[`margin${capitalized_secondary_properties[1]}`]);\n\tconst border_width_start_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[0]}Width`]\n\t);\n\tconst border_width_end_value = parseFloat(\n\t\tstyle[`border${capitalized_secondary_properties[1]}Width`]\n\t);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (t) =>\n\t\t\t'overflow: hidden;' +\n\t\t\t`opacity: ${Math.min(t * 20, 1) * opacity};` +\n\t\t\t`${primary_property}: ${t * primary_property_value}px;` +\n\t\t\t`padding-${secondary_properties[0]}: ${t * padding_start_value}px;` +\n\t\t\t`padding-${secondary_properties[1]}: ${t * padding_end_value}px;` +\n\t\t\t`margin-${secondary_properties[0]}: ${t * margin_start_value}px;` +\n\t\t\t`margin-${secondary_properties[1]}: ${t * margin_end_value}px;` +\n\t\t\t`border-${secondary_properties[0]}-width: ${t * border_width_start_value}px;` +\n\t\t\t`border-${secondary_properties[1]}-width: ${t * border_width_end_value}px;` +\n\t\t\t`min-${primary_property}: 0`\n\t};\n}\n\n/**\n * Animates the opacity and scale of an element. `in` transitions animate from the provided values, passed as parameters, to an element's current (default) values. `out` transitions animate from an element's default values to the provided values.\n *\n * @param {Element} node\n * @param {ScaleParams} [params]\n * @returns {TransitionConfig}\n */\nexport function scale(\n\tnode,\n\t{ delay = 0, duration = 400, easing = cubic_out, start = 0, opacity = 0 } = {}\n) {\n\tconst style = getComputedStyle(node);\n\tconst target_opacity = +style.opacity;\n\tconst transform = style.transform === 'none' ? '' : style.transform;\n\tconst sd = 1 - start;\n\tconst od = target_opacity * (1 - opacity);\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - sd * u});\n\t\t\topacity: ${target_opacity - od * u}\n\t\t`\n\t};\n}\n\n/**\n * Animates the stroke of an SVG element, like a snake in a tube. `in` transitions begin with the path invisible and draw the path to the screen over time. `out` transitions start in a visible state and gradually erase the path. `draw` only works with elements that have a `getTotalLength` method, like `<path>` and `<polyline>`.\n *\n * @param {SVGElement & { getTotalLength(): number }} node\n * @param {DrawParams} [params]\n * @returns {TransitionConfig}\n */\nexport function draw(node, { delay = 0, speed, duration, easing = cubic_in_out } = {}) {\n\tlet len = node.getTotalLength();\n\tconst style = getComputedStyle(node);\n\tif (style.strokeLinecap !== 'butt') {\n\t\tlen += parseInt(style.strokeWidth);\n\t}\n\tif (duration === undefined) {\n\t\tif (speed === undefined) {\n\t\t\tduration = 800;\n\t\t} else {\n\t\t\tduration = len / speed;\n\t\t}\n\t} else if (typeof duration === 'function') {\n\t\tduration = duration(len);\n\t}\n\treturn {\n\t\tdelay,\n\t\tduration,\n\t\teasing,\n\t\tcss: (_, u) => `\n\t\t\tstroke-dasharray: ${len};\n\t\t\tstroke-dashoffset: ${u * len};\n\t\t`\n\t};\n}\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nfunction assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n/**\n * The `crossfade` function creates a pair of [transitions](https://svelte.dev/docs/svelte/transition) called `send` and `receive`. When an element is 'sent', it looks for a corresponding element being 'received', and generates a transition that transforms the element to its counterpart's position and fades it out. When an element is 'received', the reverse happens. If there is no counterpart, the `fallback` transition is used.\n *\n * @param {CrossfadeParams & {\n * \tfallback?: (node: Element, params: CrossfadeParams, intro: boolean) => TransitionConfig;\n * }} params\n * @returns {[(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig, (node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig]}\n */\nexport function crossfade({ fallback, ...defaults }) {\n\t/** @type {Map<any, Element>} */\n\tconst to_receive = new Map();\n\t/** @type {Map<any, Element>} */\n\tconst to_send = new Map();\n\n\t/**\n\t * @param {Element} from_node\n\t * @param {Element} node\n\t * @param {CrossfadeParams} params\n\t * @returns {TransitionConfig}\n\t */\n\tfunction crossfade(from_node, node, params) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = /** @param {number} d */ (d) => Math.sqrt(d) * 30,\n\t\t\teasing = cubic_out\n\t\t} = assign(assign({}, defaults), params);\n\t\tconst from = from_node.getBoundingClientRect();\n\t\tconst to = node.getBoundingClientRect();\n\t\tconst dx = from.left - to.left;\n\t\tconst dy = from.top - to.top;\n\t\tconst dw = from.width / to.width;\n\t\tconst dh = from.height / to.height;\n\t\tconst d = Math.sqrt(dx * dx + dy * dy);\n\t\tconst style = getComputedStyle(node);\n\t\tconst transform = style.transform === 'none' ? '' : style.transform;\n\t\tconst opacity = +style.opacity;\n\t\treturn {\n\t\t\tdelay,\n\t\t\tduration: typeof duration === 'function' ? duration(d) : duration,\n\t\t\teasing,\n\t\t\tcss: (t, u) => `\n\t\t\t   opacity: ${t * opacity};\n\t\t\t   transform-origin: top left;\n\t\t\t   transform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${\n\t\t\t\t\t\tt + (1 - t) * dh\n\t\t\t\t\t});\n\t\t   `\n\t\t};\n\t}\n\n\t/**\n\t * @param {Map<any, Element>} items\n\t * @param {Map<any, Element>} counterparts\n\t * @param {boolean} intro\n\t * @returns {(node: any, params: CrossfadeParams & { key: any; }) => () => TransitionConfig}\n\t */\n\tfunction transition(items, counterparts, intro) {\n\t\t// @ts-expect-error TODO improve typings (are the public types wrong?)\n\t\treturn (node, params) => {\n\t\t\titems.set(params.key, node);\n\t\t\treturn () => {\n\t\t\t\tif (counterparts.has(params.key)) {\n\t\t\t\t\tconst other_node = counterparts.get(params.key);\n\t\t\t\t\tcounterparts.delete(params.key);\n\t\t\t\t\treturn crossfade(/** @type {Element} */ (other_node), node, params);\n\t\t\t\t}\n\t\t\t\t// if the node is disappearing altogether\n\t\t\t\t// (i.e. wasn't claimed by the other list)\n\t\t\t\t// then we need to supply an outro\n\t\t\t\titems.delete(params.key);\n\t\t\t\treturn fallback && fallback(node, params, intro);\n\t\t\t};\n\t\t};\n\t}\n\treturn [transition(to_send, to_receive, false), transition(to_receive, to_send, true)];\n}\n","<script lang=\"ts\">\n  import { fade } from 'svelte/transition'\n  export let image: string\n  export let ratio: number = 1\n  export let size: number = 0\n  // let { onclick, image, ratio }: {image: string, ratio: } = $props();\n  $: imageSize = Math.min(size, 500) * ratio\n</script>\n\n<section\n  class=\"kw-success\"\n  transition:fade={{ duration: 150 }}\n  style=\"--feedback-size: {size}px; --max-img-size: {imageSize}px\"\n>\n  <button\n    aria-label=\"success\"\n    style=\"--feedback-img-path: url({image})\"\n    on:click\n  ></button>\n</section>\n\n<style lang=\"scss\">\n  .kw-success {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    button {\n      border-radius: 8px;\n      border: 1px solid transparent;\n      padding: 0.6em 1.2em;\n      cursor: pointer;\n      transition: border-color 0.25s;\n      position: absolute;\n      inset: 0;\n      padding: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: transparent;\n      background-image: var(--feedback-img-path);\n      background-size: contain;\n      background-position: center;\n      background-repeat: no-repeat;\n      margin: 2px;\n      &:hover {\n        border-color: #646cff;\n      }\n      &:active {\n        transform: translate(2px, 2px);\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\">\r\n  import { onMount } from 'svelte'\r\n  import { CanvasHandler, type KoWritingResponse } from './model/canvas-handler'\r\n  import SuccessPanel from './SuccessPanel.svelte'\r\n  import type { Jamo } from './model/jamo'\r\n\r\n  const {\r\n    ready,\r\n    end,\r\n    feedback,\r\n    chars\r\n  }: {\r\n    ready?: (handler: CanvasHandler) => void\r\n    end?: (res: KoWritingResponse) => void\r\n    feedback?: (res: KoWritingResponse) => void\r\n    chars: Jamo[]\r\n  } = $props()\r\n\r\n  let canvasEl: HTMLCanvasElement\r\n  let handler = $state<CanvasHandler>()\r\n  let { showFeedback: feedbackVisible, image } = $state({\r\n    showFeedback: false,\r\n    image: ''\r\n  })\r\n  let canvasSize = 500\r\n\r\n  const hideFeedback = () => {\r\n    feedbackVisible = false\r\n    image = ''\r\n    if (feedback) {\r\n      feedback(undefined)\r\n    }\r\n  }\r\n  const handleRepsonse = (res: KoWritingResponse) => {\r\n    if (end) {\r\n      end(res)\r\n    }\r\n    feedbackVisible = res.success && res.stroke.current === res.stroke.total\r\n    image = 'https://kr.object.ncloudstorage.com/tesis/media/o0.png'\r\n    if (feedback) {\r\n      feedback(res)\r\n    }\r\n  }\r\n  onMount(() => {\r\n    handler = new CanvasHandler(canvasEl!, { char: chars[0] })\r\n    handler.bindEventListener(handleRepsonse)\r\n    if (ready) {\r\n      ready(handler)\r\n    }\r\n  })\r\n</script>\r\n\r\n<div class=\"canvas-container\">\r\n  <canvas width=\"500\" height=\"500\" bind:this={canvasEl}></canvas>\r\n  {#if handler && feedbackVisible}\r\n    <SuccessPanel\r\n      size={canvasSize}\r\n      {image}\r\n      ratio={0.7}\r\n      on:click={hideFeedback}\r\n    />\r\n  {/if}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  .canvas-container {\r\n    position: relative;\r\n    width: 100%;\r\n    overflow-x: auto;\r\n    canvas {\r\n      display: block;\r\n      margin: 0 auto;\r\n      background-color: #2f2f2f;\r\n    }\r\n  }\r\n</style>\r\n","import {} from 'svelte/store';\nexport * from './storage/index.js';\nconst dummy = () => { };\nconst updateStore = (store, callback) => {\n    store.update((state) => {\n        callback(state);\n        return state;\n    });\n};\nexport class SvelteStore {\n    constructor() { }\n    subscribe(callback) {\n        return this.store.subscribe(callback);\n    }\n    update(callback) {\n        updateStore(this.store, callback || dummy);\n    }\n    set() {\n        this.update();\n    }\n}\n","import type { Jamo } from '../model/jamo'\n\n// 초성 리스트\nconst CHOSUNG = [\n  'ㄱ',\n  'ㄲ',\n  'ㄴ',\n  'ㄷ',\n  'ㄸ',\n  'ㄹ',\n  'ㅁ',\n  'ㅂ',\n  'ㅃ',\n  'ㅅ',\n  'ㅆ',\n  'ㅇ',\n  'ㅈ',\n  'ㅉ',\n  'ㅊ',\n  'ㅋ',\n  'ㅌ',\n  'ㅍ',\n  'ㅎ',\n] as const\n\n// 중성 리스트\nconst JUNGSUNG = [\n  'ㅏ',\n  'ㅐ',\n  'ㅑ',\n  'ㅒ',\n  'ㅓ',\n  'ㅔ',\n  'ㅕ',\n  'ㅖ',\n  'ㅗ',\n  'ㅘ',\n  'ㅙ',\n  'ㅚ',\n  'ㅛ',\n  'ㅜ',\n  'ㅝ',\n  'ㅞ',\n  'ㅟ',\n  'ㅠ',\n  'ㅡ',\n  'ㅢ',\n  'ㅣ',\n] as const\n\n// 종성 리스트\nconst JONGSUNG = [\n  '_',\n  'ㄱ',\n  'ㄲ',\n  'ㄳ',\n  'ㄴ',\n  'ㄵ',\n  'ㄶ',\n  'ㄷ',\n  'ㄹ',\n  'ㄺ',\n  'ㄻ',\n  'ㄼ',\n  'ㄽ',\n  'ㄾ',\n  'ㄿ',\n  'ㅀ',\n  'ㅁ',\n  'ㅂ',\n  'ㅄ',\n  'ㅅ',\n  'ㅆ',\n  'ㅇ',\n  'ㅈ',\n  'ㅊ',\n  'ㅋ',\n  'ㅌ',\n  'ㅍ',\n  'ㅎ',\n] as const\n\n/**\n * 한글 음절을 자모로 분해\n * @param char 분해할 한글 음절\n * @returns 초성, 중성, 종성 배열\n */\nexport function decomposeHangul(char: string): Jamo[] {\n  const charCode = char.charCodeAt(0)\n\n  // 한글 음절이 아닌 경우\n  if (charCode < 0xac00 || charCode > 0xd7a3) {\n    throw new Error('한글 음절이 아닙니다.')\n  }\n\n  // 분해 공식 적용\n  const baseCode = charCode - 0xac00\n  const cho = Math.floor(baseCode / (21 * 28))\n  const jung = Math.floor((baseCode % (21 * 28)) / 28)\n  const jong = baseCode % 28\n\n  return [CHOSUNG[cho] as Jamo, JUNGSUNG[jung] as Jamo, JONGSUNG[jong] as Jamo]\n}\n\n/**\n * 낱말의 각 글자를 자모 배열로 분해\n * @param word 분해할 낱말\n * @returns 각 글자의 자모 배열\n */\nexport function decomposeWord(word: string): Jamo[][] {\n  return word.split('').map((char) => decomposeHangul(char))\n}\n\n/**\n * 자모를 조합하여 완성된 한글 문자를 생성\n * @param jamos 조합할 자모 배열 (2-3글자)\n * @returns 완성된 한글 문자 또는 null\n */\nexport function combineJamo(jamos: Jamo[]): string | null {\n  if (jamos.length < 2 || jamos.length > 3) {\n    return null\n  }\n\n  const cho = CHOSUNG.indexOf(jamos[0] as (typeof CHOSUNG)[number])\n  const jung = JUNGSUNG.indexOf(jamos[1] as (typeof JUNGSUNG)[number])\n  const jong = jamos[2]\n    ? JONGSUNG.indexOf(jamos[2] as (typeof JONGSUNG)[number])\n    : 0\n\n  if (cho !== -1 && jung !== -1 && jong !== -1) {\n    return String.fromCharCode(0xac00 + cho * 21 * 28 + jung * 28 + jong)\n  }\n  return null\n}\n","import { SvelteStore } from 'svelte-store-class'\nimport { writable, type Writable } from 'svelte/store'\nimport { decomposeWord } from './hangul-utils'\nimport { WordPattern } from '../model/patterns'\n\nexport class WordStore extends SvelteStore<WordStore> {\n  protected store: Writable<WordStore> = writable(this as WordStore)\n  private index: number = 0\n  constructor(readonly words: string[] = []) {\n    super()\n    if (words.length === 0) {\n      words.push('한글')\n    }\n  }\n  get currentWord() {\n    return this.words[this.index]\n  }\n  reset(words: string[], index: number = 0) {\n    this.words.splice(0, this.words.length)\n    this.words.push(...words)\n    this.index = index\n    this.update()\n  }\n  selectAt(index: number) {\n    let idx = Math.max(index, 0)\n    idx = Math.min(idx, this.words.length - 1)\n    if (this.index !== idx) {\n      this.index = idx\n      this.update()\n    }\n  }\n  movePrev(): boolean {\n    const idx = Math.max(0, this.index - 1)\n    const changed = idx < this.index\n    if (changed) {\n      this.index = idx\n      this.update()\n    }\n    return changed\n  }\n  moveNext(): boolean {\n    const idx = Math.min(this.words.length - 1, this.index + 1)\n    const changed = idx > this.index\n    if (changed) {\n      this.index = idx\n      this.update()\n    }\n    return changed\n  }\n  getCurrentPattern() {\n    return new WordPattern(decomposeWord(this.currentWord))\n  }\n}\n","<script lang=\"ts\">\n  export let tol: number = 10\n  export let min: number = 10\n  export let max: number = 40\n  export let step: number = 5\n\n  const decreaseTolerance = () => {\n    if (tol - step >= min) {\n      tol -= step\n    }\n  }\n\n  const increaseTolerance = () => {\n    if (tol + step <= max) {\n      tol += step\n    }\n  }\n</script>\n\n<div class=\"tol-control\">\n  <label for=\"\">정확도</label>\n  <button\n    id=\"decreaseTol\"\n    class=\"tol-button\"\n    on:click={decreaseTolerance}\n    disabled={tol <= min}\n  >\n    -\n  </button>\n  <span id=\"tolValue\">{tol / 5 - 1}</span>\n  <button\n    id=\"increaseTol\"\n    class=\"tol-button\"\n    on:click={increaseTolerance}\n    disabled={tol >= max}\n  >\n    +\n  </button>\n</div>\n\n<style lang=\"scss\">\n  .tol-control {\n    display: flex;\n    align-items: center;\n    gap: 0.1rem;\n    margin: 0.5rem 1rem;\n    // padding: 1rem;\n    font-size: 0.9rem;\n    font-weight: bold;\n    justify-content: center;\n\n    label {\n      color: #110f0f;\n    }\n\n    .tol-button {\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      border: 1px solid #e5e7eb;\n      //background: #ebda80;\n      color: #374151;\n      font-weight: 600;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 1rem 1rem;\n\n      &:hover {\n        border: none;\n      }\n\n      &:hover:not(:disabled) {\n        background: #f3f4f6;\n      }\n\n      &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n      &#decreaseTol {\n        background: #ff666636;\n      }\n      &#increaseTol {\n        background: #b7f0a136;\n      }\n    }\n\n    #tolValue {\n      min-width: 36px;\n      color: #374151;\n      font-weight: 500;\n      text-align: center;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { type KoWritingResponse } from './model/canvas-handler'\n\n  // 피드백 상세 정보에 대한 타입 정의\n  interface StrokeDetail {\n    startOk: boolean\n    middleOk: boolean\n    endOk: boolean\n    firstPathOk: boolean\n    secondPathOk: boolean\n  }\n\n  interface WritingResponse {\n    success: boolean\n    stroke: {\n      current: number\n      total: number\n      type?: 'line' | 'circle' | 'quadratic' | 'path'\n    }\n    detail?: StrokeDetail\n  }\n\n  export let result: WritingResponse | undefined = undefined\n\n  function isCircleCharacter(response: WritingResponse) {\n    // strokesArray 등의 정보를 통해 현재 그리는 문자가 ㅇ인지 확인\n    // 실제 구현에서는 적절한 방법으로 ㅇ 여부를 판단해야 함\n    return false // 임시 반환값\n  }\n\n  // 상세 피드백 메시지 생성 함수\n  function getDetailMessage(detail: any) {\n    if (!detail) return ''\n    const messages = []\n\n    if (!detail.startOk) messages.push('시작점')\n    if (!detail.firstPathOk) messages.push('첫번째 선')\n    if (!detail.middleOk) messages.push('중간점')\n    if (!detail.secondPathOk) messages.push('두번째 선')\n    if (!detail.endOk) messages.push('끝점')\n\n    if (messages.length === 0) return ''\n    return `${messages.join(', ')}을 더 정확하게!`\n  }\n</script>\n\n<div class=\"fb\">\n  {#if result && result.stroke.current > 0}\n    {#if result.success}\n      {#if result.stroke.current === result.stroke.total}\n        <span class=\"success\">잘했어!</span>\n      {:else}\n        <span>{result.stroke.current + 1}번째 획을 써보세요.</span>\n      {/if}\n    {:else}\n      <div class=\"error-content\">\n        <img\n          src=\"https://kr.object.ncloudstorage.com/tesis/media/x0.png\"\n          alt=\"실패\"\n        />\n        <div class=\"error-messages\">\n          <span class=\"error\">\n            {#if result.stroke.type === 'circle'}\n              선을 다시!\n            {:else}\n              {result.stroke.current}번째 획을 다시!\n            {/if}\n          </span>\n          {#if result.detail}\n            {@const detailMessage = getDetailMessage(result.detail)}\n            {#if detailMessage && result.stroke.type != 'circle'}\n              <span class=\"error detail\">{detailMessage}</span>\n            {/if}\n          {/if}\n        </div>\n      </div>\n    {/if}\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  .fb {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 1.5rem;\n    font-weight: bold;\n    min-height: 4.5rem;\n\n    .error-content {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n\n    img {\n      height: 3.5rem;\n      width: 3.5rem;\n      vertical-align: middle;\n    }\n\n    .error-messages {\n      display: flex;\n      flex-direction: column;\n      gap: 0.3rem;\n    }\n\n    .error {\n      color: #ef4444;\n\n      &.detail {\n        font-size: 1.2rem;\n      }\n    }\n\n    .success {\n      color: #22c55e;\n    }\n  }\n</style>\n","export class TTSService {\n  private isSpeaking = false\n  private speechQueue: string[] = []\n  private speech: SpeechSynthesisUtterance | null = null\n\n  constructor() {\n    if (!window.speechSynthesis) {\n      console.log('TTS not supported')\n      return\n    }\n\n    this.speech = new SpeechSynthesisUtterance()\n    this.speech.lang = 'ko-KR'\n    this.speech.volume = 1\n    this.speech.rate = 0.85\n    this.speech.pitch = 1\n\n    this.speech.onstart = () => (this.isSpeaking = true)\n    this.speech.onend = () => {\n      this.isSpeaking = false\n      if (this.speechQueue.length > 0) {\n        const nextText = this.speechQueue.shift()\n        if (nextText) this.speak(nextText)\n      }\n    }\n  }\n\n  speak(text: string) {\n    if (!this.speech) return\n\n    window.speechSynthesis.cancel()\n    this.speech.text = text\n\n    try {\n      window.speechSynthesis.speak(this.speech)\n    } catch (error) {\n      console.error('TTS error:', error)\n    }\n  }\n}\n","import { CHAR_PATHS, CONFIG, type PathCommand } from '../model/canvas-config'\nimport type { CanvasHandler } from '../model/canvas-handler.ts'\nimport { DrawingService } from '../model/drawing-service'\nimport type { Jamo } from '../model/jamo'\nimport { TTSService } from '../lib/tts'\nimport { combineJamo } from '../lib/hangul-utils'\n\nconst tts = new TTSService()\n\nexport class CharacterAnimation {\n  private startTime: number\n  private baseTime = 100 // 2000에서 1000으로 변경\n  private drawingService: DrawingService\n  private strokeSpeedFactors = {\n    line: {\n      single: 1, // 한 번에 그리는 직선\n      double: 1.5 // 꺾인 선(2단계로 그리는 선)\n    },\n    circle: 1.2, // 원형\n    quadratic: 1.3, // 곡선\n    path: {\n      horizontal: 0.8, // 가로선\n      curve: 1.2 // 곡선 부분\n    }\n  }\n  private currentChar: string = ''\n  private lastAnimatedIndex: number = -1\n\n  private completedStrokes: Array<Array<[number, number]>> = []\n\n  // private animationStrokes: Map<number, Array<Array<[number, number]>>> =\n  //   new Map()\n\n  private isAnimating: boolean = false\n  private animationFrameId: number | null = null\n\n  constructor(readonly handler: CanvasHandler, readonly pathes: any) {\n    this.startTime = Date.now()\n    this.drawingService = new DrawingService(handler.canvas)\n\n    if (!handler.jamos || !Array.isArray(handler.jamos)) {\n      throw new Error('Handler jamos is not properly initialized')\n    }\n\n    // console.log('Current mode:', handler.mode)\n    // console.log('Jamos:', handler.jamos)\n    // console.log('Pathes:', pathes)\n  }\n\n  private calculateStrokeLength(stroke: any): number {\n    switch (stroke.type) {\n      case 'line':\n        if (stroke.middle) {\n          return (\n            this.getLineLength(stroke.start, stroke.middle) +\n            this.getLineLength(stroke.middle, stroke.end)\n          )\n        }\n        return this.getLineLength(stroke.start, stroke.end)\n\n      case 'circle':\n        return Math.PI * 2 * Math.max(stroke.radiusX, stroke.radiusY)\n\n      case 'quadratic':\n        return this.getQuadraticCurveLength(\n          stroke.start,\n          stroke.control,\n          stroke.end\n        )\n\n      case 'path':\n        return this.getPathLength(stroke.commands)\n\n      default:\n        return 100 // 기본 길이\n    }\n  }\n\n  private getLineLength(\n    start: { x: number; y: number },\n    end: { x: number; y: number }\n  ): number {\n    return Math.sqrt(\n      Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2)\n    )\n  }\n\n  private getQuadraticCurveLength(\n    start: { x: number; y: number },\n    control: { x: number; y: number },\n    end: { x: number; y: number }\n  ): number {\n    const segments = 10\n    let length = 0\n    let prevPoint = start\n\n    for (let i = 1; i <= segments; i++) {\n      const t = i / segments\n      const point = {\n        x:\n          Math.pow(1 - t, 2) * start.x +\n          2 * (1 - t) * t * control.x +\n          Math.pow(t, 2) * end.x,\n        y:\n          Math.pow(1 - t, 2) * start.y +\n          2 * (1 - t) * t * control.y +\n          Math.pow(t, 2) * end.y\n      }\n      length += this.getLineLength(prevPoint, point)\n      prevPoint = point\n    }\n\n    return length\n  }\n\n  private getPathLength(commands: PathCommand[]): number {\n    let length = 0\n    let prevPoint = { x: 0, y: 0 }\n\n    commands.forEach((cmd) => {\n      switch (cmd.type) {\n        case 'M':\n          prevPoint = { x: cmd.x ?? 0, y: cmd.y ?? 0 }\n          break\n        case 'L':\n          if (cmd.x !== undefined && cmd.y !== undefined) {\n            length += this.getLineLength(prevPoint, { x: cmd.x, y: cmd.y })\n            prevPoint = { x: cmd.x, y: cmd.y }\n          }\n          break\n        case 'Q':\n          if (cmd.control && cmd.end) {\n            length += this.getQuadraticCurveLength(\n              prevPoint,\n              cmd.control,\n              cmd.end\n            )\n            prevPoint = cmd.end\n          }\n          break\n      }\n    })\n\n    return length\n  }\n\n  private getStrokeDuration(stroke: any): number {\n    const length = this.calculateStrokeLength(stroke)\n    let speedFactor = 1\n\n    switch (stroke.type) {\n      case 'line':\n        speedFactor = stroke.middle\n          ? this.strokeSpeedFactors.line.double\n          : this.strokeSpeedFactors.line.single\n        break\n      case 'circle':\n        speedFactor = this.strokeSpeedFactors.circle\n        break\n      case 'quadratic':\n        speedFactor = this.strokeSpeedFactors.quadratic\n        break\n      case 'path':\n        speedFactor = 1\n        break\n    }\n\n    return this.baseTime * speedFactor * (length / 100)\n  }\n\n  animate(progress: number, currentCharacter: Jamo, coords: any) {\n    const { handler } = this\n\n    if (currentCharacter === '_') return\n\n    if (!handler.jamos || !coords) {\n      console.error('Required data is missing')\n      return\n    }\n\n    let currentJamoIndex = handler.jamos.indexOf(currentCharacter)\n    if (currentJamoIndex === -1) {\n      console.error('Current character not found in handler.jamos.')\n      return\n    }\n\n    if (currentJamoIndex === 0 && handler.currentJamoIndex === 2) {\n      currentJamoIndex = 2\n    }\n\n    const prevStrokes =\n      currentJamoIndex > 0 ? handler.strokesArray[currentJamoIndex - 1] : 0\n    const currentTotalStrokes =\n      handler.strokesArray[currentJamoIndex] - prevStrokes\n    const strokeDuration = 1 / currentTotalStrokes\n    const currentStrokeIndex = Math.floor(progress / strokeDuration)\n    const strokeProgress =\n      (progress - currentStrokeIndex * strokeDuration) / strokeDuration\n\n    // 자모 위치에 따른 색상 설정\n\n    const actualStrokeIndex = currentStrokeIndex + 1\n    if (coords[`stroke${actualStrokeIndex}`]) {\n      const currentStroke = coords[`stroke${actualStrokeIndex}`]\n      let points: Array<[number, number]> = []\n\n      switch (currentStroke.type) {\n        case 'line':\n          points = this.animateLine(currentStroke, strokeProgress)\n          break\n        case 'circle':\n          points = this.animateCircle(currentStroke, strokeProgress)\n          break\n        case 'quadratic':\n          points = this.animateQuadratic(currentStroke, strokeProgress)\n          break\n        case 'path':\n          points = this.animatePath(currentStroke, strokeProgress)\n          break\n      }\n\n      this.drawingService.drawUserStroke(points)\n\n      if (strokeProgress === 1) {\n        this.completedStrokes.push(points)\n      }\n    }\n\n    this.drawingService.restore() // 스타일 복원\n    this.lastAnimatedIndex = currentJamoIndex\n  }\n\n  private animateLine(\n    stroke: any,\n    strokeProgress: number\n  ): Array<[number, number]> {\n    const points: Array<[number, number]> = []\n\n    if (stroke.middle) {\n      if (strokeProgress <= 0.5) {\n        // 첫 번째 선분 애니메이션\n        const progress = strokeProgress * 2\n        points.push([stroke.start.x, stroke.start.y])\n\n        for (let t = 0; t <= progress; t += 0.02) {\n          const x = stroke.start.x + (stroke.middle.x - stroke.start.x) * t\n          const y = stroke.start.y + (stroke.middle.y - stroke.start.y) * t\n          points.push([x, y])\n        }\n        // 첫 번째 선분이 완료되면 중간점 정확히 추가\n        if (progress >= 0.9) {\n          points.push([stroke.middle.x, stroke.middle.y])\n        }\n      } else {\n        // 두 번째 선분 애니메이션\n        const progress = (strokeProgress - 0.5) * 2\n\n        // 첫 번째 선분은 완성된 상태로 추가\n        points.push([stroke.start.x, stroke.start.y])\n        points.push([stroke.middle.x, stroke.middle.y])\n\n        for (let t = 0; t <= progress; t += 0.02) {\n          const x = stroke.middle.x + (stroke.end.x - stroke.middle.x) * t\n          const y = stroke.middle.y + (stroke.end.y - stroke.middle.y) * t\n          points.push([x, y])\n        }\n        // 두 번째 선분이 완료되면 끝점 정확히 추가\n        if (progress >= 0.9) {\n          points.push([stroke.end.x, stroke.end.y])\n        }\n      }\n    } else {\n      // 직선 애니메이션\n      points.push([stroke.start.x, stroke.start.y])\n\n      for (let t = 0; t <= strokeProgress; t += 0.02) {\n        const x = stroke.start.x + (stroke.end.x - stroke.start.x) * t\n        const y = stroke.start.y + (stroke.end.y - stroke.start.y) * t\n        points.push([x, y])\n      }\n      // 선이 완료되면 끝점 정확히 추가\n      if (strokeProgress >= 0.9) {\n        points.push([stroke.end.x, stroke.end.y])\n      }\n    }\n\n    return points\n  }\n\n  private animateCircle(\n    stroke: any,\n    strokeProgress: number\n  ): Array<[number, number]> {\n    const points: Array<[number, number]> = []\n    const startAngle = -Math.PI / 2\n    const endAngle = startAngle - Math.PI * 2 * strokeProgress\n\n    // 원을 그리기 위한 포인트 생성\n    for (let angle = startAngle; angle >= endAngle; angle -= 0.05) {\n      const x = stroke.center.x + Math.cos(angle) * stroke.radiusX\n      const y = stroke.center.y + Math.sin(angle) * stroke.radiusY\n      points.push([x, y])\n    }\n\n    // 마지막 포인트가 정확하게 끝점에 위치하도록 보장\n    if (strokeProgress >= 0.9) {\n      const finalX = stroke.center.x + Math.cos(endAngle) * stroke.radiusX\n      const finalY = stroke.center.y + Math.sin(endAngle) * stroke.radiusY\n      points.push([finalX, finalY])\n    }\n\n    return points\n  }\n\n  private animateQuadratic(\n    stroke: any,\n    strokeProgress: number\n  ): Array<[number, number]> {\n    const points: Array<[number, number]> = []\n    points.push([stroke.start.x, stroke.start.y])\n\n    // 베지어 곡선을 따라 포인트 생성\n    for (let t = 0; t <= strokeProgress; t += 0.02) {\n      const x =\n        Math.pow(1 - t, 2) * stroke.start.x +\n        2 * (1 - t) * t * stroke.control.x +\n        Math.pow(t, 2) * stroke.end.x\n\n      const y =\n        Math.pow(1 - t, 2) * stroke.start.y +\n        2 * (1 - t) * t * stroke.control.y +\n        Math.pow(t, 2) * stroke.end.y\n\n      points.push([x, y])\n    }\n\n    // 애니메이션이 완료되면 정확한 끝점 추가\n    if (strokeProgress >= 0.9) {\n      points.push([stroke.end.x, stroke.end.y])\n    }\n\n    return points\n  }\n\n  private animatePath(\n    stroke: any,\n    strokeProgress: number\n  ): Array<[number, number]> {\n    const points: Array<[number, number]> = []\n    const commands = stroke.commands\n\n    if (strokeProgress <= 0.5) {\n      // 첫 번째 가로선 애니메이션\n      const progress = strokeProgress * 2\n      points.push([commands[0].x, commands[0].y])\n\n      const x = commands[0].x + (commands[1].x - commands[0].x) * progress\n      points.push([x, commands[0].y])\n\n      // 더 조밀한 간격으로 포인트 생성\n      for (let t = 0; t <= progress; t += 0.02) {\n        const x = commands[0].x + (commands[1].x - commands[0].x) * t\n        points.push([x, commands[0].y])\n      }\n      // 첫 번째 부분이 완료되면 정확한 끝점 추가\n      if (progress >= 0.8) {\n        points.push([commands[1].x, commands[1].y])\n      }\n    } else {\n      // 곡선 부분 애니메이션\n      const progress = (strokeProgress - 0.5) * 2\n\n      // 첫 번째 가로선은 완성된 상태로 추가\n      points.push([commands[0].x, commands[0].y])\n      points.push([commands[1].x, commands[1].y])\n\n      // 베지어 곡선 부분\n      for (let t = 0; t <= progress; t += 0.02) {\n        const x =\n          Math.pow(1 - t, 2) * commands[1].x +\n          2 * (1 - t) * t * commands[2].control.x +\n          Math.pow(t, 2) * commands[2].end.x\n\n        const y =\n          Math.pow(1 - t, 2) * commands[1].y +\n          2 * (1 - t) * t * commands[2].control.y +\n          Math.pow(t, 2) * commands[2].end.y\n\n        points.push([x, y])\n      }\n      // 애니메이션이 완료되면 정확한 끝점 추가\n      if (progress >= 0.9) {\n        points.push([commands[2].end.x, commands[2].end.y])\n      }\n    }\n\n    return points\n  }\n\n  // private getPointOnLine(\n  //   startX: number,\n  //   startY: number,\n  //   endX: number,\n  //   endY: number,\n  //   progress: number\n  // ): [number, number] {\n  //   return [\n  //     startX + (endX - startX) * progress,\n  //     startY + (endY - startY) * progress\n  //   ]\n  // }\n\n  private handleTTS(index: number) {\n    if (this.handler.mode === 'jamo') {\n      const currentJamo = this.handler.jamos[index]\n      if (this.currentChar !== currentJamo) {\n        tts.speak(currentJamo)\n        this.currentChar = currentJamo\n      }\n    } else {\n      const cho = Math.floor(index / 3) * 3\n\n      const jamos = this.handler.jamos.slice(cho, cho + 3)\n      if (jamos[0] && jamos[1]) {\n        const char = combineJamo(jamos)\n        if (char && this.currentChar !== char) {\n          tts.speak(char)\n          this.currentChar = char\n        }\n      }\n    }\n  }\n\n  start() {\n    const { handler } = this\n    const { jamos } = handler\n\n    // 이미 실행 중인 애니메이션이 있다면 중단\n    if (this.isAnimating) {\n      if (this.animationFrameId) {\n        cancelAnimationFrame(this.animationFrameId)\n      }\n      this.drawingService.clearCanvas()\n      handler.drawPathes()\n      handler.drawStartPoints()\n    }\n\n    this.startTime = Date.now()\n    this.lastAnimatedIndex = -1\n    this.completedStrokes = []\n    // this.animationStrokes.clear()\n\n    // 각 자모의 전체 획에 대한 시간 계산\n    const jamoTimings = jamos.map((jamo, index) => {\n      // 먼저 strokes가 null이 아닌지 확인\n      const strokes = this.pathes[index]\n      let totalDuration = 0\n      let strokeCount = 0\n\n      // null이나 undefined가 아닐 때만 처리\n      if (strokes && typeof strokes === 'object') {\n        // 실제 획수 계산을 위해 CHAR_PATHS 참조\n        const charPath = CHAR_PATHS[jamo]\n        if (charPath) {\n          strokeCount = charPath.strokes\n          // 각 획의 시간 계산\n          for (let i = 1; i <= strokeCount; i++) {\n            const stroke = strokes[`stroke${i}`]\n            if (stroke) {\n              totalDuration += this.getStrokeDuration(stroke)\n            }\n          }\n        }\n\n        // 획 사이의 간격 추가\n        if (strokeCount > 1) {\n          totalDuration += (strokeCount - 1) * 100\n        }\n      }\n\n      return {\n        start: 0,\n        duration: totalDuration\n      }\n    })\n\n    // 시작 시간 계산\n    let currentTime = 0\n    jamoTimings.forEach((timing) => {\n      timing.start = currentTime\n      currentTime += timing.duration + 150 // 300에서 150으로 변경\n    })\n\n    const animate = () => {\n      const elapsed = Date.now() - this.startTime\n      let index = jamoTimings.findLastIndex((timing) => timing.start <= elapsed)\n      if (index === -1) index = 0\n\n      const timing = jamoTimings[index]\n      const progress = Math.min((elapsed - timing.start) / timing.duration, 1)\n\n      const jamoPosition = index % 3\n      let animationColor\n      switch (jamoPosition) {\n        case 0:\n          animationColor = '#FFD700CC'\n          break\n        case 1:\n          animationColor = '#9ACD32CC'\n          break\n        case 2:\n          animationColor = '#FFD700CC' //'#B19CD9CC'\n          break\n        default:\n          animationColor = CONFIG.paths.drawing.color\n      }\n      this.drawingService.setAnimationStyle(animationColor)\n\n      // 새로운 인덱스로 진입했을 때만 TTS 실행\n      if (index !== this.lastAnimatedIndex) {\n        this.handleTTS(index)\n        this.lastAnimatedIndex = index\n      }\n\n      this.animate(progress, handler.jamos[index], this.pathes[index])\n      handler.drawStartPoints()\n\n      // 애니메이션 완료 처리\n      if (progress >= 1 && index === jamos.length - 1) {\n        this.isAnimating = false\n        this.animationFrameId = null\n        setTimeout(() => {\n          // this.drawingService.clearCanvas()\n          handler.drawPathes()\n          handler.drawStartPoints()\n        }, 1000)\n      } else {\n        requestAnimationFrame(animate)\n      }\n    }\n\n    // this.drawingService.clearCanvas()\n    animate()\n  }\n\n  get duration() {\n    const { handler } = this\n    const { jamos } = handler\n\n    // 모든 자모의 총 지속 시간 계산\n    let totalDuration = 0\n    jamos.forEach((jamo, index) => {\n      const strokes = this.pathes[index]\n      let jamoDuration = 0\n      let strokeCount = 0\n\n      for (let i = 1; i <= Object.keys(strokes).length; i++) {\n        const stroke = strokes[`stroke${i}`]\n        if (stroke) {\n          jamoDuration += this.getStrokeDuration(stroke)\n          strokeCount++\n        }\n      }\n\n      jamoDuration += (strokeCount - 1) * 100 // 200에서 100으로 변경\n      totalDuration += jamoDuration + 150 // 300에서 150으로 변경\n    })\n\n    return totalDuration\n  }\n}\n","<script lang=\"ts\">\n  export let size: number = 500\n  export let min: number = 200\n  export let max: number = 600\n  export let step: number = 100\n\n  const decreaseSize = () => {\n    console.log('사이즈 감소')\n    if (size - step >= min - 100) {\n      size -= step\n    }\n  }\n\n  const increaseSize = () => {\n    console.log('사이즈 증가')\n    if (size + step <= max) {\n      size += step\n    }\n  }\n</script>\n\n<div class=\"size-control\">\n  <label for=\"\">크기</label>\n  <button\n    id=\"decreaseSize\"\n    class=\"size-button\"\n    on:click={decreaseSize}\n    disabled={size <= min}\n  >\n    -\n  </button>\n  <span id=\"sizeValue\">{size / 100 - 1}</span>\n  <button\n    id=\"increaseSize\"\n    class=\"size-button\"\n    on:click={increaseSize}\n    disabled={size >= max}\n  >\n    +\n  </button>\n</div>\n\n<style lang=\"scss\">\n  .size-control {\n    display: flex;\n    align-items: center;\n    gap: 0.1rem;\n    margin: 0.5rem 1rem;\n    // padding: 1rem;\n    font-size: 0.9rem;\n    font-weight: bold;\n    justify-content: center;\n\n    label {\n      color: #110f0f;\n    }\n\n    .size-button {\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      border: 1px solid #e5e7eb;\n      //background: #ebda80;\n      color: #374151;\n      font-weight: 600;\n      cursor: pointer;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 1rem 1rem;\n\n      &:hover {\n        border: none;\n      }\n\n      &:hover:not(:disabled) {\n        background: #f3f4f6;\n      }\n\n      &:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n      &#decreaseSize {\n        background: #ff666636;\n      }\n      &#increaseSize {\n        background: #b7f0a136;\n      }\n    }\n\n    #sizeValue {\n      min-width: 20px;\n      color: #374151;\n      font-weight: 500;\n      text-align: center;\n    }\n  }\n</style>\n","<svelte:options customElement={{ tag: 'ko-writing-node', shadow: 'none' }} />\n\n<script lang=\"ts\">\n  import '@/assets/common.scss'\n  import { type CanvasHandler } from './model/canvas-handler'\n  import CanvasPanel from './CanvasPanel.svelte'\n  import { writable, type Writable } from 'svelte/store'\n  import { WordStore } from './lib/word-store'\n  import { type KoWritingResponse } from './types/types'\n  import ToleranceControl from './ToleranceControl.svelte'\n  import FeedbackPanel from './FeedbackPanel.svelte'\n  import { CharacterAnimation } from './view/char-animation'\n  import { createEventDispatcher } from 'svelte'\n  import SizeControl from './SizeControl.svelte'\n  export let words: string[] = ['나무']\n  export let index: number = 0\n  export let canvasSize: number = 300\n  export let tolerance: number = 40\n\n  // console.log('[KOW]', words, index)\n  const wordStore = new WordStore()\n  let canvasHandler: CanvasHandler\n  let activeChars: Writable<Jamo[]> = writable([])\n  let result: KoWritingResponse | undefined = undefined\n\n  const dispatch = createEventDispatcher<{ dir: -1 | 1 }>()\n\n  const watchFeedback = (res: KoWritingResponse) => {\n    result = res\n    if (!res) {\n      nextSyllable()\n    }\n  }\n  const clearFeedback = () => {\n    result = undefined\n  }\n  const changeWord = (dir: 1 | -1) => {\n    canvasHandler.initialize()\n    const pattern = wordStore.getCurrentPattern()\n    canvasHandler.setPattern(pattern, pattern.chars)\n    clearFeedback()\n    dispatch('dir', dir)\n  }\n  const nextSyllable = () => {\n    if (wordStore.moveNext()) {\n      changeWord(1)\n    }\n  }\n  const prevSyllable = () => {\n    if (wordStore.movePrev()) {\n      changeWord(-1)\n    }\n  }\n\n  const startAnimation = () => {\n    const animation = new CharacterAnimation(\n      canvasHandler,\n      canvasHandler.pathes\n    )\n    animation.start()\n  }\n  const replaceWords = (words: string[]) => {\n    wordStore.reset(words, index)\n    const pattern = wordStore.getCurrentPattern()\n    canvasHandler.setPattern(pattern, pattern.chars)\n  }\n  const watchIndex = (idx) => {\n    wordStore.selectAt(idx)\n  }\n  const watchCanvasSize = (size) => {\n    if (canvasHandler) {\n      canvasHandler.updateCanvasSize(size)\n      replaceWords(words)\n    }\n  }\n  $: {\n    if (canvasHandler) {\n      canvasHandler.updateTolerance(tolerance)\n      canvasHandler.updateCanvasSize(300)\n      replaceWords(words)\n    }\n  }\n  $: watchIndex(index)\n  $: watchCanvasSize(canvasSize)\n</script>\n\n<div class=\"control-section\">\n  <SizeControl bind:size={canvasSize} />\n  <div class=\"button-container\">\n    <button class=\"prev-button\" on:click={prevSyllable}>이전</button>\n    <button class=\"guide-button\" on:click={startAnimation}>미리보기</button>\n    <button\n      class=\"clear-button\"\n      on:click={() => {\n        canvasHandler?.initialize()\n        clearFeedback()\n      }}>지우기</button\n    >\n    <button class=\"next-button\" on:click={nextSyllable}>다음</button>\n  </div>\n  <ToleranceControl bind:tol={tolerance} />\n</div>\n<div class=\"main-content\">\n  <div class=\"canvas-section\">\n    <div class=\"main-canvas\">\n      <FeedbackPanel {result} />\n      <CanvasPanel\n        ready={(handler) => (canvasHandler = handler)}\n        feedback={watchFeedback}\n        chars={$activeChars}\n      />\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .control-section {\n    display: flex;\n    justify-content: center;\n    .button-container {\n      display: flex;\n      gap: 1rem;\n      margin: 0.5rem;\n      align-items: center;\n      justify-content: center;\n      --color-gray: #4b5563;\n      --color-orange: #f97316;\n      --color-blue: #3b82f6;\n      button {\n        padding: 0.5rem 1rem;\n        color: white;\n        border: none;\n        border-radius: 0.25rem;\n        cursor: pointer;\n        transition: opacity 0.2s;\n\n        &:hover {\n          opacity: 0.9;\n        }\n\n        &:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n      }\n\n      .prev-button,\n      .next-button {\n        background-color: var(--color-gray);\n      }\n\n      .guide-button {\n        background-color: var(--color-orange);\n      }\n\n      .clear-button {\n        background-color: var(--color-blue);\n      }\n    }\n  }\n  .main-content {\n    --color-background: #f4f4b5;\n    .canvas-section {\n      display: flex;\n      position: relative;\n      flex-direction: column;\n      flex-wrap: nowrap;\n      .main-canvas {\n        position: relative;\n        background-color: var(--color-background);\n        border-radius: 0.5rem;\n        display: flex;\n        justify-content: center;\n        flex-direction: column;\n        align-items: center;\n        width: 100%;\n        box-sizing: border-box;\n        padding: 16px;\n      }\n    }\n  }\n</style>\n"],"names":["PUBLIC_VERSION","legacy_mode_flag","tracing_mode_flag","enable_legacy_mode_flag","PROPS_IS_IMMUTABLE","PROPS_IS_RUNES","PROPS_IS_UPDATED","PROPS_IS_BINDABLE","PROPS_IS_LAZY_INITIAL","TRANSITION_GLOBAL","TEMPLATE_FRAGMENT","TEMPLATE_USE_IMPORT_NODE","HYDRATION_START","HYDRATION_START_ELSE","HYDRATION_END","HYDRATION_ERROR","UNINITIALIZED","PASSIVE_EVENTS","is_passive_event","name","DEV","is_array","index_of","array_from","object_keys","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","is_function","thing","noop","run","fn","run_all","arr","i","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","LEGACY_DERIVED_PROP","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LEGACY_PROPS","equals","value","safe_not_equal","a","b","safe_equals","effect_in_teardown","rune","effect_in_unowned_derived","effect_orphan","effect_update_depth_exceeded","hydration_failed","props_invalid_value","key","state_descriptors_fixed","state_prototype_fixed","state_unsafe_local_read","state_unsafe_mutation","source","v","stack","signal","state","push_derived_source","mutable_source","initial_value","immutable","s","component_context","_a","mutable_state","active_reaction","derived_sources","set_derived_sources","set","is_runes","e.state_unsafe_mutation","internal_set","increment_write_version","mark_reactions","active_effect","untracked_writes","set_untracked_writes","status","reactions","runes","length","reaction","flags","set_signal_status","schedule_effect","hydration_mismatch","location","hydrating","set_hydrating","hydrate_node","set_hydrate_node","node","w.hydration_mismatch","hydrate_next","get_next_sibling","reset","remove_nodes","depth","data","next","proxy","parent","prev","prototype","sources","is_proxied_array","version","metadata","_","prop","descriptor","e.state_descriptors_fixed","target","ls","n","update_version","receiver","exists","get","has","other_s","own_keys","e.state_prototype_fixed","d","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","child","is_text","text","first_child","fragment","first","sibling","count","next_sibling","last_sibling","type","clear_text_content","derived","parent_derived","derived_safe_equal","destroy_derived_children","children","destroy_derived","destroy_effect","get_derived_parent_effect","execute_derived","prev_active_effect","set_active_effect","update_reaction","update_derived","skip_reaction","remove_reactions","validate_effect","e.effect_orphan","e.effect_in_unowned_derived","is_destroying_effect","e.effect_in_teardown","push_effect","effect","parent_effect","parent_last","create_effect","sync","push","is_root","previously_flushing_effect","is_flushing_effect","set_is_flushing_effect","update_effect","e","inert","teardown","user_effect","defer","context","user_pre_effect","render_effect","effect_root","component_root","options","fulfil","pause_effect","legacy_pre_effect","deps","token","untrack","legacy_pre_effect_reset","check_dirtiness","template_effect","block","branch","execute_effect_teardown","previously_destroying_effect","previous_reaction","set_is_destroying_effect","set_active_reaction","destroy_effect_deriveds","deriveds","destroy_effect_children","remove_dom","destroy_block_effect_children","removed","end","transitions","transition","unlink_effect","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","flush_tasks","lifecycle_outside_component","FLUSH_MICROTASK","FLUSH_SYNC","is_throwing_error","scheduler_mode","last_scheduled_effect","queued_root_effects","flush_count","new_deps","skipped_deps","write_version","read_version","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","propagate_error","error","current","should_rethrow_error","handle_error","previous_effect","schedule_possible_effect_self_invalidation","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_skip_reaction","prev_derived_sources","previous_component_context","result","remove_reaction","index","new_length","start_index","dep","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","collected_effects","process_effects","flush_queued_effects","effects","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","parent_sibling","flush_sync","previous_scheduler_mode","is_derived","e.state_unsafe_local_read","STATUS_MASK","props","pop","component","context_stack_item","component_effects","component_effect","deep_read_state","deep_read","visited","proto","descriptors","without_reactive_context","all_registered_events","root_event_handles","create_event","event_name","dom","handler","target_handler","event","handle_event_propagation","capture","passive","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","create_fragment_from_html","html","elem","assign_nodes","start","template","content","is_fragment","use_import_node","has_start","clone","t","comment","frag","anchor","append","should_intro","set_text","str","mount","_mount","hydrate","was_hydrating","previous_hydrate_node","instance","e.hydration_failed","document_listeners","Component","events","intro","registered_events","event_handle","unmount","anchor_node","ctx","mounted_components","if_block","elseif","consequent_effect","alternate_effect","condition","has_branch","set_branch","flag","update_branch","new_condition","mismatch","is_else","append_styles","css","root","style","set_attribute","element","attribute","skip_warning","attributes","get_setters","setters_cache","setters","element_proto","now","raf","run_tasks","task","loop","fulfill","dispatch_event","css_property_to_camelcase","parts","word","css_to_keyframe","keyframe","part","property","formatted_property","linear","get_fn","get_params","is_global","direction","current_options","overflow","outro","get_options","animate","counterpart","t2","on_finish","is_intro","aborted","o","delay","tick","easing","keyframes","styles","get_t","animation","t1","delta","duration","needs_overflow_hidden","time","is_bound_this","bound_value","element_or_component","bind_this","update","get_value","get_parts","old_parts","init","callbacks","changed","observe_all","fns","bubble_event","$$props","onMount","init_update_callbacks","cleanup","create_custom_event","detail","bubbles","cancelable","createEventDispatcher","active_component_context","l","subscribe_to_store","store","invalidate","unsub","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","subscribe","is_store_binding","IS_UNMOUNTED","store_get","store_name","stores","entry","is_synchronous_callback","get_store","setup_stores","capture_store_binding","previous_is_store_binding","with_parent_branch","fallback","bindable","lazy","is_store_sub","prop_value","is_entry_props","setter","fallback_value","fallback_dirty","fallback_used","get_fallback","e.props_invalid_value","getter","derived_getter","legacy_parent","mutation","from_child","was_from_child","inner_current_value","current_value","parent_value","child_value","createClassComponent","Svelte4Component","__privateAdd","_events","_instance","add_source","__privateSet","__privateGet","cb","args","SvelteElement","$$componentCtor","$$slots","use_shadow_dom","__publicField","listener","create_slot","slot","existing_slots","get_custom_elements_slots","get_custom_element_value","attribute_value","attr","_oldValue","newValue","attribute_name","props_definition","transform","create_custom_element","slots","exports","extend","Class","CharState","char","rightMoeum","CONFIG","CHAR_PATHS","width","height","x","y","margin","centerX","topY","bottomY","nextChar","centerY","radiusX","radiusY","strokeWidth","totalHeight","baseRadius","spacing","firstStrokeY","secondStrokeY","ellipseTop","circleCenterY","centerX1","centerX2","leftOffset","availableWidth","firstPartWidth","secondPartWidth","margin2","topY2","spacing2","firstLineWidth","secondLineWidth","START_POINT_OFFSETS","distanceToLine","point","lineStart","lineEnd","A","B","C","D","dot","lenSq","param","xx","yy","dx","dy","StrokeEvaluator","tolerance","currentChar","strokeNum","totalChars","num","xOffset","points","minDist","minIndex","dist","stroke","startPoint","firstPoint","adjustedStartPoint","effectiveStartPoint","offsetInfo","offsets","offsetDistance","offsetPoint","lineDistance","startOk","distance","currentTolerance","middlePoint","middleOk","endPoint","lastPoint","adjustedLastPoint","endOk","middle","effectiveStart","angle","center","radiusOk","normalizedDistance","prevAngle","angleChanges","change","control","maxDeviation","deviationPoints","minDistance","curvePoint","maxDeviationAllowed","maxDeviationPointsRatio","coords","isDrawingBroken","offsetApplied","effectivePath","middleIndex","firstHalf","secondHalf","firstPathOk","secondPathOk","pathOk","hasMinSize","strokeLength","minRequiredLength","maxAngleGap","prevPoint","maxPointGap","pointDistance","completionThreshold","isComplete","isContinuous","hasNaturalFlow","curveOk","directLength","expectedLength","lengthOk","pathStartPoint","splitPoint","pathStartOk","splitPointOk","endPointOk","splitIndex","straightPart","straightPathOk","curvePart","curveLength","expectedCurveLength","minLengthRatio","hasSufficientCurve","maxGap","gap","isCurveContinuous","DrawingService","canvas","rect","number","fontSize","commands","command","startX","startY","endX","endY","size","color","startAngle","endAngle","controlX","controlY","maxStrokes","strokeCount","AudioService","Rect","_x","w","h","NullRect","RegionBlock","BasePattern","regions","region","_Patterns","jamos","Pattern0","second","third","isEmpty","vowels","patterns","patternName","config","rule","list","rules","PatternClass","PatternClasses","Patterns","Pattern20","Pattern21","Pattern22","Pattern221","Pattern222","Pattern223","Pattern23","Pattern24","Pattern241","Pattern242","Pattern243","Pattern25","Pattern26","Pattern271","Pattern272","Pattern273","Pattern274","Pattern28","Pattern281","Pattern29","Pattern291","Pattern30","Pattern31","Pattern32","Pattern321","Pattern322","Pattern323","Pattern33","Pattern331","Pattern34","Pattern341","Pattern342","Pattern343","Pattern35","Pattern36","Pattern371","Pattern372","Pattern373","Pattern374","Pattern38","Pattern381","Pattern39","Pattern391","WordPattern","chars","widthPerChar","pattern","rects","emptyRect","CanvasHandler","ch","jamo","k","tabId","prevWidth","prevHeight","sizeRatio","charCount","widthRatio","heightRatio","tol","baseHeight","evalResult","response","offset","offsetDist","offsetData","character","currentStroke","currentStrokeCoords","evaluationResult","currentStrokeNumber","currentJamo","currentOffset","offsetX","offsetY","_b","sum","currentCharIndex","prevCharLastJamoIndex","fade","image","$.prop","ratio","imageSize","$.set_attribute","section","$.transition","ready","feedback","canvasEl","$.state","tmp","feedbackVisible","canvasSize","hideFeedback","$.set","handleRepsonse","res","$.proxy","$.bind_this","$$value","$.get","$$render","consequent","dummy","updateStore","SvelteStore","CHOSUNG","JUNGSUNG","JONGSUNG","decomposeHangul","charCode","baseCode","cho","jung","jong","decomposeWord","combineJamo","WordStore","words","idx","min","max","step","decreaseTolerance","increaseTolerance","button","button_1","getDetailMessage","messages","$.template_effect","$.set_text","alternate","consequent_2","alternate_1","detailMessage","$.derived_safe_equal","consequent_3","consequent_4","consequent_1","alternate_2","consequent_5","TTSService","nextText","tts","CharacterAnimation","pathes","cmd","speedFactor","progress","currentCharacter","currentJamoIndex","prevStrokes","strokeDuration","currentStrokeIndex","strokeProgress","actualStrokeIndex","finalX","finalY","jamoTimings","strokes","totalDuration","charPath","currentTime","timing","elapsed","jamoPosition","animationColor","jamoDuration","decreaseSize","increaseSize","wordStore","canvasHandler","$.mutable_state","activeChars","dispatch","watchFeedback","nextSyllable","clearFeedback","changeWord","dir","prevSyllable","startAnimation","replaceWords","watchIndex","watchCanvasSize","$activeChars","$.event","button_2"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,51,54]}